export type GeoPoint = { lon: number, lat: number }

export interface EcsCoreFields {
	/**
	* @timestamp
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: core
	* Elasticsearch type: date
	* Description: Date/time when the event originated. This is the date/time extracted from the event, typically representing when the event was generated by the source.
	If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.
	Required field for all events.
	* Example: 2016-05-23T08:05:34.853Z
	*/
	"@timestamp": Date,

	/**
	* agent.build.original
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-agent.html
	* Field Set: agent
	* Level: core
	* Elasticsearch type: keyword
	* Description: Extended build information for the agent. This field is intended to contain any build information that a data source may provide, no specific formatting is required.
	* Example: metricbeat version 7.6.0 (amd64), libbeat 7.6.0 [6a23e8f8f30f5001ba344e4e54d8d9cb82cb107c built 2020-02-05 23:10:10 +0000 UTC]
	*/
	"agent.build.original": string,

	/**
	* agent.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-agent.html
	* Field Set: agent
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of this agent (if one exists). Example: For Beats this would be beat.id.
	* Example: 8a4f500d
	*/
	"agent.id": string,

	/**
	* agent.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-agent.html
	* Field Set: agent
	* Level: core
	* Elasticsearch type: keyword
	* Description: Custom name of the agent. This is a name that can be given to an agent. This can be helpful if for example two Filebeat instances are running on the same host but a human readable separation is needed on which Filebeat instance data is coming from.
	If no name is given, the name is often left empty.
	* Example: foo
	*/
	"agent.name": string,

	/**
	* agent.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-agent.html
	* Field Set: agent
	* Level: core
	* Elasticsearch type: keyword
	* Description: Type of the agent. The agent type always stays the same and should be given by the agent used. In case of Filebeat the agent would always be Filebeat also if two Filebeat instances are run on the same machine.
	* Example: filebeat
	*/
	"agent.type": string,

	/**
	* agent.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-agent.html
	* Field Set: agent
	* Level: core
	* Elasticsearch type: keyword
	* Description: Version of the agent.
	* Example: 6.0.0-rc2
	*/
	"agent.version": string,

	/**
	* client.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: long
	* Description: Bytes sent from the client to the server.
	* Example: 184
	*/
	"client.bytes": number,

	/**
	* client.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Client domain.
	* Example: <None>
	*/
	"client.domain": string,

	/**
	* client.geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"client.geo.city_name": string,

	/**
	* client.geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"client.geo.continent_name": string,

	/**
	* client.geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"client.geo.country_iso_code": string,

	/**
	* client.geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"client.geo.country_name": string,

	/**
	* client.geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"client.geo.location": GeoPoint,

	/**
	* client.geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"client.geo.region_iso_code": string,

	/**
	* client.geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"client.geo.region_name": string,

	/**
	* client.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: ip
	* Description: IP address of the client (IPv4 or IPv6).
	* Example: <None>
	*/
	"client.ip": string,

	/**
	* client.mac
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: MAC address of the client.
	* Example: <None>
	*/
	"client.mac": string,

	/**
	* client.packets
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: long
	* Description: Packets sent from the client to the server.
	* Example: 12
	*/
	"client.packets": number,

	/**
	* client.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: long
	* Description: Port of the client.
	* Example: <None>
	*/
	"client.port": number,

	/**
	* client.user.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the user.
	* Example: <None>
	*/
	"client.user.id": string,

	/**
	* client.user.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Short name or login of the user.
	* Example: albert
	*/
	"client.user.name": string,

	/**
	* code_signature.exists
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: core
	* Elasticsearch type: boolean
	* Description: Boolean to capture if a signature is present.
	* Example: true
	*/
	"code_signature.exists": boolean,

	/**
	* code_signature.subject_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: core
	* Elasticsearch type: keyword
	* Description: Subject name of the code signer
	* Example: Microsoft Corporation
	*/
	"code_signature.subject_name": string,

	/**
	* container.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique container id.
	* Example: <None>
	*/
	"container.id": string,

	/**
	* destination.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: long
	* Description: Bytes sent from the destination to the source.
	* Example: 184
	*/
	"destination.bytes": number,

	/**
	* destination.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Destination domain.
	* Example: <None>
	*/
	"destination.domain": string,

	/**
	* destination.geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"destination.geo.city_name": string,

	/**
	* destination.geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"destination.geo.continent_name": string,

	/**
	* destination.geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"destination.geo.country_iso_code": string,

	/**
	* destination.geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"destination.geo.country_name": string,

	/**
	* destination.geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"destination.geo.location": GeoPoint,

	/**
	* destination.geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"destination.geo.region_iso_code": string,

	/**
	* destination.geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"destination.geo.region_name": string,

	/**
	* destination.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: ip
	* Description: IP address of the destination (IPv4 or IPv6).
	* Example: <None>
	*/
	"destination.ip": string,

	/**
	* destination.mac
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: MAC address of the destination.
	* Example: <None>
	*/
	"destination.mac": string,

	/**
	* destination.packets
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: long
	* Description: Packets sent from the destination to the source.
	* Example: 12
	*/
	"destination.packets": number,

	/**
	* destination.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: long
	* Description: Port of the destination.
	* Example: <None>
	*/
	"destination.port": number,

	/**
	* destination.user.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the user.
	* Example: <None>
	*/
	"destination.user.id": string,

	/**
	* destination.user.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Short name or login of the user.
	* Example: albert
	*/
	"destination.user.name": string,

	/**
	* dll.code_signature.exists
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: core
	* Elasticsearch type: boolean
	* Description: Boolean to capture if a signature is present.
	* Example: true
	*/
	"dll.code_signature.exists": boolean,

	/**
	* dll.code_signature.subject_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: core
	* Elasticsearch type: keyword
	* Description: Subject name of the code signer
	* Example: Microsoft Corporation
	*/
	"dll.code_signature.subject_name": string,

	/**
	* dll.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the library. This generally maps to the name of the file on disk.
	* Example: kernel32.dll
	*/
	"dll.name": string,

	/**
	* ecs.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-ecs.html
	* Field Set: ecs
	* Level: core
	* Elasticsearch type: keyword
	* Description: ECS version this event conforms to. `ecs.version` is a required field and must exist in all events. When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
	* Example: 1.0.0
	*/
	"ecs.version": string,

	/**
	* error.code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: core
	* Elasticsearch type: keyword
	* Description: Error code describing the error.
	* Example: <None>
	*/
	"error.code": string,

	/**
	* error.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier for the error.
	* Example: <None>
	*/
	"error.id": string,

	/**
	* error.message
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: core
	* Elasticsearch type: text
	* Description: Error message.
	* Example: <None>
	*/
	"error.message": string,

	/**
	* event.action
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: The action captured by the event. This describes the information in the event. It is more specific than `event.category`. Examples are `group-add`, `process-started`, `file-created`. The value is normally defined by the implementer.
	* Example: user-password-change
	*/
	"event.action": string,

	/**
	* event.category
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy. `event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.
	This field is an array. This will allow proper categorization of some events that fall in multiple categories.
	* Example: authentication
	*/
	"event.category": ('authentication' | 'configuration' | 'database' | 'driver' | 'file' | 'host' | 'iam' | 'intrusion_detection' | 'malware' | 'network' | 'package' | 'process' | 'web')[],

	/**
	* event.created
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: date
	* Description: event.created contains the date/time when the event was first read by an agent, or by your pipeline. This field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.
	In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.
	In case the two timestamps are identical, @timestamp should be used.
	* Example: 2016-05-23T08:05:34.857Z
	*/
	"event.created": Date,

	/**
	* event.dataset
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the dataset. If an event source publishes more than one type of log or events (e.g. access log, error log), the dataset is used to specify which one the event comes from.
	It's recommended but not required to start the dataset name with the module name, followed by a dot, then the dataset name.
	* Example: apache.access
	*/
	"event.dataset": string,

	/**
	* event.duration
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: long
	* Description: Duration of the event in nanoseconds. If event.start and event.end are known this value should be the difference between the end and start time.
	* Example: <None>
	*/
	"event.duration": number,

	/**
	* event.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique ID to describe the event.
	* Example: 8a4f500d
	*/
	"event.id": string,

	/**
	* event.ingested
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: date
	* Description: Timestamp when an event arrived in the central data store. This is different from `@timestamp`, which is when the event originally occurred.  It's also different from `event.created`, which is meant to capture the first time an agent saw the event.
	In normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`.
	* Example: 2016-05-23T08:05:35.101Z
	*/
	"event.ingested": Date,

	/**
	* event.kind
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy. `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.
	The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.
	* Example: alert
	*/
	"event.kind": ('alert' | 'event' | 'metric' | 'state' | 'pipeline_error' | 'signal'),

	/**
	* event.module
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the module this data is coming from. If your monitoring agent supports the concept of modules or plugins to process events of a given source (e.g. Apache logs), `event.module` should contain the name of this module.
	* Example: apache
	*/
	"event.module": string,

	/**
	* event.original
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: Raw text message of entire event. Used to demonstrate log integrity. This field is not indexed and doc_values are disabled. It cannot be searched, but it can be retrieved from `_source`.
	* Example: Sep 19 08:26:10 host CEF:0&#124;Security&#124; threatmanager&#124;1.0&#124;100&#124; worm successfully stopped&#124;10&#124;src=10.0.0.1 dst=2.1.2.2spt=1232
	*/
	"event.original": string,

	/**
	* event.outcome
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is one of four ECS Categorization Fields, and indicates the lowest level in the ECS category hierarchy. `event.outcome` simply denotes whether the event represents a success or a failure from the perspective of the entity that produced the event.
	Note that when a single transaction is described in multiple events, each event may populate different values of `event.outcome`, according to their perspective.
	Also note that in the case of a compound event (a single event that contains multiple logical events), this field should be populated with the value that best captures the overall success or failure from the perspective of the event producer.
	Further note that not all events will have an associated outcome. For example, this field is generally not populated for metric events, events with `event.type:info`, or any events for which an outcome does not make logical sense.
	* Example: success
	*/
	"event.outcome": ('failure' | 'success' | 'unknown'),

	/**
	* event.risk_score
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: float
	* Description: Risk score or priority of the event (e.g. security solutions). Use your system's original value here.
	* Example: <None>
	*/
	"event.risk_score": number,

	/**
	* event.severity
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: long
	* Description: The numeric severity of the event according to your event source. What the different severity values mean can be different between sources and use cases. It's up to the implementer to make sure severities are consistent across events from the same source.
	The Syslog severity belongs in `log.syslog.severity.code`. `event.severity` is meant to represent the severity according to the event source (e.g. firewall, IDS). If the event source does not publish its own severity, you may optionally copy the `log.syslog.severity.code` to `event.severity`.
	* Example: 7
	*/
	"event.severity": number,

	/**
	* event.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy. `event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.
	This field is an array. This will allow proper categorization of some events that fall in multiple event types.
	* Example: <None>
	*/
	"event.type": ('access' | 'admin' | 'allowed' | 'change' | 'connection' | 'creation' | 'deletion' | 'denied' | 'end' | 'error' | 'group' | 'info' | 'installation' | 'protocol' | 'start' | 'user')[],

	/**
	* file.code_signature.exists
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: core
	* Elasticsearch type: boolean
	* Description: Boolean to capture if a signature is present.
	* Example: true
	*/
	"file.code_signature.exists": boolean,

	/**
	* file.code_signature.subject_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: core
	* Elasticsearch type: keyword
	* Description: Subject name of the code signer
	* Example: Microsoft Corporation
	*/
	"file.code_signature.subject_name": string,

	/**
	* geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"geo.city_name": string,

	/**
	* geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"geo.continent_name": string,

	/**
	* geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"geo.country_iso_code": string,

	/**
	* geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"geo.country_name": string,

	/**
	* geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"geo.location": GeoPoint,

	/**
	* geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"geo.region_iso_code": string,

	/**
	* geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"geo.region_name": string,

	/**
	* host.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Operating system architecture.
	* Example: x86_64
	*/
	"host.architecture": string,

	/**
	* host.geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"host.geo.city_name": string,

	/**
	* host.geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"host.geo.continent_name": string,

	/**
	* host.geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"host.geo.country_iso_code": string,

	/**
	* host.geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"host.geo.country_name": string,

	/**
	* host.geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"host.geo.location": GeoPoint,

	/**
	* host.geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"host.geo.region_iso_code": string,

	/**
	* host.geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"host.geo.region_name": string,

	/**
	* host.hostname
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Hostname of the host. It normally contains what the `hostname` command returns on the host machine.
	* Example: <None>
	*/
	"host.hostname": string,

	/**
	* host.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique host id. As hostname is not always unique, use values that are meaningful in your environment.
	Example: The current usage of `beat.name`.
	* Example: <None>
	*/
	"host.id": string,

	/**
	* host.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: ip
	* Description: Host ip addresses.
	* Example: <None>
	*/
	"host.ip": string[],

	/**
	* host.mac
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Host mac addresses.
	* Example: <None>
	*/
	"host.mac": string[],

	/**
	* host.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the host. It can contain what `hostname` returns on Unix systems, the fully qualified domain name, or a name specified by the user. The sender decides which value to use.
	* Example: <None>
	*/
	"host.name": string,

	/**
	* host.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Type of host. For Cloud providers this can be the machine type like `t2.medium`. If vm, this could be the container, for example, or other information meaningful in your environment.
	* Example: <None>
	*/
	"host.type": string,

	/**
	* host.user.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the user.
	* Example: <None>
	*/
	"host.user.id": string,

	/**
	* host.user.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Short name or login of the user.
	* Example: albert
	*/
	"host.user.name": string,

	/**
	* labels
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: core
	* Elasticsearch type: object
	* Description: Custom key/value pairs. Can be used to add meta information to events. Should not contain nested objects. All values are stored as keyword.
	Example: `docker` and `k8s` labels.
	* Example: {"application": "foo-bar", "env": "production"}
	*/
	"labels": object,

	/**
	* log.level
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: core
	* Elasticsearch type: keyword
	* Description: Original log level of the log event. If the source of the event provides a log level or textual severity, this is the one that goes in `log.level`. If your source doesn't specify one, you may put your event transport's severity here (e.g. Syslog severity).
	Some examples are `warn`, `err`, `i`, `informational`.
	* Example: error
	*/
	"log.level": string,

	/**
	* log.logger
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: core
	* Elasticsearch type: keyword
	* Description: The name of the logger inside an application. This is usually the name of the class which initialized the logger, or can be a custom name.
	* Example: org.elasticsearch.bootstrap.Bootstrap
	*/
	"log.logger": string,

	/**
	* log.original
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is the original log message and contains the full log message before splitting it up in multiple parts. In contrast to the `message` field which can contain an extracted part of the log message, this field contains the original, full log message. It can have already some modifications applied like encoding or new lines removed to clean up the log message.
	This field is not indexed and doc_values are disabled so it can't be queried but the value can be retrieved from `_source`.
	* Example: Sep 19 08:26:10 localhost My log
	*/
	"log.original": string,

	/**
	* message
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: core
	* Elasticsearch type: text
	* Description: For log events the message field contains the log message, optimized for viewing in a log viewer. For structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.
	If multiple messages exist, they can be combined into one message.
	* Example: Hello World
	*/
	"message": string,

	/**
	* network.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: long
	* Description: Total bytes transferred in both directions. If `source.bytes` and `destination.bytes` are known, `network.bytes` is their sum.
	* Example: 368
	*/
	"network.bytes": number,

	/**
	* network.direction
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: keyword
	* Description: Direction of the network traffic. Recommended values are:
	  * ingress
	  * egress
	  * inbound
	  * outbound
	  * internal
	  * external
	  * unknown
	
	When mapping events from a host-based monitoring context, populate this field from the host's point of view, using the values "ingress" or "egress".
	When mapping events from a network or perimeter-based monitoring context, populate this field from the point of view of the network perimeter, using the values "inbound", "outbound", "internal" or "external".
	Note that "internal" is not crossing perimeter boundaries, and is meant to describe communication between two hosts within the perimeter. Note also that "external" is meant to describe traffic between two hosts that are external to the perimeter. This could for example be useful for ISPs or VPN service providers.
	* Example: inbound
	*/
	"network.direction": string,

	/**
	* network.forwarded_ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: ip
	* Description: Host IP address when the source IP address is the proxy.
	* Example: 192.1.1.2
	*/
	"network.forwarded_ip": string,

	/**
	* network.packets
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: long
	* Description: Total packets transferred in both directions. If `source.packets` and `destination.packets` are known, `network.packets` is their sum.
	* Example: 24
	*/
	"network.packets": number,

	/**
	* network.protocol
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: keyword
	* Description: L7 Network protocol name. ex. http, lumberjack, transport protocol. The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
	* Example: http
	*/
	"network.protocol": string,

	/**
	* network.transport
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: keyword
	* Description: Same as network.iana_number, but instead using the Keyword name of the transport layer (udp, tcp, ipv6-icmp, etc.) The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
	* Example: tcp
	*/
	"network.transport": string,

	/**
	* network.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: keyword
	* Description: In the OSI Model this would be the Network Layer. ipv4, ipv6, ipsec, pim, etc The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
	* Example: ipv4
	*/
	"network.type": string,

	/**
	* observer.geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"observer.geo.city_name": string,

	/**
	* observer.geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"observer.geo.continent_name": string,

	/**
	* observer.geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"observer.geo.country_iso_code": string,

	/**
	* observer.geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"observer.geo.country_name": string,

	/**
	* observer.geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"observer.geo.location": GeoPoint,

	/**
	* observer.geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"observer.geo.region_iso_code": string,

	/**
	* observer.geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"observer.geo.region_name": string,

	/**
	* observer.hostname
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Hostname of the observer.
	* Example: <None>
	*/
	"observer.hostname": string,

	/**
	* observer.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: ip
	* Description: IP addresses of the observer.
	* Example: <None>
	*/
	"observer.ip": string[],

	/**
	* observer.mac
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: MAC addresses of the observer
	* Example: <None>
	*/
	"observer.mac": string[],

	/**
	* observer.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: The type of the observer the data is coming from. There is no predefined list of observer types. Some examples are `forwarder`, `firewall`, `ids`, `ips`, `proxy`, `poller`, `sensor`, `APM server`.
	* Example: firewall
	*/
	"observer.type": string,

	/**
	* observer.vendor
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Vendor name of the observer.
	* Example: Symantec
	*/
	"observer.vendor": string,

	/**
	* observer.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Observer version.
	* Example: <None>
	*/
	"observer.version": string,

	/**
	* process.code_signature.exists
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: core
	* Elasticsearch type: boolean
	* Description: Boolean to capture if a signature is present.
	* Example: true
	*/
	"process.code_signature.exists": boolean,

	/**
	* process.code_signature.subject_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: core
	* Elasticsearch type: keyword
	* Description: Subject name of the code signer
	* Example: Microsoft Corporation
	*/
	"process.code_signature.subject_name": string,

	/**
	* process.parent.code_signature.exists
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: core
	* Elasticsearch type: boolean
	* Description: Boolean to capture if a signature is present.
	* Example: true
	*/
	"process.parent.code_signature.exists": boolean,

	/**
	* process.parent.code_signature.subject_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: core
	* Elasticsearch type: keyword
	* Description: Subject name of the code signer
	* Example: Microsoft Corporation
	*/
	"process.parent.code_signature.subject_name": string,

	/**
	* process.parent.pid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: core
	* Elasticsearch type: long
	* Description: Process id.
	* Example: 4242
	*/
	"process.parent.pid": number,

	/**
	* process.pid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: core
	* Elasticsearch type: long
	* Description: Process id.
	* Example: 4242
	*/
	"process.pid": number,

	/**
	* registry.data.strings
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Content when writing string types. Populated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `"1"`).
	* Example: ["C:\rta\red_ttp\bin\myapp.exe"]
	*/
	"registry.data.strings": string[],

	/**
	* registry.data.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Standard registry type for encoding contents
	* Example: REG_SZ
	*/
	"registry.data.type": string,

	/**
	* registry.hive
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Abbreviated name for the hive.
	* Example: HKLM
	*/
	"registry.hive": string,

	/**
	* registry.key
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Hive-relative path of keys.
	* Example: SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe
	*/
	"registry.key": string,

	/**
	* registry.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Full path, including hive, key and value
	* Example: HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe\Debugger
	*/
	"registry.path": string,

	/**
	* registry.value
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the value written.
	* Example: Debugger
	*/
	"registry.value": string,

	/**
	* server.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: long
	* Description: Bytes sent from the server to the client.
	* Example: 184
	*/
	"server.bytes": number,

	/**
	* server.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Server domain.
	* Example: <None>
	*/
	"server.domain": string,

	/**
	* server.geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"server.geo.city_name": string,

	/**
	* server.geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"server.geo.continent_name": string,

	/**
	* server.geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"server.geo.country_iso_code": string,

	/**
	* server.geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"server.geo.country_name": string,

	/**
	* server.geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"server.geo.location": GeoPoint,

	/**
	* server.geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"server.geo.region_iso_code": string,

	/**
	* server.geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"server.geo.region_name": string,

	/**
	* server.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: ip
	* Description: IP address of the server (IPv4 or IPv6).
	* Example: <None>
	*/
	"server.ip": string,

	/**
	* server.mac
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: MAC address of the server.
	* Example: <None>
	*/
	"server.mac": string,

	/**
	* server.packets
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: long
	* Description: Packets sent from the server to the client.
	* Example: 12
	*/
	"server.packets": number,

	/**
	* server.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: long
	* Description: Port of the server.
	* Example: <None>
	*/
	"server.port": number,

	/**
	* server.user.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the user.
	* Example: <None>
	*/
	"server.user.id": string,

	/**
	* server.user.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Short name or login of the user.
	* Example: albert
	*/
	"server.user.name": string,

	/**
	* service.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the running service. If the service is comprised of many nodes, the `service.id` should be the same for all nodes. This id should uniquely identify the service. This makes it possible to correlate logs and metrics for one specific service, no matter which particular node emitted the event.
	Note that if you need to see the events from one specific host of the service, you should filter on that `host.name` or `host.id` instead.
	* Example: d37e5ebfe0ae6c4972dbe9f0174a1637bb8247f6
	*/
	"service.id": string,

	/**
	* service.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the service data is collected from. The name of the service is normally user given. This allows for distributed services that run on multiple hosts to correlate the related instances based on the name.
	In the case of Elasticsearch the `service.name` could contain the cluster name. For Beats the `service.name` is by default a copy of the `service.type` field if no name is specified.
	* Example: elasticsearch-metrics
	*/
	"service.name": string,

	/**
	* service.state
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: core
	* Elasticsearch type: keyword
	* Description: Current state of the service.
	* Example: <None>
	*/
	"service.state": string,

	/**
	* service.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: core
	* Elasticsearch type: keyword
	* Description: The type of the service data is collected from. The type can be used to group and correlate logs and metrics from one service type.
	Example: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`.
	* Example: elasticsearch
	*/
	"service.type": string,

	/**
	* service.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: core
	* Elasticsearch type: keyword
	* Description: Version of the service the data was collected from. This allows to look at a data set only for a specific version of a service.
	* Example: 3.2.4
	*/
	"service.version": string,

	/**
	* source.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: long
	* Description: Bytes sent from the source to the destination.
	* Example: 184
	*/
	"source.bytes": number,

	/**
	* source.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Source domain.
	* Example: <None>
	*/
	"source.domain": string,

	/**
	* source.geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"source.geo.city_name": string,

	/**
	* source.geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"source.geo.continent_name": string,

	/**
	* source.geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"source.geo.country_iso_code": string,

	/**
	* source.geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"source.geo.country_name": string,

	/**
	* source.geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"source.geo.location": GeoPoint,

	/**
	* source.geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"source.geo.region_iso_code": string,

	/**
	* source.geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"source.geo.region_name": string,

	/**
	* source.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: ip
	* Description: IP address of the source (IPv4 or IPv6).
	* Example: <None>
	*/
	"source.ip": string,

	/**
	* source.mac
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: MAC address of the source.
	* Example: <None>
	*/
	"source.mac": string,

	/**
	* source.packets
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: long
	* Description: Packets sent from the source to the destination.
	* Example: 12
	*/
	"source.packets": number,

	/**
	* source.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: long
	* Description: Port of the source.
	* Example: <None>
	*/
	"source.port": number,

	/**
	* source.user.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the user.
	* Example: <None>
	*/
	"source.user.id": string,

	/**
	* source.user.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Short name or login of the user.
	* Example: albert
	*/
	"source.user.name": string,

	/**
	* tags
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: core
	* Elasticsearch type: keyword
	* Description: List of keywords used to tag each event.
	* Example: ["production", "env2"]
	*/
	"tags": string[],

	/**
	* user.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the user.
	* Example: <None>
	*/
	"user.id": string,

	/**
	* user.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: core
	* Elasticsearch type: keyword
	* Description: Short name or login of the user.
	* Example: albert
	*/
	"user.name": string,


}

export interface EcsExtendedFields {
	/**
	* agent.ephemeral_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-agent.html
	* Field Set: agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Ephemeral identifier of this agent (if one exists). This id normally changes across restarts, but `agent.id` does not.
	* Example: 8a4f500f
	*/
	"agent.ephemeral_id": string,

	/**
	* as.number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-as.html
	* Field Set: as
	* Level: extended
	* Elasticsearch type: long
	* Description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
	* Example: 15169
	*/
	"as.number": number,

	/**
	* as.organization.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-as.html
	* Field Set: as
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Organization name.
	* Example: Google LLC
	*/
	"as.organization.name": string,

	/**
	* client.address
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Some event client addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field. Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
	* Example: <None>
	*/
	"client.address": string,

	/**
	* client.as.number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: long
	* Description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
	* Example: 15169
	*/
	"client.as.number": number,

	/**
	* client.as.organization.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Organization name.
	* Example: Google LLC
	*/
	"client.as.organization.name": string,

	/**
	* client.geo.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
	Not typically used in automated geolocation.
	* Example: boston-dc
	*/
	"client.geo.name": string,

	/**
	* client.nat.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: ip
	* Description: Translated IP of source based NAT sessions (e.g. internal client to internet). Typically connections traversing load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"client.nat.ip": string,

	/**
	* client.nat.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: long
	* Description: Translated port of source based NAT sessions (e.g. internal client to internet). Typically connections traversing load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"client.nat.port": number,

	/**
	* client.registered_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The highest registered client domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
	This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
	* Example: example.com
	*/
	"client.registered_domain": string,

	/**
	* client.subdomain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain. For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
	* Example: east
	*/
	"client.subdomain": string,

	/**
	* client.top_level_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
	* Example: co.uk
	*/
	"client.top_level_domain": string,

	/**
	* client.user.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the user is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"client.user.domain": string,

	/**
	* client.user.email
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User email address.
	* Example: <None>
	*/
	"client.user.email": string,

	/**
	* client.user.full_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User's full name, if available.
	* Example: Albert Einstein
	*/
	"client.user.full_name": string,

	/**
	* client.user.group.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the group is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"client.user.group.domain": string,

	/**
	* client.user.group.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the group on the system/platform.
	* Example: <None>
	*/
	"client.user.group.id": string,

	/**
	* client.user.group.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the group.
	* Example: <None>
	*/
	"client.user.group.name": string,

	/**
	* client.user.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique user hash to correlate information for a user in anonymized form. Useful if `user.id` or `user.name` contain confidential information and cannot be used.
	* Example: <None>
	*/
	"client.user.hash": string,

	/**
	* client.user.roles
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of user roles at the time of the event.
	* Example: ["kibana_admin", "reporting_user"]
	*/
	"client.user.roles": string,

	/**
	* cloud.account.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The cloud account or organization id used to identify different entities in a multi-tenant environment. Examples: AWS account id, Google Cloud ORG Id, or other unique identifier.
	* Example: 666777888999
	*/
	"cloud.account.id": string,

	/**
	* cloud.account.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The cloud account name or alias used to identify different entities in a multi-tenant environment. Examples: AWS account name, Google Cloud ORG display name.
	* Example: elastic-dev
	*/
	"cloud.account.name": string,

	/**
	* cloud.availability_zone
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Availability zone in which this host is running.
	* Example: us-east-1c
	*/
	"cloud.availability_zone": string,

	/**
	* cloud.instance.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Instance ID of the host machine.
	* Example: i-1234567890abcdef0
	*/
	"cloud.instance.id": string,

	/**
	* cloud.instance.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Instance name of the host machine.
	* Example: <None>
	*/
	"cloud.instance.name": string,

	/**
	* cloud.machine.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Machine type of the host machine.
	* Example: t2.medium
	*/
	"cloud.machine.type": string,

	/**
	* cloud.project.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The cloud project identifier. Examples: Google Cloud Project id, Azure Project id.
	* Example: my-project
	*/
	"cloud.project.id": string,

	/**
	* cloud.project.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The cloud project name. Examples: Google Cloud Project name, Azure Project name.
	* Example: my project
	*/
	"cloud.project.name": string,

	/**
	* cloud.provider
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean.
	* Example: aws
	*/
	"cloud.provider": string,

	/**
	* cloud.region
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Region in which this host is running.
	* Example: us-east-1
	*/
	"cloud.region": string,

	/**
	* code_signature.status
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
	* Example: ERROR_UNTRUSTED_ROOT
	*/
	"code_signature.status": string,

	/**
	* code_signature.trusted
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
	* Example: true
	*/
	"code_signature.trusted": boolean,

	/**
	* code_signature.valid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
	* Example: true
	*/
	"code_signature.valid": boolean,

	/**
	* container.image.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the image the container was built on.
	* Example: <None>
	*/
	"container.image.name": string,

	/**
	* container.image.tag
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Container image tags.
	* Example: <None>
	*/
	"container.image.tag": string[],

	/**
	* container.labels
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: extended
	* Elasticsearch type: object
	* Description: Image labels.
	* Example: <None>
	*/
	"container.labels": object,

	/**
	* container.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Container name.
	* Example: <None>
	*/
	"container.name": string,

	/**
	* container.runtime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Runtime managing this container.
	* Example: docker
	*/
	"container.runtime": string,

	/**
	* destination.address
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Some event destination addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field. Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
	* Example: <None>
	*/
	"destination.address": string,

	/**
	* destination.as.number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: long
	* Description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
	* Example: 15169
	*/
	"destination.as.number": number,

	/**
	* destination.as.organization.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Organization name.
	* Example: Google LLC
	*/
	"destination.as.organization.name": string,

	/**
	* destination.geo.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
	Not typically used in automated geolocation.
	* Example: boston-dc
	*/
	"destination.geo.name": string,

	/**
	* destination.nat.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: ip
	* Description: Translated ip of destination based NAT sessions (e.g. internet to private DMZ) Typically used with load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"destination.nat.ip": string,

	/**
	* destination.nat.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: long
	* Description: Port the source session is translated to by NAT Device. Typically used with load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"destination.nat.port": number,

	/**
	* destination.registered_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The highest registered destination domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
	This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
	* Example: example.com
	*/
	"destination.registered_domain": string,

	/**
	* destination.subdomain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain. For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
	* Example: east
	*/
	"destination.subdomain": string,

	/**
	* destination.top_level_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
	* Example: co.uk
	*/
	"destination.top_level_domain": string,

	/**
	* destination.user.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the user is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"destination.user.domain": string,

	/**
	* destination.user.email
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User email address.
	* Example: <None>
	*/
	"destination.user.email": string,

	/**
	* destination.user.full_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User's full name, if available.
	* Example: Albert Einstein
	*/
	"destination.user.full_name": string,

	/**
	* destination.user.group.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the group is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"destination.user.group.domain": string,

	/**
	* destination.user.group.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the group on the system/platform.
	* Example: <None>
	*/
	"destination.user.group.id": string,

	/**
	* destination.user.group.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the group.
	* Example: <None>
	*/
	"destination.user.group.name": string,

	/**
	* destination.user.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique user hash to correlate information for a user in anonymized form. Useful if `user.id` or `user.name` contain confidential information and cannot be used.
	* Example: <None>
	*/
	"destination.user.hash": string,

	/**
	* destination.user.roles
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of user roles at the time of the event.
	* Example: ["kibana_admin", "reporting_user"]
	*/
	"destination.user.roles": string,

	/**
	* dll.code_signature.status
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
	* Example: ERROR_UNTRUSTED_ROOT
	*/
	"dll.code_signature.status": string,

	/**
	* dll.code_signature.trusted
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
	* Example: true
	*/
	"dll.code_signature.trusted": boolean,

	/**
	* dll.code_signature.valid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
	* Example: true
	*/
	"dll.code_signature.valid": boolean,

	/**
	* dll.hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MD5 hash.
	* Example: <None>
	*/
	"dll.hash.md5": string,

	/**
	* dll.hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA1 hash.
	* Example: <None>
	*/
	"dll.hash.sha1": string,

	/**
	* dll.hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA256 hash.
	* Example: <None>
	*/
	"dll.hash.sha256": string,

	/**
	* dll.hash.sha512
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA512 hash.
	* Example: <None>
	*/
	"dll.hash.sha512": string,

	/**
	* dll.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Full file path of the library.
	* Example: C:\Windows\System32\kernel32.dll
	*/
	"dll.path": string,

	/**
	* dll.pe.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: CPU architecture target for the file.
	* Example: x64
	*/
	"dll.pe.architecture": string,

	/**
	* dll.pe.company
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal company name of the file, provided at compile-time.
	* Example: Microsoft Corporation
	*/
	"dll.pe.company": string,

	/**
	* dll.pe.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal description of the file, provided at compile-time.
	* Example: Paint
	*/
	"dll.pe.description": string,

	/**
	* dll.pe.file_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal version of the file, provided at compile-time.
	* Example: 6.3.9600.17415
	*/
	"dll.pe.file_version": string,

	/**
	* dll.pe.imphash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
	* Example: 0c6803c4e922103c4dca5963aad36ddf
	*/
	"dll.pe.imphash": string,

	/**
	* dll.pe.original_file_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal name of the file, provided at compile-time.
	* Example: MSPAINT.EXE
	*/
	"dll.pe.original_file_name": string,

	/**
	* dll.pe.product
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal product name of the file, provided at compile-time.
	* Example: Microsoft® Windows® Operating System
	*/
	"dll.pe.product": string,

	/**
	* dns.answers
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: object
	* Description: An array containing an object for each answer section returned by the server. The main keys that should be present in these objects are defined by ECS. Records that have more information may contain more keys than what ECS defines.
	Not all DNS data sources give all details about DNS answers. At minimum, answer objects must contain the `data` key. If more information is available, map as much of it to ECS as possible, and add any additional fields to the answer objects as custom fields.
	* Example: <None>
	*/
	"dns.answers": object[],

	/**
	* dns.answers.class
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The class of DNS data contained in this resource record.
	* Example: IN
	*/
	"dns.answers.class": string,

	/**
	* dns.answers.data
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The data describing the resource. The meaning of this data depends on the type and class of the resource record.
	* Example: 10.10.10.10
	*/
	"dns.answers.data": string,

	/**
	* dns.answers.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The domain name to which this resource record pertains. If a chain of CNAME is being resolved, each answer's `name` should be the one that corresponds with the answer's `data`. It should not simply be the original `question.name` repeated.
	* Example: www.example.com
	*/
	"dns.answers.name": string,

	/**
	* dns.answers.ttl
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: long
	* Description: The time interval in seconds that this resource record may be cached before it should be discarded. Zero values mean that the data should not be cached.
	* Example: 180
	*/
	"dns.answers.ttl": number,

	/**
	* dns.answers.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of data contained in this resource record.
	* Example: CNAME
	*/
	"dns.answers.type": string,

	/**
	* dns.header_flags
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of 2 letter DNS header flags. Expected values are: AA, TC, RD, RA, AD, CD, DO.
	* Example: ["RD", "RA"]
	*/
	"dns.header_flags": string[],

	/**
	* dns.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The DNS packet identifier assigned by the program that generated the query. The identifier is copied to the response.
	* Example: 62111
	*/
	"dns.id": string,

	/**
	* dns.op_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The DNS operation code that specifies the kind of query in the message. This value is set by the originator of a query and copied into the response.
	* Example: QUERY
	*/
	"dns.op_code": string,

	/**
	* dns.question.class
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The class of records being queried.
	* Example: IN
	*/
	"dns.question.class": string,

	/**
	* dns.question.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The name being queried. If the name field contains non-printable characters (below 32 or above 126), those characters should be represented as escaped base 10 integers (\DDD). Back slashes and quotes should be escaped. Tabs, carriage returns, and line feeds should be converted to \t, \r, and \n respectively.
	* Example: www.example.com
	*/
	"dns.question.name": string,

	/**
	* dns.question.registered_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The highest registered domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
	This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
	* Example: example.com
	*/
	"dns.question.registered_domain": string,

	/**
	* dns.question.subdomain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The subdomain is all of the labels under the registered_domain. If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
	* Example: www
	*/
	"dns.question.subdomain": string,

	/**
	* dns.question.top_level_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
	* Example: co.uk
	*/
	"dns.question.top_level_domain": string,

	/**
	* dns.question.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of record being queried.
	* Example: AAAA
	*/
	"dns.question.type": string,

	/**
	* dns.resolved_ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: ip
	* Description: Array containing all IPs seen in `answers.data`. The `answers` array can be difficult to use, because of the variety of data formats it can contain. Extracting all IP addresses seen in there to `dns.resolved_ip` makes it possible to index them as IP addresses, and makes them easier to visualize and query for.
	* Example: ["10.10.10.10", "10.10.10.11"]
	*/
	"dns.resolved_ip": string[],

	/**
	* dns.response_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The DNS response code.
	* Example: NOERROR
	*/
	"dns.response_code": string,

	/**
	* dns.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of DNS event captured, query or answer. If your source of DNS events only gives you DNS queries, you should only create dns events of type `dns.type:query`.
	If your source of DNS events gives you answers as well, you should create one event per query (optionally as soon as the query is seen). And a second event containing all query details as well as an array of answers.
	* Example: answer
	*/
	"dns.type": string,

	/**
	* error.stack_trace
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The stack trace of this error in plain text.
	* Example: <None>
	*/
	"error.stack_trace": string,

	/**
	* error.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of the error, for example the class name of the exception.
	* Example: java.lang.NullPointerException
	*/
	"error.type": string,

	/**
	* event.code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Identification code for this event, if one exists. Some event sources use event codes to identify messages unambiguously, regardless of message language or wording adjustments over time. An example of this is the Windows Event ID.
	* Example: 4648
	*/
	"event.code": string,

	/**
	* event.end
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: date
	* Description: event.end contains the date when the event ended or when the activity was last observed.
	* Example: <None>
	*/
	"event.end": Date,

	/**
	* event.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Hash (perhaps logstash fingerprint) of raw field to be able to demonstrate log integrity.
	* Example: 123456789012345678901234567890ABCD
	*/
	"event.hash": string,

	/**
	* event.provider
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Source of the event. Event transports such as Syslog or the Windows Event Log typically mention the source of an event. It can be the name of the software that generated the event (e.g. Sysmon, httpd), or of a subsystem of the operating system (kernel, Microsoft-Windows-Security-Auditing).
	* Example: kernel
	*/
	"event.provider": string,

	/**
	* event.reason
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Reason why this event happened, according to the source. This describes the why of a particular action or outcome captured in the event. Where `event.action` captures the action from the event, `event.reason` describes why that action was taken. For example, a web proxy with an `event.action` which denied the request may also populate `event.reason` with the reason why (e.g. `blocked site`).
	* Example: Terminated an unexpected process
	*/
	"event.reason": string,

	/**
	* event.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Reference URL linking to additional information about this event. This URL links to a static definition of the this event. Alert events, indicated by `event.kind:alert`, are a common use case for this field.
	* Example: https://system.example.com/event/#0001234
	*/
	"event.reference": string,

	/**
	* event.risk_score_norm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: float
	* Description: Normalized risk score or priority of the event, on a scale of 0 to 100. This is mainly useful if you use more than one system that assigns risk scores, and you want to see a normalized value across all systems.
	* Example: <None>
	*/
	"event.risk_score_norm": number,

	/**
	* event.sequence
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: long
	* Description: Sequence number of the event. The sequence number is a value published by some event sources, to make the exact ordering of events unambiguous, regardless of the timestamp precision.
	* Example: <None>
	*/
	"event.sequence": number,

	/**
	* event.start
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: date
	* Description: event.start contains the date when the event started or when the activity was first observed.
	* Example: <None>
	*/
	"event.start": Date,

	/**
	* event.timezone
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: This field should be populated when the event's timestamp does not include timezone information already (e.g. default Syslog timestamps). It's optional otherwise. Acceptable timezone formats are: a canonical ID (e.g. "Europe/Amsterdam"), abbreviated (e.g. "EST") or an HH:mm differential (e.g. "-05:00").
	* Example: <None>
	*/
	"event.timezone": string,

	/**
	* event.url
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: URL linking to an external system to continue investigation of this event. This URL links to another system where in-depth investigation of the specific occurrence of this event can take place. Alert events, indicated by `event.kind:alert`, are a common use case for this field.
	* Example: https://mysystem.example.com/alert/5271dedb-f5b0-4218-87f0-4ac4870a38fe
	*/
	"event.url": string,

	/**
	* file.accessed
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Last time the file was accessed. Note that not all filesystems keep track of access time.
	* Example: <None>
	*/
	"file.accessed": Date,

	/**
	* file.attributes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of file attributes. Attributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.
	* Example: ["readonly", "system"]
	*/
	"file.attributes": string[],

	/**
	* file.code_signature.status
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
	* Example: ERROR_UNTRUSTED_ROOT
	*/
	"file.code_signature.status": string,

	/**
	* file.code_signature.trusted
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
	* Example: true
	*/
	"file.code_signature.trusted": boolean,

	/**
	* file.code_signature.valid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
	* Example: true
	*/
	"file.code_signature.valid": boolean,

	/**
	* file.created
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: File creation time. Note that not all filesystems store the creation time.
	* Example: <None>
	*/
	"file.created": Date,

	/**
	* file.ctime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Last time the file attributes or metadata changed. Note that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file.
	* Example: <None>
	*/
	"file.ctime": Date,

	/**
	* file.device
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Device that is the source of the file.
	* Example: sda
	*/
	"file.device": string,

	/**
	* file.directory
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Directory where the file is located. It should include the drive letter, when appropriate.
	* Example: /home/alice
	*/
	"file.directory": string,

	/**
	* file.drive_letter
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Drive letter where the file is located. This field is only relevant on Windows. The value should be uppercase, and not include the colon.
	* Example: C
	*/
	"file.drive_letter": string,

	/**
	* file.extension
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: File extension, excluding the leading dot. Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").
	* Example: png
	*/
	"file.extension": string,

	/**
	* file.gid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Primary group ID (GID) of the file.
	* Example: 1001
	*/
	"file.gid": string,

	/**
	* file.group
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Primary group name of the file.
	* Example: alice
	*/
	"file.group": string,

	/**
	* file.hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MD5 hash.
	* Example: <None>
	*/
	"file.hash.md5": string,

	/**
	* file.hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA1 hash.
	* Example: <None>
	*/
	"file.hash.sha1": string,

	/**
	* file.hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA256 hash.
	* Example: <None>
	*/
	"file.hash.sha256": string,

	/**
	* file.hash.sha512
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA512 hash.
	* Example: <None>
	*/
	"file.hash.sha512": string,

	/**
	* file.inode
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Inode representing the file in the filesystem.
	* Example: 256383
	*/
	"file.inode": string,

	/**
	* file.mime_type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.
	* Example: <None>
	*/
	"file.mime_type": string,

	/**
	* file.mode
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Mode of the file in octal representation.
	* Example: 0640
	*/
	"file.mode": string,

	/**
	* file.mtime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Last time the file content was modified.
	* Example: <None>
	*/
	"file.mtime": Date,

	/**
	* file.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the file including the extension, without the directory.
	* Example: example.png
	*/
	"file.name": string,

	/**
	* file.owner
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: File owner's username.
	* Example: alice
	*/
	"file.owner": string,

	/**
	* file.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Full path to the file, including the file name. It should include the drive letter, when appropriate.
	* Example: /home/alice/example.png
	*/
	"file.path": string,

	/**
	* file.pe.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: CPU architecture target for the file.
	* Example: x64
	*/
	"file.pe.architecture": string,

	/**
	* file.pe.company
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal company name of the file, provided at compile-time.
	* Example: Microsoft Corporation
	*/
	"file.pe.company": string,

	/**
	* file.pe.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal description of the file, provided at compile-time.
	* Example: Paint
	*/
	"file.pe.description": string,

	/**
	* file.pe.file_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal version of the file, provided at compile-time.
	* Example: 6.3.9600.17415
	*/
	"file.pe.file_version": string,

	/**
	* file.pe.imphash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
	* Example: 0c6803c4e922103c4dca5963aad36ddf
	*/
	"file.pe.imphash": string,

	/**
	* file.pe.original_file_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal name of the file, provided at compile-time.
	* Example: MSPAINT.EXE
	*/
	"file.pe.original_file_name": string,

	/**
	* file.pe.product
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal product name of the file, provided at compile-time.
	* Example: Microsoft® Windows® Operating System
	*/
	"file.pe.product": string,

	/**
	* file.size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: long
	* Description: File size in bytes. Only relevant when `file.type` is "file".
	* Example: 16384
	*/
	"file.size": number,

	/**
	* file.target_path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Target path for symlinks.
	* Example: <None>
	*/
	"file.target_path": string,

	/**
	* file.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: File type (file, dir, or symlink).
	* Example: file
	*/
	"file.type": string,

	/**
	* file.uid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The user ID (UID) or security identifier (SID) of the file owner.
	* Example: 1001
	*/
	"file.uid": string,

	/**
	* file.x509.alternative_names
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
	* Example: *.elastic.co
	*/
	"file.x509.alternative_names": string,

	/**
	* file.x509.issuer.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common name (CN) of issuing certificate authority.
	* Example: Example SHA2 High Assurance Server CA
	*/
	"file.x509.issuer.common_name": string,

	/**
	* file.x509.issuer.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) codes
	* Example: US
	*/
	"file.x509.issuer.country": string,

	/**
	* file.x509.issuer.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of issuing certificate authority.
	* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
	*/
	"file.x509.issuer.distinguished_name": string,

	/**
	* file.x509.issuer.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: Mountain View
	*/
	"file.x509.issuer.locality": string,

	/**
	* file.x509.issuer.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of issuing certificate authority.
	* Example: Example Inc
	*/
	"file.x509.issuer.organization": string,

	/**
	* file.x509.issuer.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of issuing certificate authority.
	* Example: www.example.com
	*/
	"file.x509.issuer.organizational_unit": string,

	/**
	* file.x509.issuer.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"file.x509.issuer.state_or_province": string,

	/**
	* file.x509.not_after
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is no longer considered valid.
	* Example: 2020-07-16 03:15:39+00:00
	*/
	"file.x509.not_after": Date,

	/**
	* file.x509.not_before
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is first considered valid.
	* Example: 2019-08-16 01:40:25+00:00
	*/
	"file.x509.not_before": Date,

	/**
	* file.x509.public_key_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Algorithm used to generate the public key.
	* Example: RSA
	*/
	"file.x509.public_key_algorithm": string,

	/**
	* file.x509.public_key_curve
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
	* Example: nistp521
	*/
	"file.x509.public_key_curve": string,

	/**
	* file.x509.public_key_exponent
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: long
	* Description: Exponent used to derive the public key. This is algorithm specific.
	* Example: 65537
	*/
	"file.x509.public_key_exponent": number,

	/**
	* file.x509.public_key_size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: long
	* Description: The size of the public key space in bits.
	* Example: 2048
	*/
	"file.x509.public_key_size": number,

	/**
	* file.x509.serial_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
	* Example: 55FBB9C7DEBF09809D12CCAA
	*/
	"file.x509.serial_number": string,

	/**
	* file.x509.signature_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
	* Example: SHA256-RSA
	*/
	"file.x509.signature_algorithm": string,

	/**
	* file.x509.subject.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common names (CN) of subject.
	* Example: shared.global.example.net
	*/
	"file.x509.subject.common_name": string,

	/**
	* file.x509.subject.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) code
	* Example: US
	*/
	"file.x509.subject.country": string,

	/**
	* file.x509.subject.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of the certificate subject entity.
	* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
	*/
	"file.x509.subject.distinguished_name": string,

	/**
	* file.x509.subject.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: San Francisco
	*/
	"file.x509.subject.locality": string,

	/**
	* file.x509.subject.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of subject.
	* Example: Example, Inc.
	*/
	"file.x509.subject.organization": string,

	/**
	* file.x509.subject.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of subject.
	* Example: <None>
	*/
	"file.x509.subject.organizational_unit": string,

	/**
	* file.x509.subject.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"file.x509.subject.state_or_province": string,

	/**
	* file.x509.version_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Version of x509 format.
	* Example: 3
	*/
	"file.x509.version_number": string,

	/**
	* geo.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
	Not typically used in automated geolocation.
	* Example: boston-dc
	*/
	"geo.name": string,

	/**
	* group.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-group.html
	* Field Set: group
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the group is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"group.domain": string,

	/**
	* group.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-group.html
	* Field Set: group
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the group on the system/platform.
	* Example: <None>
	*/
	"group.id": string,

	/**
	* group.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-group.html
	* Field Set: group
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the group.
	* Example: <None>
	*/
	"group.name": string,

	/**
	* hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MD5 hash.
	* Example: <None>
	*/
	"hash.md5": string,

	/**
	* hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA1 hash.
	* Example: <None>
	*/
	"hash.sha1": string,

	/**
	* hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA256 hash.
	* Example: <None>
	*/
	"hash.sha256": string,

	/**
	* hash.sha512
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA512 hash.
	* Example: <None>
	*/
	"hash.sha512": string,

	/**
	* host.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the domain of which the host is a member. For example, on Windows this could be the host's Active Directory domain or NetBIOS domain name. For Linux this could be the domain of the host's LDAP provider.
	* Example: CONTOSO
	*/
	"host.domain": string,

	/**
	* host.geo.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
	Not typically used in automated geolocation.
	* Example: boston-dc
	*/
	"host.geo.name": string,

	/**
	* host.os.family
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: OS family (such as redhat, debian, freebsd, windows).
	* Example: debian
	*/
	"host.os.family": string,

	/**
	* host.os.full
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, including the version or code name.
	* Example: Mac OS Mojave
	*/
	"host.os.full": string,

	/**
	* host.os.kernel
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system kernel version as a raw string.
	* Example: 4.4.0-112-generic
	*/
	"host.os.kernel": string,

	/**
	* host.os.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, without the version.
	* Example: Mac OS X
	*/
	"host.os.name": string,

	/**
	* host.os.platform
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system platform (such centos, ubuntu, windows).
	* Example: darwin
	*/
	"host.os.platform": string,

	/**
	* host.os.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system version as a raw string.
	* Example: 10.14.1
	*/
	"host.os.version": string,

	/**
	* host.uptime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: long
	* Description: Seconds the host has been up.
	* Example: 1325
	*/
	"host.uptime": number,

	/**
	* host.user.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the user is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"host.user.domain": string,

	/**
	* host.user.email
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User email address.
	* Example: <None>
	*/
	"host.user.email": string,

	/**
	* host.user.full_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User's full name, if available.
	* Example: Albert Einstein
	*/
	"host.user.full_name": string,

	/**
	* host.user.group.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the group is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"host.user.group.domain": string,

	/**
	* host.user.group.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the group on the system/platform.
	* Example: <None>
	*/
	"host.user.group.id": string,

	/**
	* host.user.group.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the group.
	* Example: <None>
	*/
	"host.user.group.name": string,

	/**
	* host.user.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique user hash to correlate information for a user in anonymized form. Useful if `user.id` or `user.name` contain confidential information and cannot be used.
	* Example: <None>
	*/
	"host.user.hash": string,

	/**
	* host.user.roles
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of user roles at the time of the event.
	* Example: ["kibana_admin", "reporting_user"]
	*/
	"host.user.roles": string,

	/**
	* http.request.body.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: long
	* Description: Size in bytes of the request body.
	* Example: 887
	*/
	"http.request.body.bytes": number,

	/**
	* http.request.body.content
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The full HTTP request body.
	* Example: Hello world
	*/
	"http.request.body.content": string,

	/**
	* http.request.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: long
	* Description: Total size in bytes of the request (body and headers).
	* Example: 1437
	*/
	"http.request.bytes": number,

	/**
	* http.request.method
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: keyword
	* Description: HTTP request method. Prior to ECS 1.6.0 the following guidance was provided:
	"The field value must be normalized to lowercase for querying."
	As of ECS 1.6.0, the guidance is deprecated because the original case of the method may be useful in anomaly detection.  Original case will be mandated in ECS 2.0.0
	* Example: GET, POST, PUT, PoST
	*/
	"http.request.method": string,

	/**
	* http.request.mime_type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Mime type of the body of the request. This value must only be populated based on the content of the request body, not on the `Content-Type` header. Comparing the mime type of a request with the request's Content-Type header can be helpful in detecting threats or misconfigured clients.
	* Example: image/gif
	*/
	"http.request.mime_type": string,

	/**
	* http.request.referrer
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Referrer for this HTTP request.
	* Example: https://blog.example.com/
	*/
	"http.request.referrer": string,

	/**
	* http.response.body.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: long
	* Description: Size in bytes of the response body.
	* Example: 887
	*/
	"http.response.body.bytes": number,

	/**
	* http.response.body.content
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The full HTTP response body.
	* Example: Hello world
	*/
	"http.response.body.content": string,

	/**
	* http.response.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: long
	* Description: Total size in bytes of the response (body and headers).
	* Example: 1437
	*/
	"http.response.bytes": number,

	/**
	* http.response.mime_type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Mime type of the body of the response. This value must only be populated based on the content of the response body, not on the `Content-Type` header. Comparing the mime type of a response with the response's Content-Type header can be helpful in detecting misconfigured servers.
	* Example: image/gif
	*/
	"http.response.mime_type": string,

	/**
	* http.response.status_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: long
	* Description: HTTP response status code.
	* Example: 404
	*/
	"http.response.status_code": number,

	/**
	* http.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: keyword
	* Description: HTTP version.
	* Example: 1.1
	*/
	"http.version": string,

	/**
	* interface.alias
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-interface.html
	* Field Set: interface
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.
	* Example: outside
	*/
	"interface.alias": string,

	/**
	* interface.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-interface.html
	* Field Set: interface
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface ID as reported by an observer (typically SNMP interface ID).
	* Example: 10
	*/
	"interface.id": string,

	/**
	* interface.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-interface.html
	* Field Set: interface
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface name as reported by the system.
	* Example: eth0
	*/
	"interface.name": string,

	/**
	* log.file.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Full path to the log file this event came from, including the file name. It should include the drive letter, when appropriate. If the event wasn't read from a log file, do not populate this field.
	* Example: /var/log/fun-times.log
	*/
	"log.file.path": string,

	/**
	* log.origin.file.line
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: integer
	* Description: The line number of the file containing the source code which originated the log event.
	* Example: 42
	*/
	"log.origin.file.line": number,

	/**
	* log.origin.file.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The name of the file containing the source code which originated the log event. Note that this field is not meant to capture the log file. The correct field to capture the log file is `log.file.path`.
	* Example: Bootstrap.java
	*/
	"log.origin.file.name": string,

	/**
	* log.origin.function
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The name of the function or method which originated the log event.
	* Example: init
	*/
	"log.origin.function": string,

	/**
	* log.syslog
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: object
	* Description: The Syslog metadata of the event, if the event was transmitted via Syslog. Please see RFCs 5424 or 3164.
	* Example: <None>
	*/
	"log.syslog": object,

	/**
	* log.syslog.facility.code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: long
	* Description: The Syslog numeric facility of the log event, if available. According to RFCs 5424 and 3164, this value should be an integer between 0 and 23.
	* Example: 23
	*/
	"log.syslog.facility.code": number,

	/**
	* log.syslog.facility.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The Syslog text-based facility of the log event, if available.
	* Example: local7
	*/
	"log.syslog.facility.name": string,

	/**
	* log.syslog.priority
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: long
	* Description: Syslog numeric priority of the event, if available. According to RFCs 5424 and 3164, the priority is 8 * facility + severity. This number is therefore expected to contain a value between 0 and 191.
	* Example: 135
	*/
	"log.syslog.priority": number,

	/**
	* log.syslog.severity.code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: long
	* Description: The Syslog numeric severity of the log event, if available. If the event source publishing via Syslog provides a different numeric severity value (e.g. firewall, IDS), your source's numeric severity should go to `event.severity`. If the event source does not specify a distinct severity, you can optionally copy the Syslog severity to `event.severity`.
	* Example: 3
	*/
	"log.syslog.severity.code": number,

	/**
	* log.syslog.severity.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The Syslog numeric severity of the log event, if available. If the event source publishing via Syslog provides a different severity value (e.g. firewall, IDS), your source's text severity should go to `log.level`. If the event source does not specify a distinct severity, you can optionally copy the Syslog severity to `log.level`.
	* Example: Error
	*/
	"log.syslog.severity.name": string,

	/**
	* network.application
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A name given to an application level protocol. This can be arbitrarily assigned for things like microservices, but also apply to things like skype, icq, facebook, twitter. This would be used in situations where the vendor or service can be decoded such as from the source/dest IP owners, ports, or wire format. The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
	* Example: aim
	*/
	"network.application": string,

	/**
	* network.community_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of source and destination IPs and ports, as well as the protocol used in a communication. This is a tool-agnostic standard to identify flows. Learn more at https://github.com/corelight/community-id-spec.
	* Example: 1:hO+sN4H+MG5MY/8hIrXPqc4ZQz0=
	*/
	"network.community_id": string,

	/**
	* network.iana_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: IANA Protocol Number (https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Standardized list of protocols. This aligns well with NetFlow and sFlow related logs which use the IANA Protocol Number.
	* Example: 6
	*/
	"network.iana_number": string,

	/**
	* network.inner
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: object
	* Description: Network.inner fields are added in addition to network.vlan fields to describe the innermost VLAN when q-in-q VLAN tagging is present. Allowed fields include vlan.id and vlan.name. Inner vlan fields are typically used when sending traffic with multiple 802.1q encapsulations to a network sensor (e.g. Zeek, Wireshark.)
	* Example: <None>
	*/
	"network.inner": object,

	/**
	* network.inner.vlan.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: VLAN ID as reported by the observer.
	* Example: 10
	*/
	"network.inner.vlan.id": string,

	/**
	* network.inner.vlan.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Optional VLAN name as reported by the observer.
	* Example: outside
	*/
	"network.inner.vlan.name": string,

	/**
	* network.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name given by operators to sections of their network.
	* Example: Guest Wifi
	*/
	"network.name": string,

	/**
	* network.vlan.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: VLAN ID as reported by the observer.
	* Example: 10
	*/
	"network.vlan.id": string,

	/**
	* network.vlan.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Optional VLAN name as reported by the observer.
	* Example: outside
	*/
	"network.vlan.name": string,

	/**
	* observer.egress
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: object
	* Description: Observer.egress holds information like interface number and name, vlan, and zone information to  classify egress traffic.  Single armed monitoring such as a network sensor on a span port should  only use observer.ingress to categorize traffic.
	* Example: <None>
	*/
	"observer.egress": object,

	/**
	* observer.egress.interface.alias
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.
	* Example: outside
	*/
	"observer.egress.interface.alias": string,

	/**
	* observer.egress.interface.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface ID as reported by an observer (typically SNMP interface ID).
	* Example: 10
	*/
	"observer.egress.interface.id": string,

	/**
	* observer.egress.interface.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface name as reported by the system.
	* Example: eth0
	*/
	"observer.egress.interface.name": string,

	/**
	* observer.egress.vlan.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: VLAN ID as reported by the observer.
	* Example: 10
	*/
	"observer.egress.vlan.id": string,

	/**
	* observer.egress.vlan.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Optional VLAN name as reported by the observer.
	* Example: outside
	*/
	"observer.egress.vlan.name": string,

	/**
	* observer.egress.zone
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Network zone of outbound traffic as reported by the observer to categorize the destination area of egress  traffic, e.g. Internal, External, DMZ, HR, Legal, etc.
	* Example: Public_Internet
	*/
	"observer.egress.zone": string,

	/**
	* observer.geo.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
	Not typically used in automated geolocation.
	* Example: boston-dc
	*/
	"observer.geo.name": string,

	/**
	* observer.ingress
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: object
	* Description: Observer.ingress holds information like interface number and name, vlan, and zone information to  classify ingress traffic.  Single armed monitoring such as a network sensor on a span port should  only use observer.ingress to categorize traffic.
	* Example: <None>
	*/
	"observer.ingress": object,

	/**
	* observer.ingress.interface.alias
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.
	* Example: outside
	*/
	"observer.ingress.interface.alias": string,

	/**
	* observer.ingress.interface.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface ID as reported by an observer (typically SNMP interface ID).
	* Example: 10
	*/
	"observer.ingress.interface.id": string,

	/**
	* observer.ingress.interface.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface name as reported by the system.
	* Example: eth0
	*/
	"observer.ingress.interface.name": string,

	/**
	* observer.ingress.vlan.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: VLAN ID as reported by the observer.
	* Example: 10
	*/
	"observer.ingress.vlan.id": string,

	/**
	* observer.ingress.vlan.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Optional VLAN name as reported by the observer.
	* Example: outside
	*/
	"observer.ingress.vlan.name": string,

	/**
	* observer.ingress.zone
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Network zone of incoming traffic as reported by the observer to categorize the source area of ingress  traffic. e.g. internal, External, DMZ, HR, Legal, etc.
	* Example: DMZ
	*/
	"observer.ingress.zone": string,

	/**
	* observer.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Custom name of the observer. This is a name that can be given to an observer. This can be helpful for example if multiple firewalls of the same model are used in an organization.
	If no custom name is needed, the field can be left empty.
	* Example: 1_proxySG
	*/
	"observer.name": string,

	/**
	* observer.os.family
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: OS family (such as redhat, debian, freebsd, windows).
	* Example: debian
	*/
	"observer.os.family": string,

	/**
	* observer.os.full
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, including the version or code name.
	* Example: Mac OS Mojave
	*/
	"observer.os.full": string,

	/**
	* observer.os.kernel
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system kernel version as a raw string.
	* Example: 4.4.0-112-generic
	*/
	"observer.os.kernel": string,

	/**
	* observer.os.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, without the version.
	* Example: Mac OS X
	*/
	"observer.os.name": string,

	/**
	* observer.os.platform
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system platform (such centos, ubuntu, windows).
	* Example: darwin
	*/
	"observer.os.platform": string,

	/**
	* observer.os.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system version as a raw string.
	* Example: 10.14.1
	*/
	"observer.os.version": string,

	/**
	* observer.product
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The product name of the observer.
	* Example: s200
	*/
	"observer.product": string,

	/**
	* observer.serial_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Observer serial number.
	* Example: <None>
	*/
	"observer.serial_number": string,

	/**
	* organization.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-organization.html
	* Field Set: organization
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the organization.
	* Example: <None>
	*/
	"organization.id": string,

	/**
	* organization.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-organization.html
	* Field Set: organization
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Organization name.
	* Example: <None>
	*/
	"organization.name": string,

	/**
	* os.family
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: OS family (such as redhat, debian, freebsd, windows).
	* Example: debian
	*/
	"os.family": string,

	/**
	* os.full
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, including the version or code name.
	* Example: Mac OS Mojave
	*/
	"os.full": string,

	/**
	* os.kernel
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system kernel version as a raw string.
	* Example: 4.4.0-112-generic
	*/
	"os.kernel": string,

	/**
	* os.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, without the version.
	* Example: Mac OS X
	*/
	"os.name": string,

	/**
	* os.platform
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system platform (such centos, ubuntu, windows).
	* Example: darwin
	*/
	"os.platform": string,

	/**
	* os.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system version as a raw string.
	* Example: 10.14.1
	*/
	"os.version": string,

	/**
	* package.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Package architecture.
	* Example: x86_64
	*/
	"package.architecture": string,

	/**
	* package.build_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the build version of the installed package. For example use the commit SHA of a non-released package.
	* Example: 36f4f7e89dd61b0988b12ee000b98966867710cd
	*/
	"package.build_version": string,

	/**
	* package.checksum
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Checksum of the installed package for verification.
	* Example: 68b329da9893e34099c7d8ad5cb9c940
	*/
	"package.checksum": string,

	/**
	* package.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Description of the package.
	* Example: Open source programming language to build simple/reliable/efficient software.
	*/
	"package.description": string,

	/**
	* package.install_scope
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Indicating how the package was installed, e.g. user-local, global.
	* Example: global
	*/
	"package.install_scope": string,

	/**
	* package.installed
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: date
	* Description: Time when package was installed.
	* Example: <None>
	*/
	"package.installed": Date,

	/**
	* package.license
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: License under which the package was released. Use a short name, e.g. the license identifier from SPDX License List where possible (https://spdx.org/licenses/).
	* Example: Apache License 2.0
	*/
	"package.license": string,

	/**
	* package.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Package name
	* Example: go
	*/
	"package.name": string,

	/**
	* package.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Path where the package is installed.
	* Example: /usr/local/Cellar/go/1.12.9/
	*/
	"package.path": string,

	/**
	* package.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Home page or reference URL of the software in this package, if available.
	* Example: https://golang.org
	*/
	"package.reference": string,

	/**
	* package.size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: long
	* Description: Package size in bytes.
	* Example: 62231
	*/
	"package.size": number,

	/**
	* package.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Type of package. This should contain the package file type, rather than the package manager name. Examples: rpm, dpkg, brew, npm, gem, nupkg, jar.
	* Example: rpm
	*/
	"package.type": string,

	/**
	* package.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Package version
	* Example: 1.12.9
	*/
	"package.version": string,

	/**
	* pe.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: CPU architecture target for the file.
	* Example: x64
	*/
	"pe.architecture": string,

	/**
	* pe.company
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal company name of the file, provided at compile-time.
	* Example: Microsoft Corporation
	*/
	"pe.company": string,

	/**
	* pe.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal description of the file, provided at compile-time.
	* Example: Paint
	*/
	"pe.description": string,

	/**
	* pe.file_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal version of the file, provided at compile-time.
	* Example: 6.3.9600.17415
	*/
	"pe.file_version": string,

	/**
	* pe.imphash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
	* Example: 0c6803c4e922103c4dca5963aad36ddf
	*/
	"pe.imphash": string,

	/**
	* pe.original_file_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal name of the file, provided at compile-time.
	* Example: MSPAINT.EXE
	*/
	"pe.original_file_name": string,

	/**
	* pe.product
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal product name of the file, provided at compile-time.
	* Example: Microsoft® Windows® Operating System
	*/
	"pe.product": string,

	/**
	* process.args
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of process arguments, starting with the absolute path to the executable. May be filtered to protect sensitive information.
	* Example: ["/usr/bin/ssh", "-l", "user", "10.0.0.16"]
	*/
	"process.args": string[],

	/**
	* process.args_count
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Length of the process.args array. This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.
	* Example: 4
	*/
	"process.args_count": number,

	/**
	* process.code_signature.status
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
	* Example: ERROR_UNTRUSTED_ROOT
	*/
	"process.code_signature.status": string,

	/**
	* process.code_signature.trusted
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
	* Example: true
	*/
	"process.code_signature.trusted": boolean,

	/**
	* process.code_signature.valid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
	* Example: true
	*/
	"process.code_signature.valid": boolean,

	/**
	* process.command_line
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Full command line that started the process, including the absolute path to the executable, and all arguments. Some arguments may be filtered to protect sensitive information.
	* Example: /usr/bin/ssh -l user 10.0.0.16
	*/
	"process.command_line": string,

	/**
	* process.entity_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the process. The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
	Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.
	* Example: c2c455d9f99375d
	*/
	"process.entity_id": string,

	/**
	* process.executable
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Absolute path to the process executable.
	* Example: /usr/bin/ssh
	*/
	"process.executable": string,

	/**
	* process.exit_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: The exit code of the process, if this is a termination event. The field should be absent if there is no exit code for the event (e.g. process start).
	* Example: 137
	*/
	"process.exit_code": number,

	/**
	* process.hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MD5 hash.
	* Example: <None>
	*/
	"process.hash.md5": string,

	/**
	* process.hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA1 hash.
	* Example: <None>
	*/
	"process.hash.sha1": string,

	/**
	* process.hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA256 hash.
	* Example: <None>
	*/
	"process.hash.sha256": string,

	/**
	* process.hash.sha512
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA512 hash.
	* Example: <None>
	*/
	"process.hash.sha512": string,

	/**
	* process.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Process name. Sometimes called program name or similar.
	* Example: ssh
	*/
	"process.name": string,

	/**
	* process.parent.args
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of process arguments, starting with the absolute path to the executable. May be filtered to protect sensitive information.
	* Example: ["/usr/bin/ssh", "-l", "user", "10.0.0.16"]
	*/
	"process.parent.args": string,

	/**
	* process.parent.args_count
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Length of the process.args array. This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.
	* Example: 4
	*/
	"process.parent.args_count": number,

	/**
	* process.parent.code_signature.status
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
	* Example: ERROR_UNTRUSTED_ROOT
	*/
	"process.parent.code_signature.status": string,

	/**
	* process.parent.code_signature.trusted
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
	* Example: true
	*/
	"process.parent.code_signature.trusted": boolean,

	/**
	* process.parent.code_signature.valid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
	* Example: true
	*/
	"process.parent.code_signature.valid": boolean,

	/**
	* process.parent.command_line
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Full command line that started the process, including the absolute path to the executable, and all arguments. Some arguments may be filtered to protect sensitive information.
	* Example: /usr/bin/ssh -l user 10.0.0.16
	*/
	"process.parent.command_line": string,

	/**
	* process.parent.entity_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the process. The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
	Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.
	* Example: c2c455d9f99375d
	*/
	"process.parent.entity_id": string,

	/**
	* process.parent.executable
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Absolute path to the process executable.
	* Example: /usr/bin/ssh
	*/
	"process.parent.executable": string,

	/**
	* process.parent.exit_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: The exit code of the process, if this is a termination event. The field should be absent if there is no exit code for the event (e.g. process start).
	* Example: 137
	*/
	"process.parent.exit_code": number,

	/**
	* process.parent.hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MD5 hash.
	* Example: <None>
	*/
	"process.parent.hash.md5": string,

	/**
	* process.parent.hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA1 hash.
	* Example: <None>
	*/
	"process.parent.hash.sha1": string,

	/**
	* process.parent.hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA256 hash.
	* Example: <None>
	*/
	"process.parent.hash.sha256": string,

	/**
	* process.parent.hash.sha512
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA512 hash.
	* Example: <None>
	*/
	"process.parent.hash.sha512": string,

	/**
	* process.parent.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Process name. Sometimes called program name or similar.
	* Example: ssh
	*/
	"process.parent.name": string,

	/**
	* process.parent.pe.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: CPU architecture target for the file.
	* Example: x64
	*/
	"process.parent.pe.architecture": string,

	/**
	* process.parent.pe.company
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal company name of the file, provided at compile-time.
	* Example: Microsoft Corporation
	*/
	"process.parent.pe.company": string,

	/**
	* process.parent.pe.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal description of the file, provided at compile-time.
	* Example: Paint
	*/
	"process.parent.pe.description": string,

	/**
	* process.parent.pe.file_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal version of the file, provided at compile-time.
	* Example: 6.3.9600.17415
	*/
	"process.parent.pe.file_version": string,

	/**
	* process.parent.pe.imphash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
	* Example: 0c6803c4e922103c4dca5963aad36ddf
	*/
	"process.parent.pe.imphash": string,

	/**
	* process.parent.pe.original_file_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal name of the file, provided at compile-time.
	* Example: MSPAINT.EXE
	*/
	"process.parent.pe.original_file_name": string,

	/**
	* process.parent.pe.product
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal product name of the file, provided at compile-time.
	* Example: Microsoft® Windows® Operating System
	*/
	"process.parent.pe.product": string,

	/**
	* process.parent.pgid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Identifier of the group of processes the process belongs to.
	* Example: <None>
	*/
	"process.parent.pgid": number,

	/**
	* process.parent.ppid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Parent process' pid.
	* Example: 4241
	*/
	"process.parent.ppid": number,

	/**
	* process.parent.start
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: date
	* Description: The time the process started.
	* Example: 2016-05-23T08:05:34.853Z
	*/
	"process.parent.start": Date,

	/**
	* process.parent.thread.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Thread ID.
	* Example: 4242
	*/
	"process.parent.thread.id": number,

	/**
	* process.parent.thread.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Thread name.
	* Example: thread-0
	*/
	"process.parent.thread.name": string,

	/**
	* process.parent.title
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Process title. The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.
	* Example: <None>
	*/
	"process.parent.title": string,

	/**
	* process.parent.uptime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Seconds the process has been up.
	* Example: 1325
	*/
	"process.parent.uptime": number,

	/**
	* process.parent.working_directory
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The working directory of the process.
	* Example: /home/alice
	*/
	"process.parent.working_directory": string,

	/**
	* process.pe.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: CPU architecture target for the file.
	* Example: x64
	*/
	"process.pe.architecture": string,

	/**
	* process.pe.company
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal company name of the file, provided at compile-time.
	* Example: Microsoft Corporation
	*/
	"process.pe.company": string,

	/**
	* process.pe.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal description of the file, provided at compile-time.
	* Example: Paint
	*/
	"process.pe.description": string,

	/**
	* process.pe.file_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal version of the file, provided at compile-time.
	* Example: 6.3.9600.17415
	*/
	"process.pe.file_version": string,

	/**
	* process.pe.imphash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
	* Example: 0c6803c4e922103c4dca5963aad36ddf
	*/
	"process.pe.imphash": string,

	/**
	* process.pe.original_file_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal name of the file, provided at compile-time.
	* Example: MSPAINT.EXE
	*/
	"process.pe.original_file_name": string,

	/**
	* process.pe.product
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal product name of the file, provided at compile-time.
	* Example: Microsoft® Windows® Operating System
	*/
	"process.pe.product": string,

	/**
	* process.pgid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Identifier of the group of processes the process belongs to.
	* Example: <None>
	*/
	"process.pgid": number,

	/**
	* process.ppid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Parent process' pid.
	* Example: 4241
	*/
	"process.ppid": number,

	/**
	* process.start
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: date
	* Description: The time the process started.
	* Example: 2016-05-23T08:05:34.853Z
	*/
	"process.start": Date,

	/**
	* process.thread.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Thread ID.
	* Example: 4242
	*/
	"process.thread.id": number,

	/**
	* process.thread.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Thread name.
	* Example: thread-0
	*/
	"process.thread.name": string,

	/**
	* process.title
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Process title. The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.
	* Example: <None>
	*/
	"process.title": string,

	/**
	* process.uptime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Seconds the process has been up.
	* Example: 1325
	*/
	"process.uptime": number,

	/**
	* process.working_directory
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The working directory of the process.
	* Example: /home/alice
	*/
	"process.working_directory": string,

	/**
	* registry.data.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Original bytes written with base64 encoding. For Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values.
	* Example: ZQBuAC0AVQBTAAAAZQBuAAAAAAA=
	*/
	"registry.data.bytes": string,

	/**
	* related.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-related.html
	* Field Set: related
	* Level: extended
	* Elasticsearch type: keyword
	* Description: All the hashes seen on your event. Populating this field, then using it to search for hashes can help in situations where you're unsure what the hash algorithm is (and therefore which key name to search).
	* Example: <None>
	*/
	"related.hash": string[],

	/**
	* related.hosts
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-related.html
	* Field Set: related
	* Level: extended
	* Elasticsearch type: keyword
	* Description: All hostnames or other host identifiers seen on your event. Example identifiers include FQDNs, domain names, workstation names, or aliases.
	* Example: <None>
	*/
	"related.hosts": string[],

	/**
	* related.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-related.html
	* Field Set: related
	* Level: extended
	* Elasticsearch type: ip
	* Description: All of the IPs seen on your event.
	* Example: <None>
	*/
	"related.ip": string[],

	/**
	* related.user
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-related.html
	* Field Set: related
	* Level: extended
	* Elasticsearch type: keyword
	* Description: All the user names seen on your event.
	* Example: <None>
	*/
	"related.user": string[],

	/**
	* rule.author
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name, organization, or pseudonym of the author or authors who created the rule used to generate this event.
	* Example: ["Star-Lord"]
	*/
	"rule.author": string[],

	/**
	* rule.category
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A categorization value keyword used by the entity using the rule for detection of this event.
	* Example: Attempted Information Leak
	*/
	"rule.category": string,

	/**
	* rule.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The description of the rule generating the event.
	* Example: Block requests to public DNS over HTTPS / TLS protocols
	*/
	"rule.description": string,

	/**
	* rule.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A rule ID that is unique within the scope of an agent, observer, or other entity using the rule for detection of this event.
	* Example: 101
	*/
	"rule.id": string,

	/**
	* rule.license
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the license under which the rule used to generate this event is made available.
	* Example: Apache 2.0
	*/
	"rule.license": string,

	/**
	* rule.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The name of the rule or signature generating the event.
	* Example: BLOCK_DNS_over_TLS
	*/
	"rule.name": string,

	/**
	* rule.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Reference URL to additional information about the rule used to generate this event. The URL can point to the vendor's documentation about the rule. If that's not available, it can also be a link to a more general page describing this type of alert.
	* Example: https://en.wikipedia.org/wiki/DNS_over_TLS
	*/
	"rule.reference": string,

	/**
	* rule.ruleset
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the ruleset, policy, group, or parent category in which the rule used to generate this event is a member.
	* Example: Standard_Protocol_Filters
	*/
	"rule.ruleset": string,

	/**
	* rule.uuid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A rule ID that is unique within the scope of a set or group of agents, observers, or other entities using the rule for detection of this event.
	* Example: 1100110011
	*/
	"rule.uuid": string,

	/**
	* rule.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The version / revision of the rule being used for analysis.
	* Example: 1.1
	*/
	"rule.version": string,

	/**
	* server.address
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Some event server addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field. Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
	* Example: <None>
	*/
	"server.address": string,

	/**
	* server.as.number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: long
	* Description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
	* Example: 15169
	*/
	"server.as.number": number,

	/**
	* server.as.organization.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Organization name.
	* Example: Google LLC
	*/
	"server.as.organization.name": string,

	/**
	* server.geo.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
	Not typically used in automated geolocation.
	* Example: boston-dc
	*/
	"server.geo.name": string,

	/**
	* server.nat.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: ip
	* Description: Translated ip of destination based NAT sessions (e.g. internet to private DMZ) Typically used with load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"server.nat.ip": string,

	/**
	* server.nat.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: long
	* Description: Translated port of destination based NAT sessions (e.g. internet to private DMZ) Typically used with load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"server.nat.port": number,

	/**
	* server.registered_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The highest registered server domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
	This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
	* Example: example.com
	*/
	"server.registered_domain": string,

	/**
	* server.subdomain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain. For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
	* Example: east
	*/
	"server.subdomain": string,

	/**
	* server.top_level_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
	* Example: co.uk
	*/
	"server.top_level_domain": string,

	/**
	* server.user.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the user is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"server.user.domain": string,

	/**
	* server.user.email
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User email address.
	* Example: <None>
	*/
	"server.user.email": string,

	/**
	* server.user.full_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User's full name, if available.
	* Example: Albert Einstein
	*/
	"server.user.full_name": string,

	/**
	* server.user.group.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the group is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"server.user.group.domain": string,

	/**
	* server.user.group.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the group on the system/platform.
	* Example: <None>
	*/
	"server.user.group.id": string,

	/**
	* server.user.group.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the group.
	* Example: <None>
	*/
	"server.user.group.name": string,

	/**
	* server.user.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique user hash to correlate information for a user in anonymized form. Useful if `user.id` or `user.name` contain confidential information and cannot be used.
	* Example: <None>
	*/
	"server.user.hash": string,

	/**
	* server.user.roles
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of user roles at the time of the event.
	* Example: ["kibana_admin", "reporting_user"]
	*/
	"server.user.roles": string,

	/**
	* service.ephemeral_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Ephemeral identifier of this service (if one exists). This id normally changes across restarts, but `service.id` does not.
	* Example: 8a4f500f
	*/
	"service.ephemeral_id": string,

	/**
	* service.node.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of a service node. This allows for two nodes of the same service running on the same host to be differentiated. Therefore, `service.node.name` should typically be unique across nodes of a given service.
	In the case of Elasticsearch, the `service.node.name` could contain the unique node name within the Elasticsearch cluster. In cases where the service doesn't have the concept of a node name, the host name or container name can be used to distinguish running instances that make up this service. If those do not provide uniqueness (e.g. multiple instances of the service running on the same host) - the node name can be manually set.
	* Example: instance-0000000016
	*/
	"service.node.name": string,

	/**
	* source.address
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Some event source addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field. Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
	* Example: <None>
	*/
	"source.address": string,

	/**
	* source.as.number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: long
	* Description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
	* Example: 15169
	*/
	"source.as.number": number,

	/**
	* source.as.organization.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Organization name.
	* Example: Google LLC
	*/
	"source.as.organization.name": string,

	/**
	* source.geo.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
	Not typically used in automated geolocation.
	* Example: boston-dc
	*/
	"source.geo.name": string,

	/**
	* source.nat.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: ip
	* Description: Translated ip of source based NAT sessions (e.g. internal client to internet) Typically connections traversing load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"source.nat.ip": string,

	/**
	* source.nat.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: long
	* Description: Translated port of source based NAT sessions. (e.g. internal client to internet) Typically used with load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"source.nat.port": number,

	/**
	* source.registered_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The highest registered source domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
	This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
	* Example: example.com
	*/
	"source.registered_domain": string,

	/**
	* source.subdomain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain. For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
	* Example: east
	*/
	"source.subdomain": string,

	/**
	* source.top_level_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
	* Example: co.uk
	*/
	"source.top_level_domain": string,

	/**
	* source.user.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the user is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"source.user.domain": string,

	/**
	* source.user.email
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User email address.
	* Example: <None>
	*/
	"source.user.email": string,

	/**
	* source.user.full_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User's full name, if available.
	* Example: Albert Einstein
	*/
	"source.user.full_name": string,

	/**
	* source.user.group.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the group is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"source.user.group.domain": string,

	/**
	* source.user.group.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the group on the system/platform.
	* Example: <None>
	*/
	"source.user.group.id": string,

	/**
	* source.user.group.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the group.
	* Example: <None>
	*/
	"source.user.group.name": string,

	/**
	* source.user.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique user hash to correlate information for a user in anonymized form. Useful if `user.id` or `user.name` contain confidential information and cannot be used.
	* Example: <None>
	*/
	"source.user.hash": string,

	/**
	* source.user.roles
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of user roles at the time of the event.
	* Example: ["kibana_admin", "reporting_user"]
	*/
	"source.user.roles": string,

	/**
	* span.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier of the span within the scope of its trace. A span represents an operation within a transaction, such as a request to another service, or a database query.
	* Example: 3ff9a8981b7ccd5a
	*/
	"span.id": string,

	/**
	* threat.framework
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the threat framework used to further categorize and classify the tactic and technique of the reported threat. Framework classification can be provided by detecting systems, evaluated at ingest time, or retrospectively tagged to events.
	* Example: MITRE ATT&CK
	*/
	"threat.framework": string,

	/**
	* threat.tactic.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The id of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )
	* Example: TA0002
	*/
	"threat.tactic.id": string[],

	/**
	* threat.tactic.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the type of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/)
	* Example: Execution
	*/
	"threat.tactic.name": string[],

	/**
	* threat.tactic.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The reference url of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )
	* Example: https://attack.mitre.org/tactics/TA0002/
	*/
	"threat.tactic.reference": string[],

	/**
	* threat.technique.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The id of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)
	* Example: T1059
	*/
	"threat.technique.id": string[],

	/**
	* threat.technique.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The name of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)
	* Example: Command and Scripting Interpreter
	*/
	"threat.technique.name": string[],

	/**
	* threat.technique.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The reference url of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)
	* Example: https://attack.mitre.org/techniques/T1059/
	*/
	"threat.technique.reference": string[],

	/**
	* threat.technique.subtechnique.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The full id of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)
	* Example: T1059.001
	*/
	"threat.technique.subtechnique.id": string[],

	/**
	* threat.technique.subtechnique.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The name of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)
	* Example: PowerShell
	*/
	"threat.technique.subtechnique.name": string[],

	/**
	* threat.technique.subtechnique.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The reference url of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)
	* Example: https://attack.mitre.org/techniques/T1059/001/
	*/
	"threat.technique.subtechnique.reference": string[],

	/**
	* tls.cipher
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: String indicating the cipher used during the current connection.
	* Example: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
	*/
	"tls.cipher": string,

	/**
	* tls.client.certificate
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: PEM-encoded stand-alone certificate offered by the client. This is usually mutually-exclusive of `client.certificate_chain` since this value also exists in that list.
	* Example: MII...
	*/
	"tls.client.certificate": string,

	/**
	* tls.client.certificate_chain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of PEM-encoded certificates that make up the certificate chain offered by the client. This is usually mutually-exclusive of `client.certificate` since that value should be the first certificate in the chain.
	* Example: ["MII...", "MII..."]
	*/
	"tls.client.certificate_chain": string[],

	/**
	* tls.client.hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
	* Example: 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC
	*/
	"tls.client.hash.md5": string,

	/**
	* tls.client.hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
	* Example: 9E393D93138888D288266C2D915214D1D1CCEB2A
	*/
	"tls.client.hash.sha1": string,

	/**
	* tls.client.hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
	* Example: 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0
	*/
	"tls.client.hash.sha256": string,

	/**
	* tls.client.issuer
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name of subject of the issuer of the x.509 certificate presented by the client.
	* Example: CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com
	*/
	"tls.client.issuer": string,

	/**
	* tls.client.ja3
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash that identifies clients based on how they perform an SSL/TLS handshake.
	* Example: d4e5b18d6b55c71272893221c96ba240
	*/
	"tls.client.ja3": string,

	/**
	* tls.client.not_after
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Date/Time indicating when client certificate is no longer considered valid.
	* Example: 2021-01-01T00:00:00.000Z
	*/
	"tls.client.not_after": Date,

	/**
	* tls.client.not_before
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Date/Time indicating when client certificate is first considered valid.
	* Example: 1970-01-01T00:00:00.000Z
	*/
	"tls.client.not_before": Date,

	/**
	* tls.client.server_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Also called an SNI, this tells the server which hostname to which the client is attempting to connect to. When this value is available, it should get copied to `destination.domain`.
	* Example: www.elastic.co
	*/
	"tls.client.server_name": string,

	/**
	* tls.client.subject
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name of subject of the x.509 certificate presented by the client.
	* Example: CN=myclient, OU=Documentation Team, DC=example, DC=com
	*/
	"tls.client.subject": string,

	/**
	* tls.client.supported_ciphers
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of ciphers offered by the client during the client hello.
	* Example: ["TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", "..."]
	*/
	"tls.client.supported_ciphers": string[],

	/**
	* tls.client.x509.alternative_names
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
	* Example: *.elastic.co
	*/
	"tls.client.x509.alternative_names": string,

	/**
	* tls.client.x509.issuer.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common name (CN) of issuing certificate authority.
	* Example: Example SHA2 High Assurance Server CA
	*/
	"tls.client.x509.issuer.common_name": string,

	/**
	* tls.client.x509.issuer.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) codes
	* Example: US
	*/
	"tls.client.x509.issuer.country": string,

	/**
	* tls.client.x509.issuer.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of issuing certificate authority.
	* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
	*/
	"tls.client.x509.issuer.distinguished_name": string,

	/**
	* tls.client.x509.issuer.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: Mountain View
	*/
	"tls.client.x509.issuer.locality": string,

	/**
	* tls.client.x509.issuer.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of issuing certificate authority.
	* Example: Example Inc
	*/
	"tls.client.x509.issuer.organization": string,

	/**
	* tls.client.x509.issuer.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of issuing certificate authority.
	* Example: www.example.com
	*/
	"tls.client.x509.issuer.organizational_unit": string,

	/**
	* tls.client.x509.issuer.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"tls.client.x509.issuer.state_or_province": string,

	/**
	* tls.client.x509.not_after
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is no longer considered valid.
	* Example: 2020-07-16 03:15:39+00:00
	*/
	"tls.client.x509.not_after": Date,

	/**
	* tls.client.x509.not_before
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is first considered valid.
	* Example: 2019-08-16 01:40:25+00:00
	*/
	"tls.client.x509.not_before": Date,

	/**
	* tls.client.x509.public_key_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Algorithm used to generate the public key.
	* Example: RSA
	*/
	"tls.client.x509.public_key_algorithm": string,

	/**
	* tls.client.x509.public_key_curve
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
	* Example: nistp521
	*/
	"tls.client.x509.public_key_curve": string,

	/**
	* tls.client.x509.public_key_exponent
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: long
	* Description: Exponent used to derive the public key. This is algorithm specific.
	* Example: 65537
	*/
	"tls.client.x509.public_key_exponent": number,

	/**
	* tls.client.x509.public_key_size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: long
	* Description: The size of the public key space in bits.
	* Example: 2048
	*/
	"tls.client.x509.public_key_size": number,

	/**
	* tls.client.x509.serial_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
	* Example: 55FBB9C7DEBF09809D12CCAA
	*/
	"tls.client.x509.serial_number": string,

	/**
	* tls.client.x509.signature_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
	* Example: SHA256-RSA
	*/
	"tls.client.x509.signature_algorithm": string,

	/**
	* tls.client.x509.subject.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common names (CN) of subject.
	* Example: shared.global.example.net
	*/
	"tls.client.x509.subject.common_name": string,

	/**
	* tls.client.x509.subject.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) code
	* Example: US
	*/
	"tls.client.x509.subject.country": string,

	/**
	* tls.client.x509.subject.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of the certificate subject entity.
	* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
	*/
	"tls.client.x509.subject.distinguished_name": string,

	/**
	* tls.client.x509.subject.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: San Francisco
	*/
	"tls.client.x509.subject.locality": string,

	/**
	* tls.client.x509.subject.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of subject.
	* Example: Example, Inc.
	*/
	"tls.client.x509.subject.organization": string,

	/**
	* tls.client.x509.subject.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of subject.
	* Example: <None>
	*/
	"tls.client.x509.subject.organizational_unit": string,

	/**
	* tls.client.x509.subject.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"tls.client.x509.subject.state_or_province": string,

	/**
	* tls.client.x509.version_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Version of x509 format.
	* Example: 3
	*/
	"tls.client.x509.version_number": string,

	/**
	* tls.curve
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: String indicating the curve used for the given cipher, when applicable.
	* Example: secp256r1
	*/
	"tls.curve": string,

	/**
	* tls.established
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean flag indicating if the TLS negotiation was successful and transitioned to an encrypted tunnel.
	* Example: <None>
	*/
	"tls.established": boolean,

	/**
	* tls.next_protocol
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: String indicating the protocol being tunneled. Per the values in the IANA registry (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids), this string should be lower case.
	* Example: http/1.1
	*/
	"tls.next_protocol": string,

	/**
	* tls.resumed
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean flag indicating if this TLS connection was resumed from an existing TLS negotiation.
	* Example: <None>
	*/
	"tls.resumed": boolean,

	/**
	* tls.server.certificate
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: PEM-encoded stand-alone certificate offered by the server. This is usually mutually-exclusive of `server.certificate_chain` since this value also exists in that list.
	* Example: MII...
	*/
	"tls.server.certificate": string,

	/**
	* tls.server.certificate_chain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of PEM-encoded certificates that make up the certificate chain offered by the server. This is usually mutually-exclusive of `server.certificate` since that value should be the first certificate in the chain.
	* Example: ["MII...", "MII..."]
	*/
	"tls.server.certificate_chain": string[],

	/**
	* tls.server.hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
	* Example: 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC
	*/
	"tls.server.hash.md5": string,

	/**
	* tls.server.hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
	* Example: 9E393D93138888D288266C2D915214D1D1CCEB2A
	*/
	"tls.server.hash.sha1": string,

	/**
	* tls.server.hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
	* Example: 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0
	*/
	"tls.server.hash.sha256": string,

	/**
	* tls.server.issuer
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Subject of the issuer of the x.509 certificate presented by the server.
	* Example: CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com
	*/
	"tls.server.issuer": string,

	/**
	* tls.server.ja3s
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash that identifies servers based on how they perform an SSL/TLS handshake.
	* Example: 394441ab65754e2207b1e1b457b3641d
	*/
	"tls.server.ja3s": string,

	/**
	* tls.server.not_after
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Timestamp indicating when server certificate is no longer considered valid.
	* Example: 2021-01-01T00:00:00.000Z
	*/
	"tls.server.not_after": Date,

	/**
	* tls.server.not_before
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Timestamp indicating when server certificate is first considered valid.
	* Example: 1970-01-01T00:00:00.000Z
	*/
	"tls.server.not_before": Date,

	/**
	* tls.server.subject
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Subject of the x.509 certificate presented by the server.
	* Example: CN=www.example.com, OU=Infrastructure Team, DC=example, DC=com
	*/
	"tls.server.subject": string,

	/**
	* tls.server.x509.alternative_names
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
	* Example: *.elastic.co
	*/
	"tls.server.x509.alternative_names": string,

	/**
	* tls.server.x509.issuer.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common name (CN) of issuing certificate authority.
	* Example: Example SHA2 High Assurance Server CA
	*/
	"tls.server.x509.issuer.common_name": string,

	/**
	* tls.server.x509.issuer.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) codes
	* Example: US
	*/
	"tls.server.x509.issuer.country": string,

	/**
	* tls.server.x509.issuer.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of issuing certificate authority.
	* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
	*/
	"tls.server.x509.issuer.distinguished_name": string,

	/**
	* tls.server.x509.issuer.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: Mountain View
	*/
	"tls.server.x509.issuer.locality": string,

	/**
	* tls.server.x509.issuer.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of issuing certificate authority.
	* Example: Example Inc
	*/
	"tls.server.x509.issuer.organization": string,

	/**
	* tls.server.x509.issuer.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of issuing certificate authority.
	* Example: www.example.com
	*/
	"tls.server.x509.issuer.organizational_unit": string,

	/**
	* tls.server.x509.issuer.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"tls.server.x509.issuer.state_or_province": string,

	/**
	* tls.server.x509.not_after
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is no longer considered valid.
	* Example: 2020-07-16 03:15:39+00:00
	*/
	"tls.server.x509.not_after": Date,

	/**
	* tls.server.x509.not_before
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is first considered valid.
	* Example: 2019-08-16 01:40:25+00:00
	*/
	"tls.server.x509.not_before": Date,

	/**
	* tls.server.x509.public_key_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Algorithm used to generate the public key.
	* Example: RSA
	*/
	"tls.server.x509.public_key_algorithm": string,

	/**
	* tls.server.x509.public_key_curve
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
	* Example: nistp521
	*/
	"tls.server.x509.public_key_curve": string,

	/**
	* tls.server.x509.public_key_exponent
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: long
	* Description: Exponent used to derive the public key. This is algorithm specific.
	* Example: 65537
	*/
	"tls.server.x509.public_key_exponent": number,

	/**
	* tls.server.x509.public_key_size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: long
	* Description: The size of the public key space in bits.
	* Example: 2048
	*/
	"tls.server.x509.public_key_size": number,

	/**
	* tls.server.x509.serial_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
	* Example: 55FBB9C7DEBF09809D12CCAA
	*/
	"tls.server.x509.serial_number": string,

	/**
	* tls.server.x509.signature_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
	* Example: SHA256-RSA
	*/
	"tls.server.x509.signature_algorithm": string,

	/**
	* tls.server.x509.subject.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common names (CN) of subject.
	* Example: shared.global.example.net
	*/
	"tls.server.x509.subject.common_name": string,

	/**
	* tls.server.x509.subject.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) code
	* Example: US
	*/
	"tls.server.x509.subject.country": string,

	/**
	* tls.server.x509.subject.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of the certificate subject entity.
	* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
	*/
	"tls.server.x509.subject.distinguished_name": string,

	/**
	* tls.server.x509.subject.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: San Francisco
	*/
	"tls.server.x509.subject.locality": string,

	/**
	* tls.server.x509.subject.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of subject.
	* Example: Example, Inc.
	*/
	"tls.server.x509.subject.organization": string,

	/**
	* tls.server.x509.subject.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of subject.
	* Example: <None>
	*/
	"tls.server.x509.subject.organizational_unit": string,

	/**
	* tls.server.x509.subject.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"tls.server.x509.subject.state_or_province": string,

	/**
	* tls.server.x509.version_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Version of x509 format.
	* Example: 3
	*/
	"tls.server.x509.version_number": string,

	/**
	* tls.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Numeric part of the version parsed from the original string.
	* Example: 1.2
	*/
	"tls.version": string,

	/**
	* tls.version_protocol
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Normalized lowercase protocol name parsed from original string.
	* Example: tls
	*/
	"tls.version_protocol": string,

	/**
	* trace.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier of the trace. A trace groups multiple events like transactions that belong together. For example, a user request handled by multiple inter-connected services.
	* Example: 4bf92f3577b34da6a3ce929d0e0e4736
	*/
	"trace.id": string,

	/**
	* transaction.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier of the transaction within the scope of its trace. A transaction is the highest level of work measured within a service, such as a request to a server.
	* Example: 00f067aa0ba902b7
	*/
	"transaction.id": string,

	/**
	* url.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Domain of the url, such as "www.elastic.co". In some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.
	* Example: www.elastic.co
	*/
	"url.domain": string,

	/**
	* url.extension
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The field contains the file extension from the original request url, excluding the leading dot. The file extension is only set if it exists, as not every url has a file extension.
	The leading period must not be included. For example, the value must be "png", not ".png".
	Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").
	* Example: png
	*/
	"url.extension": string,

	/**
	* url.fragment
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Portion of the url after the `#`, such as "top". The `#` is not part of the fragment.
	* Example: <None>
	*/
	"url.fragment": string,

	/**
	* url.full
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.
	* Example: https://www.elastic.co:443/search?q=elasticsearch#top
	*/
	"url.full": string,

	/**
	* url.original
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unmodified original url as seen in the event source. Note that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.
	This field is meant to represent the URL as it was observed, complete or not.
	* Example: https://www.elastic.co:443/search?q=elasticsearch#top or /search?q=elasticsearch
	*/
	"url.original": string,

	/**
	* url.password
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Password of the request.
	* Example: <None>
	*/
	"url.password": string,

	/**
	* url.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Path of the request, such as "/search".
	* Example: <None>
	*/
	"url.path": string,

	/**
	* url.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: long
	* Description: Port of the request, such as 443.
	* Example: 443
	*/
	"url.port": number,

	/**
	* url.query
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The query field describes the query string of the request, such as "q=elasticsearch". The `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.
	* Example: <None>
	*/
	"url.query": string,

	/**
	* url.registered_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The highest registered url domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
	This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
	* Example: example.com
	*/
	"url.registered_domain": string,

	/**
	* url.scheme
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Scheme of the request, such as "https". Note: The `:` is not part of the scheme.
	* Example: https
	*/
	"url.scheme": string,

	/**
	* url.subdomain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain. For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
	* Example: east
	*/
	"url.subdomain": string,

	/**
	* url.top_level_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
	* Example: co.uk
	*/
	"url.top_level_domain": string,

	/**
	* url.username
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Username of the request.
	* Example: <None>
	*/
	"url.username": string,

	/**
	* user.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the user is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"user.domain": string,

	/**
	* user.email
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User email address.
	* Example: <None>
	*/
	"user.email": string,

	/**
	* user.full_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User's full name, if available.
	* Example: Albert Einstein
	*/
	"user.full_name": string,

	/**
	* user.group.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the group is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"user.group.domain": string,

	/**
	* user.group.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the group on the system/platform.
	* Example: <None>
	*/
	"user.group.id": string,

	/**
	* user.group.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the group.
	* Example: <None>
	*/
	"user.group.name": string,

	/**
	* user.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique user hash to correlate information for a user in anonymized form. Useful if `user.id` or `user.name` contain confidential information and cannot be used.
	* Example: <None>
	*/
	"user.hash": string,

	/**
	* user.roles
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of user roles at the time of the event.
	* Example: ["kibana_admin", "reporting_user"]
	*/
	"user.roles": string[],

	/**
	* user_agent.device.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the device.
	* Example: iPhone
	*/
	"user_agent.device.name": string,

	/**
	* user_agent.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the user agent.
	* Example: Safari
	*/
	"user_agent.name": string,

	/**
	* user_agent.original
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unparsed user_agent string.
	* Example: Mozilla/5.0 (iPhone; CPU iPhone OS 12_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Mobile/15E148 Safari/604.1
	*/
	"user_agent.original": string,

	/**
	* user_agent.os.family
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: OS family (such as redhat, debian, freebsd, windows).
	* Example: debian
	*/
	"user_agent.os.family": string,

	/**
	* user_agent.os.full
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, including the version or code name.
	* Example: Mac OS Mojave
	*/
	"user_agent.os.full": string,

	/**
	* user_agent.os.kernel
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system kernel version as a raw string.
	* Example: 4.4.0-112-generic
	*/
	"user_agent.os.kernel": string,

	/**
	* user_agent.os.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, without the version.
	* Example: Mac OS X
	*/
	"user_agent.os.name": string,

	/**
	* user_agent.os.platform
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system platform (such centos, ubuntu, windows).
	* Example: darwin
	*/
	"user_agent.os.platform": string,

	/**
	* user_agent.os.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system version as a raw string.
	* Example: 10.14.1
	*/
	"user_agent.os.version": string,

	/**
	* user_agent.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Version of the user agent.
	* Example: 12
	*/
	"user_agent.version": string,

	/**
	* vlan.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vlan.html
	* Field Set: vlan
	* Level: extended
	* Elasticsearch type: keyword
	* Description: VLAN ID as reported by the observer.
	* Example: 10
	*/
	"vlan.id": string,

	/**
	* vlan.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vlan.html
	* Field Set: vlan
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Optional VLAN name as reported by the observer.
	* Example: outside
	*/
	"vlan.name": string,

	/**
	* vulnerability.category
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of system or architecture that the vulnerability affects. These may be platform-specific (for example, Debian or SUSE) or general (for example, Database or Firewall). For example (https://qualysguard.qualys.com/qwebhelp/fo_portal/knowledgebase/vulnerability_categories.htm[Qualys vulnerability categories]) This field must be an array.
	* Example: ["Firewall"]
	*/
	"vulnerability.category": string[],

	/**
	* vulnerability.classification
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The classification of the vulnerability scoring system. For example (https://www.first.org/cvss/)
	* Example: CVSS
	*/
	"vulnerability.classification": string,

	/**
	* vulnerability.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The description of the vulnerability that provides additional context of the vulnerability. For example (https://cve.mitre.org/about/faqs.html#cve_entry_descriptions_created[Common Vulnerabilities and Exposure CVE description])
	* Example: In macOS before 2.12.6, there is a vulnerability in the RPC...
	*/
	"vulnerability.description": string,

	/**
	* vulnerability.enumeration
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of identifier used for this vulnerability. For example (https://cve.mitre.org/about/)
	* Example: CVE
	*/
	"vulnerability.enumeration": string,

	/**
	* vulnerability.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The identification (ID) is the number portion of a vulnerability entry. It includes a unique identification number for the vulnerability. For example (https://cve.mitre.org/about/faqs.html#what_is_cve_id)[Common Vulnerabilities and Exposure CVE ID]
	* Example: CVE-2019-00001
	*/
	"vulnerability.id": string,

	/**
	* vulnerability.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A resource that provides additional information, context, and mitigations for the identified vulnerability.
	* Example: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6111
	*/
	"vulnerability.reference": string,

	/**
	* vulnerability.report_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The report or scan identification number.
	* Example: 20191018.0001
	*/
	"vulnerability.report_id": string,

	/**
	* vulnerability.scanner.vendor
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The name of the vulnerability scanner vendor.
	* Example: Tenable
	*/
	"vulnerability.scanner.vendor": string,

	/**
	* vulnerability.score.base
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: float
	* Description: Scores can range from 0.0 to 10.0, with 10.0 being the most severe. Base scores cover an assessment for exploitability metrics (attack vector, complexity, privileges, and user interaction), impact metrics (confidentiality, integrity, and availability), and scope. For example (https://www.first.org/cvss/specification-document)
	* Example: 5.5
	*/
	"vulnerability.score.base": number,

	/**
	* vulnerability.score.environmental
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: float
	* Description: Scores can range from 0.0 to 10.0, with 10.0 being the most severe. Environmental scores cover an assessment for any modified Base metrics, confidentiality, integrity, and availability requirements. For example (https://www.first.org/cvss/specification-document)
	* Example: 5.5
	*/
	"vulnerability.score.environmental": number,

	/**
	* vulnerability.score.temporal
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: float
	* Description: Scores can range from 0.0 to 10.0, with 10.0 being the most severe. Temporal scores cover an assessment for code maturity, remediation level, and confidence. For example (https://www.first.org/cvss/specification-document)
	* Example: <None>
	*/
	"vulnerability.score.temporal": number,

	/**
	* vulnerability.score.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The National Vulnerability Database (NVD) provides qualitative severity rankings of "Low", "Medium", and "High" for CVSS v2.0 base score ranges in addition to the severity ratings for CVSS v3.0 as they are defined in the CVSS v3.0 specification. CVSS is owned and managed by FIRST.Org, Inc. (FIRST), a US-based non-profit organization, whose mission is to help computer security incident response teams across the world. For example (https://nvd.nist.gov/vuln-metrics/cvss)
	* Example: 2
	*/
	"vulnerability.score.version": string,

	/**
	* vulnerability.severity
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The severity of the vulnerability can help with metrics and internal prioritization regarding remediation. For example (https://nvd.nist.gov/vuln-metrics/cvss)
	* Example: Critical
	*/
	"vulnerability.severity": string,

	/**
	* x509.alternative_names
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
	* Example: *.elastic.co
	*/
	"x509.alternative_names": string[],

	/**
	* x509.issuer.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common name (CN) of issuing certificate authority.
	* Example: Example SHA2 High Assurance Server CA
	*/
	"x509.issuer.common_name": string[],

	/**
	* x509.issuer.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) codes
	* Example: US
	*/
	"x509.issuer.country": string[],

	/**
	* x509.issuer.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of issuing certificate authority.
	* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
	*/
	"x509.issuer.distinguished_name": string,

	/**
	* x509.issuer.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: Mountain View
	*/
	"x509.issuer.locality": string[],

	/**
	* x509.issuer.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of issuing certificate authority.
	* Example: Example Inc
	*/
	"x509.issuer.organization": string[],

	/**
	* x509.issuer.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of issuing certificate authority.
	* Example: www.example.com
	*/
	"x509.issuer.organizational_unit": string[],

	/**
	* x509.issuer.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"x509.issuer.state_or_province": string[],

	/**
	* x509.not_after
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is no longer considered valid.
	* Example: 2020-07-16 03:15:39+00:00
	*/
	"x509.not_after": Date,

	/**
	* x509.not_before
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is first considered valid.
	* Example: 2019-08-16 01:40:25+00:00
	*/
	"x509.not_before": Date,

	/**
	* x509.public_key_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Algorithm used to generate the public key.
	* Example: RSA
	*/
	"x509.public_key_algorithm": string,

	/**
	* x509.public_key_curve
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
	* Example: nistp521
	*/
	"x509.public_key_curve": string,

	/**
	* x509.public_key_exponent
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: long
	* Description: Exponent used to derive the public key. This is algorithm specific.
	* Example: 65537
	*/
	"x509.public_key_exponent": number,

	/**
	* x509.public_key_size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: long
	* Description: The size of the public key space in bits.
	* Example: 2048
	*/
	"x509.public_key_size": number,

	/**
	* x509.serial_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
	* Example: 55FBB9C7DEBF09809D12CCAA
	*/
	"x509.serial_number": string,

	/**
	* x509.signature_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
	* Example: SHA256-RSA
	*/
	"x509.signature_algorithm": string,

	/**
	* x509.subject.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common names (CN) of subject.
	* Example: shared.global.example.net
	*/
	"x509.subject.common_name": string[],

	/**
	* x509.subject.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) code
	* Example: US
	*/
	"x509.subject.country": string[],

	/**
	* x509.subject.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of the certificate subject entity.
	* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
	*/
	"x509.subject.distinguished_name": string,

	/**
	* x509.subject.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: San Francisco
	*/
	"x509.subject.locality": string[],

	/**
	* x509.subject.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of subject.
	* Example: Example, Inc.
	*/
	"x509.subject.organization": string[],

	/**
	* x509.subject.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of subject.
	* Example: <None>
	*/
	"x509.subject.organizational_unit": string[],

	/**
	* x509.subject.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"x509.subject.state_or_province": string[],

	/**
	* x509.version_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Version of x509 format.
	* Example: 3
	*/
	"x509.version_number": string,


}

export interface EcsFields {
	/**
	* @timestamp
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: core
	* Elasticsearch type: date
	* Description: Date/time when the event originated. This is the date/time extracted from the event, typically representing when the event was generated by the source.
	If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.
	Required field for all events.
	* Example: 2016-05-23T08:05:34.853Z
	*/
	"@timestamp": Date,

	/**
	* agent.build.original
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-agent.html
	* Field Set: agent
	* Level: core
	* Elasticsearch type: keyword
	* Description: Extended build information for the agent. This field is intended to contain any build information that a data source may provide, no specific formatting is required.
	* Example: metricbeat version 7.6.0 (amd64), libbeat 7.6.0 [6a23e8f8f30f5001ba344e4e54d8d9cb82cb107c built 2020-02-05 23:10:10 +0000 UTC]
	*/
	"agent.build.original": string,

	/**
	* agent.ephemeral_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-agent.html
	* Field Set: agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Ephemeral identifier of this agent (if one exists). This id normally changes across restarts, but `agent.id` does not.
	* Example: 8a4f500f
	*/
	"agent.ephemeral_id": string,

	/**
	* agent.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-agent.html
	* Field Set: agent
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of this agent (if one exists). Example: For Beats this would be beat.id.
	* Example: 8a4f500d
	*/
	"agent.id": string,

	/**
	* agent.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-agent.html
	* Field Set: agent
	* Level: core
	* Elasticsearch type: keyword
	* Description: Custom name of the agent. This is a name that can be given to an agent. This can be helpful if for example two Filebeat instances are running on the same host but a human readable separation is needed on which Filebeat instance data is coming from.
	If no name is given, the name is often left empty.
	* Example: foo
	*/
	"agent.name": string,

	/**
	* agent.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-agent.html
	* Field Set: agent
	* Level: core
	* Elasticsearch type: keyword
	* Description: Type of the agent. The agent type always stays the same and should be given by the agent used. In case of Filebeat the agent would always be Filebeat also if two Filebeat instances are run on the same machine.
	* Example: filebeat
	*/
	"agent.type": string,

	/**
	* agent.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-agent.html
	* Field Set: agent
	* Level: core
	* Elasticsearch type: keyword
	* Description: Version of the agent.
	* Example: 6.0.0-rc2
	*/
	"agent.version": string,

	/**
	* as.number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-as.html
	* Field Set: as
	* Level: extended
	* Elasticsearch type: long
	* Description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
	* Example: 15169
	*/
	"as.number": number,

	/**
	* as.organization.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-as.html
	* Field Set: as
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Organization name.
	* Example: Google LLC
	*/
	"as.organization.name": string,

	/**
	* client.address
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Some event client addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field. Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
	* Example: <None>
	*/
	"client.address": string,

	/**
	* client.as.number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: long
	* Description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
	* Example: 15169
	*/
	"client.as.number": number,

	/**
	* client.as.organization.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Organization name.
	* Example: Google LLC
	*/
	"client.as.organization.name": string,

	/**
	* client.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: long
	* Description: Bytes sent from the client to the server.
	* Example: 184
	*/
	"client.bytes": number,

	/**
	* client.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Client domain.
	* Example: <None>
	*/
	"client.domain": string,

	/**
	* client.geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"client.geo.city_name": string,

	/**
	* client.geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"client.geo.continent_name": string,

	/**
	* client.geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"client.geo.country_iso_code": string,

	/**
	* client.geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"client.geo.country_name": string,

	/**
	* client.geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"client.geo.location": GeoPoint,

	/**
	* client.geo.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
	Not typically used in automated geolocation.
	* Example: boston-dc
	*/
	"client.geo.name": string,

	/**
	* client.geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"client.geo.region_iso_code": string,

	/**
	* client.geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"client.geo.region_name": string,

	/**
	* client.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: ip
	* Description: IP address of the client (IPv4 or IPv6).
	* Example: <None>
	*/
	"client.ip": string,

	/**
	* client.mac
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: MAC address of the client.
	* Example: <None>
	*/
	"client.mac": string,

	/**
	* client.nat.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: ip
	* Description: Translated IP of source based NAT sessions (e.g. internal client to internet). Typically connections traversing load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"client.nat.ip": string,

	/**
	* client.nat.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: long
	* Description: Translated port of source based NAT sessions (e.g. internal client to internet). Typically connections traversing load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"client.nat.port": number,

	/**
	* client.packets
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: long
	* Description: Packets sent from the client to the server.
	* Example: 12
	*/
	"client.packets": number,

	/**
	* client.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: long
	* Description: Port of the client.
	* Example: <None>
	*/
	"client.port": number,

	/**
	* client.registered_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The highest registered client domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
	This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
	* Example: example.com
	*/
	"client.registered_domain": string,

	/**
	* client.subdomain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain. For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
	* Example: east
	*/
	"client.subdomain": string,

	/**
	* client.top_level_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
	* Example: co.uk
	*/
	"client.top_level_domain": string,

	/**
	* client.user.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the user is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"client.user.domain": string,

	/**
	* client.user.email
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User email address.
	* Example: <None>
	*/
	"client.user.email": string,

	/**
	* client.user.full_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User's full name, if available.
	* Example: Albert Einstein
	*/
	"client.user.full_name": string,

	/**
	* client.user.group.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the group is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"client.user.group.domain": string,

	/**
	* client.user.group.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the group on the system/platform.
	* Example: <None>
	*/
	"client.user.group.id": string,

	/**
	* client.user.group.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the group.
	* Example: <None>
	*/
	"client.user.group.name": string,

	/**
	* client.user.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique user hash to correlate information for a user in anonymized form. Useful if `user.id` or `user.name` contain confidential information and cannot be used.
	* Example: <None>
	*/
	"client.user.hash": string,

	/**
	* client.user.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the user.
	* Example: <None>
	*/
	"client.user.id": string,

	/**
	* client.user.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: core
	* Elasticsearch type: keyword
	* Description: Short name or login of the user.
	* Example: albert
	*/
	"client.user.name": string,

	/**
	* client.user.roles
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-client.html
	* Field Set: client
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of user roles at the time of the event.
	* Example: ["kibana_admin", "reporting_user"]
	*/
	"client.user.roles": string,

	/**
	* cloud.account.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The cloud account or organization id used to identify different entities in a multi-tenant environment. Examples: AWS account id, Google Cloud ORG Id, or other unique identifier.
	* Example: 666777888999
	*/
	"cloud.account.id": string,

	/**
	* cloud.account.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The cloud account name or alias used to identify different entities in a multi-tenant environment. Examples: AWS account name, Google Cloud ORG display name.
	* Example: elastic-dev
	*/
	"cloud.account.name": string,

	/**
	* cloud.availability_zone
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Availability zone in which this host is running.
	* Example: us-east-1c
	*/
	"cloud.availability_zone": string,

	/**
	* cloud.instance.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Instance ID of the host machine.
	* Example: i-1234567890abcdef0
	*/
	"cloud.instance.id": string,

	/**
	* cloud.instance.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Instance name of the host machine.
	* Example: <None>
	*/
	"cloud.instance.name": string,

	/**
	* cloud.machine.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Machine type of the host machine.
	* Example: t2.medium
	*/
	"cloud.machine.type": string,

	/**
	* cloud.project.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The cloud project identifier. Examples: Google Cloud Project id, Azure Project id.
	* Example: my-project
	*/
	"cloud.project.id": string,

	/**
	* cloud.project.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The cloud project name. Examples: Google Cloud Project name, Azure Project name.
	* Example: my project
	*/
	"cloud.project.name": string,

	/**
	* cloud.provider
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean.
	* Example: aws
	*/
	"cloud.provider": string,

	/**
	* cloud.region
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Region in which this host is running.
	* Example: us-east-1
	*/
	"cloud.region": string,

	/**
	* code_signature.exists
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: core
	* Elasticsearch type: boolean
	* Description: Boolean to capture if a signature is present.
	* Example: true
	*/
	"code_signature.exists": boolean,

	/**
	* code_signature.status
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
	* Example: ERROR_UNTRUSTED_ROOT
	*/
	"code_signature.status": string,

	/**
	* code_signature.subject_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: core
	* Elasticsearch type: keyword
	* Description: Subject name of the code signer
	* Example: Microsoft Corporation
	*/
	"code_signature.subject_name": string,

	/**
	* code_signature.trusted
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
	* Example: true
	*/
	"code_signature.trusted": boolean,

	/**
	* code_signature.valid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
	* Example: true
	*/
	"code_signature.valid": boolean,

	/**
	* container.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique container id.
	* Example: <None>
	*/
	"container.id": string,

	/**
	* container.image.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the image the container was built on.
	* Example: <None>
	*/
	"container.image.name": string,

	/**
	* container.image.tag
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Container image tags.
	* Example: <None>
	*/
	"container.image.tag": string[],

	/**
	* container.labels
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: extended
	* Elasticsearch type: object
	* Description: Image labels.
	* Example: <None>
	*/
	"container.labels": object,

	/**
	* container.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Container name.
	* Example: <None>
	*/
	"container.name": string,

	/**
	* container.runtime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Runtime managing this container.
	* Example: docker
	*/
	"container.runtime": string,

	/**
	* destination.address
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Some event destination addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field. Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
	* Example: <None>
	*/
	"destination.address": string,

	/**
	* destination.as.number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: long
	* Description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
	* Example: 15169
	*/
	"destination.as.number": number,

	/**
	* destination.as.organization.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Organization name.
	* Example: Google LLC
	*/
	"destination.as.organization.name": string,

	/**
	* destination.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: long
	* Description: Bytes sent from the destination to the source.
	* Example: 184
	*/
	"destination.bytes": number,

	/**
	* destination.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Destination domain.
	* Example: <None>
	*/
	"destination.domain": string,

	/**
	* destination.geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"destination.geo.city_name": string,

	/**
	* destination.geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"destination.geo.continent_name": string,

	/**
	* destination.geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"destination.geo.country_iso_code": string,

	/**
	* destination.geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"destination.geo.country_name": string,

	/**
	* destination.geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"destination.geo.location": GeoPoint,

	/**
	* destination.geo.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
	Not typically used in automated geolocation.
	* Example: boston-dc
	*/
	"destination.geo.name": string,

	/**
	* destination.geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"destination.geo.region_iso_code": string,

	/**
	* destination.geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"destination.geo.region_name": string,

	/**
	* destination.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: ip
	* Description: IP address of the destination (IPv4 or IPv6).
	* Example: <None>
	*/
	"destination.ip": string,

	/**
	* destination.mac
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: MAC address of the destination.
	* Example: <None>
	*/
	"destination.mac": string,

	/**
	* destination.nat.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: ip
	* Description: Translated ip of destination based NAT sessions (e.g. internet to private DMZ) Typically used with load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"destination.nat.ip": string,

	/**
	* destination.nat.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: long
	* Description: Port the source session is translated to by NAT Device. Typically used with load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"destination.nat.port": number,

	/**
	* destination.packets
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: long
	* Description: Packets sent from the destination to the source.
	* Example: 12
	*/
	"destination.packets": number,

	/**
	* destination.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: long
	* Description: Port of the destination.
	* Example: <None>
	*/
	"destination.port": number,

	/**
	* destination.registered_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The highest registered destination domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
	This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
	* Example: example.com
	*/
	"destination.registered_domain": string,

	/**
	* destination.subdomain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain. For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
	* Example: east
	*/
	"destination.subdomain": string,

	/**
	* destination.top_level_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
	* Example: co.uk
	*/
	"destination.top_level_domain": string,

	/**
	* destination.user.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the user is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"destination.user.domain": string,

	/**
	* destination.user.email
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User email address.
	* Example: <None>
	*/
	"destination.user.email": string,

	/**
	* destination.user.full_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User's full name, if available.
	* Example: Albert Einstein
	*/
	"destination.user.full_name": string,

	/**
	* destination.user.group.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the group is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"destination.user.group.domain": string,

	/**
	* destination.user.group.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the group on the system/platform.
	* Example: <None>
	*/
	"destination.user.group.id": string,

	/**
	* destination.user.group.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the group.
	* Example: <None>
	*/
	"destination.user.group.name": string,

	/**
	* destination.user.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique user hash to correlate information for a user in anonymized form. Useful if `user.id` or `user.name` contain confidential information and cannot be used.
	* Example: <None>
	*/
	"destination.user.hash": string,

	/**
	* destination.user.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the user.
	* Example: <None>
	*/
	"destination.user.id": string,

	/**
	* destination.user.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: core
	* Elasticsearch type: keyword
	* Description: Short name or login of the user.
	* Example: albert
	*/
	"destination.user.name": string,

	/**
	* destination.user.roles
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-destination.html
	* Field Set: destination
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of user roles at the time of the event.
	* Example: ["kibana_admin", "reporting_user"]
	*/
	"destination.user.roles": string,

	/**
	* dll.code_signature.exists
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: core
	* Elasticsearch type: boolean
	* Description: Boolean to capture if a signature is present.
	* Example: true
	*/
	"dll.code_signature.exists": boolean,

	/**
	* dll.code_signature.status
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
	* Example: ERROR_UNTRUSTED_ROOT
	*/
	"dll.code_signature.status": string,

	/**
	* dll.code_signature.subject_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: core
	* Elasticsearch type: keyword
	* Description: Subject name of the code signer
	* Example: Microsoft Corporation
	*/
	"dll.code_signature.subject_name": string,

	/**
	* dll.code_signature.trusted
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
	* Example: true
	*/
	"dll.code_signature.trusted": boolean,

	/**
	* dll.code_signature.valid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
	* Example: true
	*/
	"dll.code_signature.valid": boolean,

	/**
	* dll.hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MD5 hash.
	* Example: <None>
	*/
	"dll.hash.md5": string,

	/**
	* dll.hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA1 hash.
	* Example: <None>
	*/
	"dll.hash.sha1": string,

	/**
	* dll.hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA256 hash.
	* Example: <None>
	*/
	"dll.hash.sha256": string,

	/**
	* dll.hash.sha512
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA512 hash.
	* Example: <None>
	*/
	"dll.hash.sha512": string,

	/**
	* dll.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the library. This generally maps to the name of the file on disk.
	* Example: kernel32.dll
	*/
	"dll.name": string,

	/**
	* dll.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Full file path of the library.
	* Example: C:\Windows\System32\kernel32.dll
	*/
	"dll.path": string,

	/**
	* dll.pe.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: CPU architecture target for the file.
	* Example: x64
	*/
	"dll.pe.architecture": string,

	/**
	* dll.pe.company
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal company name of the file, provided at compile-time.
	* Example: Microsoft Corporation
	*/
	"dll.pe.company": string,

	/**
	* dll.pe.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal description of the file, provided at compile-time.
	* Example: Paint
	*/
	"dll.pe.description": string,

	/**
	* dll.pe.file_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal version of the file, provided at compile-time.
	* Example: 6.3.9600.17415
	*/
	"dll.pe.file_version": string,

	/**
	* dll.pe.imphash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
	* Example: 0c6803c4e922103c4dca5963aad36ddf
	*/
	"dll.pe.imphash": string,

	/**
	* dll.pe.original_file_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal name of the file, provided at compile-time.
	* Example: MSPAINT.EXE
	*/
	"dll.pe.original_file_name": string,

	/**
	* dll.pe.product
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dll.html
	* Field Set: dll
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal product name of the file, provided at compile-time.
	* Example: Microsoft® Windows® Operating System
	*/
	"dll.pe.product": string,

	/**
	* dns.answers
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: object
	* Description: An array containing an object for each answer section returned by the server. The main keys that should be present in these objects are defined by ECS. Records that have more information may contain more keys than what ECS defines.
	Not all DNS data sources give all details about DNS answers. At minimum, answer objects must contain the `data` key. If more information is available, map as much of it to ECS as possible, and add any additional fields to the answer objects as custom fields.
	* Example: <None>
	*/
	"dns.answers": object[],

	/**
	* dns.answers.class
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The class of DNS data contained in this resource record.
	* Example: IN
	*/
	"dns.answers.class": string,

	/**
	* dns.answers.data
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The data describing the resource. The meaning of this data depends on the type and class of the resource record.
	* Example: 10.10.10.10
	*/
	"dns.answers.data": string,

	/**
	* dns.answers.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The domain name to which this resource record pertains. If a chain of CNAME is being resolved, each answer's `name` should be the one that corresponds with the answer's `data`. It should not simply be the original `question.name` repeated.
	* Example: www.example.com
	*/
	"dns.answers.name": string,

	/**
	* dns.answers.ttl
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: long
	* Description: The time interval in seconds that this resource record may be cached before it should be discarded. Zero values mean that the data should not be cached.
	* Example: 180
	*/
	"dns.answers.ttl": number,

	/**
	* dns.answers.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of data contained in this resource record.
	* Example: CNAME
	*/
	"dns.answers.type": string,

	/**
	* dns.header_flags
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of 2 letter DNS header flags. Expected values are: AA, TC, RD, RA, AD, CD, DO.
	* Example: ["RD", "RA"]
	*/
	"dns.header_flags": string[],

	/**
	* dns.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The DNS packet identifier assigned by the program that generated the query. The identifier is copied to the response.
	* Example: 62111
	*/
	"dns.id": string,

	/**
	* dns.op_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The DNS operation code that specifies the kind of query in the message. This value is set by the originator of a query and copied into the response.
	* Example: QUERY
	*/
	"dns.op_code": string,

	/**
	* dns.question.class
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The class of records being queried.
	* Example: IN
	*/
	"dns.question.class": string,

	/**
	* dns.question.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The name being queried. If the name field contains non-printable characters (below 32 or above 126), those characters should be represented as escaped base 10 integers (\DDD). Back slashes and quotes should be escaped. Tabs, carriage returns, and line feeds should be converted to \t, \r, and \n respectively.
	* Example: www.example.com
	*/
	"dns.question.name": string,

	/**
	* dns.question.registered_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The highest registered domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
	This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
	* Example: example.com
	*/
	"dns.question.registered_domain": string,

	/**
	* dns.question.subdomain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The subdomain is all of the labels under the registered_domain. If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
	* Example: www
	*/
	"dns.question.subdomain": string,

	/**
	* dns.question.top_level_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
	* Example: co.uk
	*/
	"dns.question.top_level_domain": string,

	/**
	* dns.question.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of record being queried.
	* Example: AAAA
	*/
	"dns.question.type": string,

	/**
	* dns.resolved_ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: ip
	* Description: Array containing all IPs seen in `answers.data`. The `answers` array can be difficult to use, because of the variety of data formats it can contain. Extracting all IP addresses seen in there to `dns.resolved_ip` makes it possible to index them as IP addresses, and makes them easier to visualize and query for.
	* Example: ["10.10.10.10", "10.10.10.11"]
	*/
	"dns.resolved_ip": string[],

	/**
	* dns.response_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The DNS response code.
	* Example: NOERROR
	*/
	"dns.response_code": string,

	/**
	* dns.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of DNS event captured, query or answer. If your source of DNS events only gives you DNS queries, you should only create dns events of type `dns.type:query`.
	If your source of DNS events gives you answers as well, you should create one event per query (optionally as soon as the query is seen). And a second event containing all query details as well as an array of answers.
	* Example: answer
	*/
	"dns.type": string,

	/**
	* ecs.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-ecs.html
	* Field Set: ecs
	* Level: core
	* Elasticsearch type: keyword
	* Description: ECS version this event conforms to. `ecs.version` is a required field and must exist in all events. When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
	* Example: 1.0.0
	*/
	"ecs.version": string,

	/**
	* error.code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: core
	* Elasticsearch type: keyword
	* Description: Error code describing the error.
	* Example: <None>
	*/
	"error.code": string,

	/**
	* error.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier for the error.
	* Example: <None>
	*/
	"error.id": string,

	/**
	* error.message
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: core
	* Elasticsearch type: text
	* Description: Error message.
	* Example: <None>
	*/
	"error.message": string,

	/**
	* error.stack_trace
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The stack trace of this error in plain text.
	* Example: <None>
	*/
	"error.stack_trace": string,

	/**
	* error.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of the error, for example the class name of the exception.
	* Example: java.lang.NullPointerException
	*/
	"error.type": string,

	/**
	* event.action
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: The action captured by the event. This describes the information in the event. It is more specific than `event.category`. Examples are `group-add`, `process-started`, `file-created`. The value is normally defined by the implementer.
	* Example: user-password-change
	*/
	"event.action": string,

	/**
	* event.category
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy. `event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.
	This field is an array. This will allow proper categorization of some events that fall in multiple categories.
	* Example: authentication
	*/
	"event.category": ('authentication' | 'configuration' | 'database' | 'driver' | 'file' | 'host' | 'iam' | 'intrusion_detection' | 'malware' | 'network' | 'package' | 'process' | 'web')[],

	/**
	* event.code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Identification code for this event, if one exists. Some event sources use event codes to identify messages unambiguously, regardless of message language or wording adjustments over time. An example of this is the Windows Event ID.
	* Example: 4648
	*/
	"event.code": string,

	/**
	* event.created
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: date
	* Description: event.created contains the date/time when the event was first read by an agent, or by your pipeline. This field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.
	In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.
	In case the two timestamps are identical, @timestamp should be used.
	* Example: 2016-05-23T08:05:34.857Z
	*/
	"event.created": Date,

	/**
	* event.dataset
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the dataset. If an event source publishes more than one type of log or events (e.g. access log, error log), the dataset is used to specify which one the event comes from.
	It's recommended but not required to start the dataset name with the module name, followed by a dot, then the dataset name.
	* Example: apache.access
	*/
	"event.dataset": string,

	/**
	* event.duration
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: long
	* Description: Duration of the event in nanoseconds. If event.start and event.end are known this value should be the difference between the end and start time.
	* Example: <None>
	*/
	"event.duration": number,

	/**
	* event.end
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: date
	* Description: event.end contains the date when the event ended or when the activity was last observed.
	* Example: <None>
	*/
	"event.end": Date,

	/**
	* event.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Hash (perhaps logstash fingerprint) of raw field to be able to demonstrate log integrity.
	* Example: 123456789012345678901234567890ABCD
	*/
	"event.hash": string,

	/**
	* event.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique ID to describe the event.
	* Example: 8a4f500d
	*/
	"event.id": string,

	/**
	* event.ingested
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: date
	* Description: Timestamp when an event arrived in the central data store. This is different from `@timestamp`, which is when the event originally occurred.  It's also different from `event.created`, which is meant to capture the first time an agent saw the event.
	In normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`.
	* Example: 2016-05-23T08:05:35.101Z
	*/
	"event.ingested": Date,

	/**
	* event.kind
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy. `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.
	The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.
	* Example: alert
	*/
	"event.kind": ('alert' | 'event' | 'metric' | 'state' | 'pipeline_error' | 'signal'),

	/**
	* event.module
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the module this data is coming from. If your monitoring agent supports the concept of modules or plugins to process events of a given source (e.g. Apache logs), `event.module` should contain the name of this module.
	* Example: apache
	*/
	"event.module": string,

	/**
	* event.original
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: Raw text message of entire event. Used to demonstrate log integrity. This field is not indexed and doc_values are disabled. It cannot be searched, but it can be retrieved from `_source`.
	* Example: Sep 19 08:26:10 host CEF:0&#124;Security&#124; threatmanager&#124;1.0&#124;100&#124; worm successfully stopped&#124;10&#124;src=10.0.0.1 dst=2.1.2.2spt=1232
	*/
	"event.original": string,

	/**
	* event.outcome
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is one of four ECS Categorization Fields, and indicates the lowest level in the ECS category hierarchy. `event.outcome` simply denotes whether the event represents a success or a failure from the perspective of the entity that produced the event.
	Note that when a single transaction is described in multiple events, each event may populate different values of `event.outcome`, according to their perspective.
	Also note that in the case of a compound event (a single event that contains multiple logical events), this field should be populated with the value that best captures the overall success or failure from the perspective of the event producer.
	Further note that not all events will have an associated outcome. For example, this field is generally not populated for metric events, events with `event.type:info`, or any events for which an outcome does not make logical sense.
	* Example: success
	*/
	"event.outcome": ('failure' | 'success' | 'unknown'),

	/**
	* event.provider
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Source of the event. Event transports such as Syslog or the Windows Event Log typically mention the source of an event. It can be the name of the software that generated the event (e.g. Sysmon, httpd), or of a subsystem of the operating system (kernel, Microsoft-Windows-Security-Auditing).
	* Example: kernel
	*/
	"event.provider": string,

	/**
	* event.reason
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Reason why this event happened, according to the source. This describes the why of a particular action or outcome captured in the event. Where `event.action` captures the action from the event, `event.reason` describes why that action was taken. For example, a web proxy with an `event.action` which denied the request may also populate `event.reason` with the reason why (e.g. `blocked site`).
	* Example: Terminated an unexpected process
	*/
	"event.reason": string,

	/**
	* event.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Reference URL linking to additional information about this event. This URL links to a static definition of the this event. Alert events, indicated by `event.kind:alert`, are a common use case for this field.
	* Example: https://system.example.com/event/#0001234
	*/
	"event.reference": string,

	/**
	* event.risk_score
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: float
	* Description: Risk score or priority of the event (e.g. security solutions). Use your system's original value here.
	* Example: <None>
	*/
	"event.risk_score": number,

	/**
	* event.risk_score_norm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: float
	* Description: Normalized risk score or priority of the event, on a scale of 0 to 100. This is mainly useful if you use more than one system that assigns risk scores, and you want to see a normalized value across all systems.
	* Example: <None>
	*/
	"event.risk_score_norm": number,

	/**
	* event.sequence
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: long
	* Description: Sequence number of the event. The sequence number is a value published by some event sources, to make the exact ordering of events unambiguous, regardless of the timestamp precision.
	* Example: <None>
	*/
	"event.sequence": number,

	/**
	* event.severity
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: long
	* Description: The numeric severity of the event according to your event source. What the different severity values mean can be different between sources and use cases. It's up to the implementer to make sure severities are consistent across events from the same source.
	The Syslog severity belongs in `log.syslog.severity.code`. `event.severity` is meant to represent the severity according to the event source (e.g. firewall, IDS). If the event source does not publish its own severity, you may optionally copy the `log.syslog.severity.code` to `event.severity`.
	* Example: 7
	*/
	"event.severity": number,

	/**
	* event.start
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: date
	* Description: event.start contains the date when the event started or when the activity was first observed.
	* Example: <None>
	*/
	"event.start": Date,

	/**
	* event.timezone
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: This field should be populated when the event's timestamp does not include timezone information already (e.g. default Syslog timestamps). It's optional otherwise. Acceptable timezone formats are: a canonical ID (e.g. "Europe/Amsterdam"), abbreviated (e.g. "EST") or an HH:mm differential (e.g. "-05:00").
	* Example: <None>
	*/
	"event.timezone": string,

	/**
	* event.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy. `event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.
	This field is an array. This will allow proper categorization of some events that fall in multiple event types.
	* Example: <None>
	*/
	"event.type": ('access' | 'admin' | 'allowed' | 'change' | 'connection' | 'creation' | 'deletion' | 'denied' | 'end' | 'error' | 'group' | 'info' | 'installation' | 'protocol' | 'start' | 'user')[],

	/**
	* event.url
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: URL linking to an external system to continue investigation of this event. This URL links to another system where in-depth investigation of the specific occurrence of this event can take place. Alert events, indicated by `event.kind:alert`, are a common use case for this field.
	* Example: https://mysystem.example.com/alert/5271dedb-f5b0-4218-87f0-4ac4870a38fe
	*/
	"event.url": string,

	/**
	* file.accessed
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Last time the file was accessed. Note that not all filesystems keep track of access time.
	* Example: <None>
	*/
	"file.accessed": Date,

	/**
	* file.attributes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of file attributes. Attributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.
	* Example: ["readonly", "system"]
	*/
	"file.attributes": string[],

	/**
	* file.code_signature.exists
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: core
	* Elasticsearch type: boolean
	* Description: Boolean to capture if a signature is present.
	* Example: true
	*/
	"file.code_signature.exists": boolean,

	/**
	* file.code_signature.status
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
	* Example: ERROR_UNTRUSTED_ROOT
	*/
	"file.code_signature.status": string,

	/**
	* file.code_signature.subject_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: core
	* Elasticsearch type: keyword
	* Description: Subject name of the code signer
	* Example: Microsoft Corporation
	*/
	"file.code_signature.subject_name": string,

	/**
	* file.code_signature.trusted
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
	* Example: true
	*/
	"file.code_signature.trusted": boolean,

	/**
	* file.code_signature.valid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
	* Example: true
	*/
	"file.code_signature.valid": boolean,

	/**
	* file.created
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: File creation time. Note that not all filesystems store the creation time.
	* Example: <None>
	*/
	"file.created": Date,

	/**
	* file.ctime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Last time the file attributes or metadata changed. Note that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file.
	* Example: <None>
	*/
	"file.ctime": Date,

	/**
	* file.device
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Device that is the source of the file.
	* Example: sda
	*/
	"file.device": string,

	/**
	* file.directory
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Directory where the file is located. It should include the drive letter, when appropriate.
	* Example: /home/alice
	*/
	"file.directory": string,

	/**
	* file.drive_letter
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Drive letter where the file is located. This field is only relevant on Windows. The value should be uppercase, and not include the colon.
	* Example: C
	*/
	"file.drive_letter": string,

	/**
	* file.extension
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: File extension, excluding the leading dot. Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").
	* Example: png
	*/
	"file.extension": string,

	/**
	* file.gid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Primary group ID (GID) of the file.
	* Example: 1001
	*/
	"file.gid": string,

	/**
	* file.group
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Primary group name of the file.
	* Example: alice
	*/
	"file.group": string,

	/**
	* file.hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MD5 hash.
	* Example: <None>
	*/
	"file.hash.md5": string,

	/**
	* file.hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA1 hash.
	* Example: <None>
	*/
	"file.hash.sha1": string,

	/**
	* file.hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA256 hash.
	* Example: <None>
	*/
	"file.hash.sha256": string,

	/**
	* file.hash.sha512
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA512 hash.
	* Example: <None>
	*/
	"file.hash.sha512": string,

	/**
	* file.inode
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Inode representing the file in the filesystem.
	* Example: 256383
	*/
	"file.inode": string,

	/**
	* file.mime_type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.
	* Example: <None>
	*/
	"file.mime_type": string,

	/**
	* file.mode
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Mode of the file in octal representation.
	* Example: 0640
	*/
	"file.mode": string,

	/**
	* file.mtime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Last time the file content was modified.
	* Example: <None>
	*/
	"file.mtime": Date,

	/**
	* file.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the file including the extension, without the directory.
	* Example: example.png
	*/
	"file.name": string,

	/**
	* file.owner
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: File owner's username.
	* Example: alice
	*/
	"file.owner": string,

	/**
	* file.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Full path to the file, including the file name. It should include the drive letter, when appropriate.
	* Example: /home/alice/example.png
	*/
	"file.path": string,

	/**
	* file.pe.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: CPU architecture target for the file.
	* Example: x64
	*/
	"file.pe.architecture": string,

	/**
	* file.pe.company
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal company name of the file, provided at compile-time.
	* Example: Microsoft Corporation
	*/
	"file.pe.company": string,

	/**
	* file.pe.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal description of the file, provided at compile-time.
	* Example: Paint
	*/
	"file.pe.description": string,

	/**
	* file.pe.file_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal version of the file, provided at compile-time.
	* Example: 6.3.9600.17415
	*/
	"file.pe.file_version": string,

	/**
	* file.pe.imphash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
	* Example: 0c6803c4e922103c4dca5963aad36ddf
	*/
	"file.pe.imphash": string,

	/**
	* file.pe.original_file_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal name of the file, provided at compile-time.
	* Example: MSPAINT.EXE
	*/
	"file.pe.original_file_name": string,

	/**
	* file.pe.product
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal product name of the file, provided at compile-time.
	* Example: Microsoft® Windows® Operating System
	*/
	"file.pe.product": string,

	/**
	* file.size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: long
	* Description: File size in bytes. Only relevant when `file.type` is "file".
	* Example: 16384
	*/
	"file.size": number,

	/**
	* file.target_path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Target path for symlinks.
	* Example: <None>
	*/
	"file.target_path": string,

	/**
	* file.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: File type (file, dir, or symlink).
	* Example: file
	*/
	"file.type": string,

	/**
	* file.uid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The user ID (UID) or security identifier (SID) of the file owner.
	* Example: 1001
	*/
	"file.uid": string,

	/**
	* file.x509.alternative_names
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
	* Example: *.elastic.co
	*/
	"file.x509.alternative_names": string,

	/**
	* file.x509.issuer.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common name (CN) of issuing certificate authority.
	* Example: Example SHA2 High Assurance Server CA
	*/
	"file.x509.issuer.common_name": string,

	/**
	* file.x509.issuer.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) codes
	* Example: US
	*/
	"file.x509.issuer.country": string,

	/**
	* file.x509.issuer.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of issuing certificate authority.
	* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
	*/
	"file.x509.issuer.distinguished_name": string,

	/**
	* file.x509.issuer.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: Mountain View
	*/
	"file.x509.issuer.locality": string,

	/**
	* file.x509.issuer.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of issuing certificate authority.
	* Example: Example Inc
	*/
	"file.x509.issuer.organization": string,

	/**
	* file.x509.issuer.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of issuing certificate authority.
	* Example: www.example.com
	*/
	"file.x509.issuer.organizational_unit": string,

	/**
	* file.x509.issuer.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"file.x509.issuer.state_or_province": string,

	/**
	* file.x509.not_after
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is no longer considered valid.
	* Example: 2020-07-16 03:15:39+00:00
	*/
	"file.x509.not_after": Date,

	/**
	* file.x509.not_before
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is first considered valid.
	* Example: 2019-08-16 01:40:25+00:00
	*/
	"file.x509.not_before": Date,

	/**
	* file.x509.public_key_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Algorithm used to generate the public key.
	* Example: RSA
	*/
	"file.x509.public_key_algorithm": string,

	/**
	* file.x509.public_key_curve
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
	* Example: nistp521
	*/
	"file.x509.public_key_curve": string,

	/**
	* file.x509.public_key_exponent
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: long
	* Description: Exponent used to derive the public key. This is algorithm specific.
	* Example: 65537
	*/
	"file.x509.public_key_exponent": number,

	/**
	* file.x509.public_key_size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: long
	* Description: The size of the public key space in bits.
	* Example: 2048
	*/
	"file.x509.public_key_size": number,

	/**
	* file.x509.serial_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
	* Example: 55FBB9C7DEBF09809D12CCAA
	*/
	"file.x509.serial_number": string,

	/**
	* file.x509.signature_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
	* Example: SHA256-RSA
	*/
	"file.x509.signature_algorithm": string,

	/**
	* file.x509.subject.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common names (CN) of subject.
	* Example: shared.global.example.net
	*/
	"file.x509.subject.common_name": string,

	/**
	* file.x509.subject.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) code
	* Example: US
	*/
	"file.x509.subject.country": string,

	/**
	* file.x509.subject.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of the certificate subject entity.
	* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
	*/
	"file.x509.subject.distinguished_name": string,

	/**
	* file.x509.subject.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: San Francisco
	*/
	"file.x509.subject.locality": string,

	/**
	* file.x509.subject.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of subject.
	* Example: Example, Inc.
	*/
	"file.x509.subject.organization": string,

	/**
	* file.x509.subject.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of subject.
	* Example: <None>
	*/
	"file.x509.subject.organizational_unit": string,

	/**
	* file.x509.subject.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"file.x509.subject.state_or_province": string,

	/**
	* file.x509.version_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Version of x509 format.
	* Example: 3
	*/
	"file.x509.version_number": string,

	/**
	* geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"geo.city_name": string,

	/**
	* geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"geo.continent_name": string,

	/**
	* geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"geo.country_iso_code": string,

	/**
	* geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"geo.country_name": string,

	/**
	* geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"geo.location": GeoPoint,

	/**
	* geo.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
	Not typically used in automated geolocation.
	* Example: boston-dc
	*/
	"geo.name": string,

	/**
	* geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"geo.region_iso_code": string,

	/**
	* geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"geo.region_name": string,

	/**
	* group.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-group.html
	* Field Set: group
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the group is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"group.domain": string,

	/**
	* group.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-group.html
	* Field Set: group
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the group on the system/platform.
	* Example: <None>
	*/
	"group.id": string,

	/**
	* group.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-group.html
	* Field Set: group
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the group.
	* Example: <None>
	*/
	"group.name": string,

	/**
	* hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MD5 hash.
	* Example: <None>
	*/
	"hash.md5": string,

	/**
	* hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA1 hash.
	* Example: <None>
	*/
	"hash.sha1": string,

	/**
	* hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA256 hash.
	* Example: <None>
	*/
	"hash.sha256": string,

	/**
	* hash.sha512
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA512 hash.
	* Example: <None>
	*/
	"hash.sha512": string,

	/**
	* host.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Operating system architecture.
	* Example: x86_64
	*/
	"host.architecture": string,

	/**
	* host.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the domain of which the host is a member. For example, on Windows this could be the host's Active Directory domain or NetBIOS domain name. For Linux this could be the domain of the host's LDAP provider.
	* Example: CONTOSO
	*/
	"host.domain": string,

	/**
	* host.geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"host.geo.city_name": string,

	/**
	* host.geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"host.geo.continent_name": string,

	/**
	* host.geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"host.geo.country_iso_code": string,

	/**
	* host.geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"host.geo.country_name": string,

	/**
	* host.geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"host.geo.location": GeoPoint,

	/**
	* host.geo.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
	Not typically used in automated geolocation.
	* Example: boston-dc
	*/
	"host.geo.name": string,

	/**
	* host.geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"host.geo.region_iso_code": string,

	/**
	* host.geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"host.geo.region_name": string,

	/**
	* host.hostname
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Hostname of the host. It normally contains what the `hostname` command returns on the host machine.
	* Example: <None>
	*/
	"host.hostname": string,

	/**
	* host.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique host id. As hostname is not always unique, use values that are meaningful in your environment.
	Example: The current usage of `beat.name`.
	* Example: <None>
	*/
	"host.id": string,

	/**
	* host.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: ip
	* Description: Host ip addresses.
	* Example: <None>
	*/
	"host.ip": string[],

	/**
	* host.mac
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Host mac addresses.
	* Example: <None>
	*/
	"host.mac": string[],

	/**
	* host.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the host. It can contain what `hostname` returns on Unix systems, the fully qualified domain name, or a name specified by the user. The sender decides which value to use.
	* Example: <None>
	*/
	"host.name": string,

	/**
	* host.os.family
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: OS family (such as redhat, debian, freebsd, windows).
	* Example: debian
	*/
	"host.os.family": string,

	/**
	* host.os.full
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, including the version or code name.
	* Example: Mac OS Mojave
	*/
	"host.os.full": string,

	/**
	* host.os.kernel
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system kernel version as a raw string.
	* Example: 4.4.0-112-generic
	*/
	"host.os.kernel": string,

	/**
	* host.os.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, without the version.
	* Example: Mac OS X
	*/
	"host.os.name": string,

	/**
	* host.os.platform
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system platform (such centos, ubuntu, windows).
	* Example: darwin
	*/
	"host.os.platform": string,

	/**
	* host.os.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system version as a raw string.
	* Example: 10.14.1
	*/
	"host.os.version": string,

	/**
	* host.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Type of host. For Cloud providers this can be the machine type like `t2.medium`. If vm, this could be the container, for example, or other information meaningful in your environment.
	* Example: <None>
	*/
	"host.type": string,

	/**
	* host.uptime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: long
	* Description: Seconds the host has been up.
	* Example: 1325
	*/
	"host.uptime": number,

	/**
	* host.user.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the user is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"host.user.domain": string,

	/**
	* host.user.email
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User email address.
	* Example: <None>
	*/
	"host.user.email": string,

	/**
	* host.user.full_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User's full name, if available.
	* Example: Albert Einstein
	*/
	"host.user.full_name": string,

	/**
	* host.user.group.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the group is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"host.user.group.domain": string,

	/**
	* host.user.group.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the group on the system/platform.
	* Example: <None>
	*/
	"host.user.group.id": string,

	/**
	* host.user.group.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the group.
	* Example: <None>
	*/
	"host.user.group.name": string,

	/**
	* host.user.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique user hash to correlate information for a user in anonymized form. Useful if `user.id` or `user.name` contain confidential information and cannot be used.
	* Example: <None>
	*/
	"host.user.hash": string,

	/**
	* host.user.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the user.
	* Example: <None>
	*/
	"host.user.id": string,

	/**
	* host.user.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Short name or login of the user.
	* Example: albert
	*/
	"host.user.name": string,

	/**
	* host.user.roles
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of user roles at the time of the event.
	* Example: ["kibana_admin", "reporting_user"]
	*/
	"host.user.roles": string,

	/**
	* http.request.body.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: long
	* Description: Size in bytes of the request body.
	* Example: 887
	*/
	"http.request.body.bytes": number,

	/**
	* http.request.body.content
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The full HTTP request body.
	* Example: Hello world
	*/
	"http.request.body.content": string,

	/**
	* http.request.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: long
	* Description: Total size in bytes of the request (body and headers).
	* Example: 1437
	*/
	"http.request.bytes": number,

	/**
	* http.request.method
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: keyword
	* Description: HTTP request method. Prior to ECS 1.6.0 the following guidance was provided:
	"The field value must be normalized to lowercase for querying."
	As of ECS 1.6.0, the guidance is deprecated because the original case of the method may be useful in anomaly detection.  Original case will be mandated in ECS 2.0.0
	* Example: GET, POST, PUT, PoST
	*/
	"http.request.method": string,

	/**
	* http.request.mime_type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Mime type of the body of the request. This value must only be populated based on the content of the request body, not on the `Content-Type` header. Comparing the mime type of a request with the request's Content-Type header can be helpful in detecting threats or misconfigured clients.
	* Example: image/gif
	*/
	"http.request.mime_type": string,

	/**
	* http.request.referrer
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Referrer for this HTTP request.
	* Example: https://blog.example.com/
	*/
	"http.request.referrer": string,

	/**
	* http.response.body.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: long
	* Description: Size in bytes of the response body.
	* Example: 887
	*/
	"http.response.body.bytes": number,

	/**
	* http.response.body.content
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The full HTTP response body.
	* Example: Hello world
	*/
	"http.response.body.content": string,

	/**
	* http.response.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: long
	* Description: Total size in bytes of the response (body and headers).
	* Example: 1437
	*/
	"http.response.bytes": number,

	/**
	* http.response.mime_type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Mime type of the body of the response. This value must only be populated based on the content of the response body, not on the `Content-Type` header. Comparing the mime type of a response with the response's Content-Type header can be helpful in detecting misconfigured servers.
	* Example: image/gif
	*/
	"http.response.mime_type": string,

	/**
	* http.response.status_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: long
	* Description: HTTP response status code.
	* Example: 404
	*/
	"http.response.status_code": number,

	/**
	* http.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
	* Field Set: http
	* Level: extended
	* Elasticsearch type: keyword
	* Description: HTTP version.
	* Example: 1.1
	*/
	"http.version": string,

	/**
	* interface.alias
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-interface.html
	* Field Set: interface
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.
	* Example: outside
	*/
	"interface.alias": string,

	/**
	* interface.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-interface.html
	* Field Set: interface
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface ID as reported by an observer (typically SNMP interface ID).
	* Example: 10
	*/
	"interface.id": string,

	/**
	* interface.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-interface.html
	* Field Set: interface
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface name as reported by the system.
	* Example: eth0
	*/
	"interface.name": string,

	/**
	* labels
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: core
	* Elasticsearch type: object
	* Description: Custom key/value pairs. Can be used to add meta information to events. Should not contain nested objects. All values are stored as keyword.
	Example: `docker` and `k8s` labels.
	* Example: {"application": "foo-bar", "env": "production"}
	*/
	"labels": object,

	/**
	* log.file.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Full path to the log file this event came from, including the file name. It should include the drive letter, when appropriate. If the event wasn't read from a log file, do not populate this field.
	* Example: /var/log/fun-times.log
	*/
	"log.file.path": string,

	/**
	* log.level
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: core
	* Elasticsearch type: keyword
	* Description: Original log level of the log event. If the source of the event provides a log level or textual severity, this is the one that goes in `log.level`. If your source doesn't specify one, you may put your event transport's severity here (e.g. Syslog severity).
	Some examples are `warn`, `err`, `i`, `informational`.
	* Example: error
	*/
	"log.level": string,

	/**
	* log.logger
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: core
	* Elasticsearch type: keyword
	* Description: The name of the logger inside an application. This is usually the name of the class which initialized the logger, or can be a custom name.
	* Example: org.elasticsearch.bootstrap.Bootstrap
	*/
	"log.logger": string,

	/**
	* log.origin.file.line
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: integer
	* Description: The line number of the file containing the source code which originated the log event.
	* Example: 42
	*/
	"log.origin.file.line": number,

	/**
	* log.origin.file.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The name of the file containing the source code which originated the log event. Note that this field is not meant to capture the log file. The correct field to capture the log file is `log.file.path`.
	* Example: Bootstrap.java
	*/
	"log.origin.file.name": string,

	/**
	* log.origin.function
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The name of the function or method which originated the log event.
	* Example: init
	*/
	"log.origin.function": string,

	/**
	* log.original
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is the original log message and contains the full log message before splitting it up in multiple parts. In contrast to the `message` field which can contain an extracted part of the log message, this field contains the original, full log message. It can have already some modifications applied like encoding or new lines removed to clean up the log message.
	This field is not indexed and doc_values are disabled so it can't be queried but the value can be retrieved from `_source`.
	* Example: Sep 19 08:26:10 localhost My log
	*/
	"log.original": string,

	/**
	* log.syslog
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: object
	* Description: The Syslog metadata of the event, if the event was transmitted via Syslog. Please see RFCs 5424 or 3164.
	* Example: <None>
	*/
	"log.syslog": object,

	/**
	* log.syslog.facility.code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: long
	* Description: The Syslog numeric facility of the log event, if available. According to RFCs 5424 and 3164, this value should be an integer between 0 and 23.
	* Example: 23
	*/
	"log.syslog.facility.code": number,

	/**
	* log.syslog.facility.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The Syslog text-based facility of the log event, if available.
	* Example: local7
	*/
	"log.syslog.facility.name": string,

	/**
	* log.syslog.priority
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: long
	* Description: Syslog numeric priority of the event, if available. According to RFCs 5424 and 3164, the priority is 8 * facility + severity. This number is therefore expected to contain a value between 0 and 191.
	* Example: 135
	*/
	"log.syslog.priority": number,

	/**
	* log.syslog.severity.code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: long
	* Description: The Syslog numeric severity of the log event, if available. If the event source publishing via Syslog provides a different numeric severity value (e.g. firewall, IDS), your source's numeric severity should go to `event.severity`. If the event source does not specify a distinct severity, you can optionally copy the Syslog severity to `event.severity`.
	* Example: 3
	*/
	"log.syslog.severity.code": number,

	/**
	* log.syslog.severity.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The Syslog numeric severity of the log event, if available. If the event source publishing via Syslog provides a different severity value (e.g. firewall, IDS), your source's text severity should go to `log.level`. If the event source does not specify a distinct severity, you can optionally copy the Syslog severity to `log.level`.
	* Example: Error
	*/
	"log.syslog.severity.name": string,

	/**
	* message
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: core
	* Elasticsearch type: text
	* Description: For log events the message field contains the log message, optimized for viewing in a log viewer. For structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.
	If multiple messages exist, they can be combined into one message.
	* Example: Hello World
	*/
	"message": string,

	/**
	* network.application
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A name given to an application level protocol. This can be arbitrarily assigned for things like microservices, but also apply to things like skype, icq, facebook, twitter. This would be used in situations where the vendor or service can be decoded such as from the source/dest IP owners, ports, or wire format. The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
	* Example: aim
	*/
	"network.application": string,

	/**
	* network.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: long
	* Description: Total bytes transferred in both directions. If `source.bytes` and `destination.bytes` are known, `network.bytes` is their sum.
	* Example: 368
	*/
	"network.bytes": number,

	/**
	* network.community_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of source and destination IPs and ports, as well as the protocol used in a communication. This is a tool-agnostic standard to identify flows. Learn more at https://github.com/corelight/community-id-spec.
	* Example: 1:hO+sN4H+MG5MY/8hIrXPqc4ZQz0=
	*/
	"network.community_id": string,

	/**
	* network.direction
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: keyword
	* Description: Direction of the network traffic. Recommended values are:
	  * ingress
	  * egress
	  * inbound
	  * outbound
	  * internal
	  * external
	  * unknown
	
	When mapping events from a host-based monitoring context, populate this field from the host's point of view, using the values "ingress" or "egress".
	When mapping events from a network or perimeter-based monitoring context, populate this field from the point of view of the network perimeter, using the values "inbound", "outbound", "internal" or "external".
	Note that "internal" is not crossing perimeter boundaries, and is meant to describe communication between two hosts within the perimeter. Note also that "external" is meant to describe traffic between two hosts that are external to the perimeter. This could for example be useful for ISPs or VPN service providers.
	* Example: inbound
	*/
	"network.direction": string,

	/**
	* network.forwarded_ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: ip
	* Description: Host IP address when the source IP address is the proxy.
	* Example: 192.1.1.2
	*/
	"network.forwarded_ip": string,

	/**
	* network.iana_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: IANA Protocol Number (https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Standardized list of protocols. This aligns well with NetFlow and sFlow related logs which use the IANA Protocol Number.
	* Example: 6
	*/
	"network.iana_number": string,

	/**
	* network.inner
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: object
	* Description: Network.inner fields are added in addition to network.vlan fields to describe the innermost VLAN when q-in-q VLAN tagging is present. Allowed fields include vlan.id and vlan.name. Inner vlan fields are typically used when sending traffic with multiple 802.1q encapsulations to a network sensor (e.g. Zeek, Wireshark.)
	* Example: <None>
	*/
	"network.inner": object,

	/**
	* network.inner.vlan.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: VLAN ID as reported by the observer.
	* Example: 10
	*/
	"network.inner.vlan.id": string,

	/**
	* network.inner.vlan.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Optional VLAN name as reported by the observer.
	* Example: outside
	*/
	"network.inner.vlan.name": string,

	/**
	* network.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name given by operators to sections of their network.
	* Example: Guest Wifi
	*/
	"network.name": string,

	/**
	* network.packets
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: long
	* Description: Total packets transferred in both directions. If `source.packets` and `destination.packets` are known, `network.packets` is their sum.
	* Example: 24
	*/
	"network.packets": number,

	/**
	* network.protocol
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: keyword
	* Description: L7 Network protocol name. ex. http, lumberjack, transport protocol. The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
	* Example: http
	*/
	"network.protocol": string,

	/**
	* network.transport
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: keyword
	* Description: Same as network.iana_number, but instead using the Keyword name of the transport layer (udp, tcp, ipv6-icmp, etc.) The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
	* Example: tcp
	*/
	"network.transport": string,

	/**
	* network.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: keyword
	* Description: In the OSI Model this would be the Network Layer. ipv4, ipv6, ipsec, pim, etc The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
	* Example: ipv4
	*/
	"network.type": string,

	/**
	* network.vlan.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: VLAN ID as reported by the observer.
	* Example: 10
	*/
	"network.vlan.id": string,

	/**
	* network.vlan.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Optional VLAN name as reported by the observer.
	* Example: outside
	*/
	"network.vlan.name": string,

	/**
	* observer.egress
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: object
	* Description: Observer.egress holds information like interface number and name, vlan, and zone information to  classify egress traffic.  Single armed monitoring such as a network sensor on a span port should  only use observer.ingress to categorize traffic.
	* Example: <None>
	*/
	"observer.egress": object,

	/**
	* observer.egress.interface.alias
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.
	* Example: outside
	*/
	"observer.egress.interface.alias": string,

	/**
	* observer.egress.interface.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface ID as reported by an observer (typically SNMP interface ID).
	* Example: 10
	*/
	"observer.egress.interface.id": string,

	/**
	* observer.egress.interface.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface name as reported by the system.
	* Example: eth0
	*/
	"observer.egress.interface.name": string,

	/**
	* observer.egress.vlan.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: VLAN ID as reported by the observer.
	* Example: 10
	*/
	"observer.egress.vlan.id": string,

	/**
	* observer.egress.vlan.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Optional VLAN name as reported by the observer.
	* Example: outside
	*/
	"observer.egress.vlan.name": string,

	/**
	* observer.egress.zone
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Network zone of outbound traffic as reported by the observer to categorize the destination area of egress  traffic, e.g. Internal, External, DMZ, HR, Legal, etc.
	* Example: Public_Internet
	*/
	"observer.egress.zone": string,

	/**
	* observer.geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"observer.geo.city_name": string,

	/**
	* observer.geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"observer.geo.continent_name": string,

	/**
	* observer.geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"observer.geo.country_iso_code": string,

	/**
	* observer.geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"observer.geo.country_name": string,

	/**
	* observer.geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"observer.geo.location": GeoPoint,

	/**
	* observer.geo.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
	Not typically used in automated geolocation.
	* Example: boston-dc
	*/
	"observer.geo.name": string,

	/**
	* observer.geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"observer.geo.region_iso_code": string,

	/**
	* observer.geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"observer.geo.region_name": string,

	/**
	* observer.hostname
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Hostname of the observer.
	* Example: <None>
	*/
	"observer.hostname": string,

	/**
	* observer.ingress
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: object
	* Description: Observer.ingress holds information like interface number and name, vlan, and zone information to  classify ingress traffic.  Single armed monitoring such as a network sensor on a span port should  only use observer.ingress to categorize traffic.
	* Example: <None>
	*/
	"observer.ingress": object,

	/**
	* observer.ingress.interface.alias
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.
	* Example: outside
	*/
	"observer.ingress.interface.alias": string,

	/**
	* observer.ingress.interface.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface ID as reported by an observer (typically SNMP interface ID).
	* Example: 10
	*/
	"observer.ingress.interface.id": string,

	/**
	* observer.ingress.interface.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface name as reported by the system.
	* Example: eth0
	*/
	"observer.ingress.interface.name": string,

	/**
	* observer.ingress.vlan.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: VLAN ID as reported by the observer.
	* Example: 10
	*/
	"observer.ingress.vlan.id": string,

	/**
	* observer.ingress.vlan.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Optional VLAN name as reported by the observer.
	* Example: outside
	*/
	"observer.ingress.vlan.name": string,

	/**
	* observer.ingress.zone
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Network zone of incoming traffic as reported by the observer to categorize the source area of ingress  traffic. e.g. internal, External, DMZ, HR, Legal, etc.
	* Example: DMZ
	*/
	"observer.ingress.zone": string,

	/**
	* observer.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: ip
	* Description: IP addresses of the observer.
	* Example: <None>
	*/
	"observer.ip": string[],

	/**
	* observer.mac
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: MAC addresses of the observer
	* Example: <None>
	*/
	"observer.mac": string[],

	/**
	* observer.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Custom name of the observer. This is a name that can be given to an observer. This can be helpful for example if multiple firewalls of the same model are used in an organization.
	If no custom name is needed, the field can be left empty.
	* Example: 1_proxySG
	*/
	"observer.name": string,

	/**
	* observer.os.family
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: OS family (such as redhat, debian, freebsd, windows).
	* Example: debian
	*/
	"observer.os.family": string,

	/**
	* observer.os.full
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, including the version or code name.
	* Example: Mac OS Mojave
	*/
	"observer.os.full": string,

	/**
	* observer.os.kernel
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system kernel version as a raw string.
	* Example: 4.4.0-112-generic
	*/
	"observer.os.kernel": string,

	/**
	* observer.os.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, without the version.
	* Example: Mac OS X
	*/
	"observer.os.name": string,

	/**
	* observer.os.platform
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system platform (such centos, ubuntu, windows).
	* Example: darwin
	*/
	"observer.os.platform": string,

	/**
	* observer.os.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system version as a raw string.
	* Example: 10.14.1
	*/
	"observer.os.version": string,

	/**
	* observer.product
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The product name of the observer.
	* Example: s200
	*/
	"observer.product": string,

	/**
	* observer.serial_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Observer serial number.
	* Example: <None>
	*/
	"observer.serial_number": string,

	/**
	* observer.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: The type of the observer the data is coming from. There is no predefined list of observer types. Some examples are `forwarder`, `firewall`, `ids`, `ips`, `proxy`, `poller`, `sensor`, `APM server`.
	* Example: firewall
	*/
	"observer.type": string,

	/**
	* observer.vendor
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Vendor name of the observer.
	* Example: Symantec
	*/
	"observer.vendor": string,

	/**
	* observer.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Observer version.
	* Example: <None>
	*/
	"observer.version": string,

	/**
	* organization.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-organization.html
	* Field Set: organization
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the organization.
	* Example: <None>
	*/
	"organization.id": string,

	/**
	* organization.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-organization.html
	* Field Set: organization
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Organization name.
	* Example: <None>
	*/
	"organization.name": string,

	/**
	* os.family
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: OS family (such as redhat, debian, freebsd, windows).
	* Example: debian
	*/
	"os.family": string,

	/**
	* os.full
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, including the version or code name.
	* Example: Mac OS Mojave
	*/
	"os.full": string,

	/**
	* os.kernel
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system kernel version as a raw string.
	* Example: 4.4.0-112-generic
	*/
	"os.kernel": string,

	/**
	* os.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, without the version.
	* Example: Mac OS X
	*/
	"os.name": string,

	/**
	* os.platform
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system platform (such centos, ubuntu, windows).
	* Example: darwin
	*/
	"os.platform": string,

	/**
	* os.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system version as a raw string.
	* Example: 10.14.1
	*/
	"os.version": string,

	/**
	* package.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Package architecture.
	* Example: x86_64
	*/
	"package.architecture": string,

	/**
	* package.build_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the build version of the installed package. For example use the commit SHA of a non-released package.
	* Example: 36f4f7e89dd61b0988b12ee000b98966867710cd
	*/
	"package.build_version": string,

	/**
	* package.checksum
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Checksum of the installed package for verification.
	* Example: 68b329da9893e34099c7d8ad5cb9c940
	*/
	"package.checksum": string,

	/**
	* package.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Description of the package.
	* Example: Open source programming language to build simple/reliable/efficient software.
	*/
	"package.description": string,

	/**
	* package.install_scope
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Indicating how the package was installed, e.g. user-local, global.
	* Example: global
	*/
	"package.install_scope": string,

	/**
	* package.installed
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: date
	* Description: Time when package was installed.
	* Example: <None>
	*/
	"package.installed": Date,

	/**
	* package.license
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: License under which the package was released. Use a short name, e.g. the license identifier from SPDX License List where possible (https://spdx.org/licenses/).
	* Example: Apache License 2.0
	*/
	"package.license": string,

	/**
	* package.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Package name
	* Example: go
	*/
	"package.name": string,

	/**
	* package.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Path where the package is installed.
	* Example: /usr/local/Cellar/go/1.12.9/
	*/
	"package.path": string,

	/**
	* package.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Home page or reference URL of the software in this package, if available.
	* Example: https://golang.org
	*/
	"package.reference": string,

	/**
	* package.size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: long
	* Description: Package size in bytes.
	* Example: 62231
	*/
	"package.size": number,

	/**
	* package.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Type of package. This should contain the package file type, rather than the package manager name. Examples: rpm, dpkg, brew, npm, gem, nupkg, jar.
	* Example: rpm
	*/
	"package.type": string,

	/**
	* package.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Package version
	* Example: 1.12.9
	*/
	"package.version": string,

	/**
	* pe.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: CPU architecture target for the file.
	* Example: x64
	*/
	"pe.architecture": string,

	/**
	* pe.company
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal company name of the file, provided at compile-time.
	* Example: Microsoft Corporation
	*/
	"pe.company": string,

	/**
	* pe.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal description of the file, provided at compile-time.
	* Example: Paint
	*/
	"pe.description": string,

	/**
	* pe.file_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal version of the file, provided at compile-time.
	* Example: 6.3.9600.17415
	*/
	"pe.file_version": string,

	/**
	* pe.imphash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
	* Example: 0c6803c4e922103c4dca5963aad36ddf
	*/
	"pe.imphash": string,

	/**
	* pe.original_file_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal name of the file, provided at compile-time.
	* Example: MSPAINT.EXE
	*/
	"pe.original_file_name": string,

	/**
	* pe.product
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal product name of the file, provided at compile-time.
	* Example: Microsoft® Windows® Operating System
	*/
	"pe.product": string,

	/**
	* process.args
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of process arguments, starting with the absolute path to the executable. May be filtered to protect sensitive information.
	* Example: ["/usr/bin/ssh", "-l", "user", "10.0.0.16"]
	*/
	"process.args": string[],

	/**
	* process.args_count
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Length of the process.args array. This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.
	* Example: 4
	*/
	"process.args_count": number,

	/**
	* process.code_signature.exists
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: core
	* Elasticsearch type: boolean
	* Description: Boolean to capture if a signature is present.
	* Example: true
	*/
	"process.code_signature.exists": boolean,

	/**
	* process.code_signature.status
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
	* Example: ERROR_UNTRUSTED_ROOT
	*/
	"process.code_signature.status": string,

	/**
	* process.code_signature.subject_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: core
	* Elasticsearch type: keyword
	* Description: Subject name of the code signer
	* Example: Microsoft Corporation
	*/
	"process.code_signature.subject_name": string,

	/**
	* process.code_signature.trusted
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
	* Example: true
	*/
	"process.code_signature.trusted": boolean,

	/**
	* process.code_signature.valid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
	* Example: true
	*/
	"process.code_signature.valid": boolean,

	/**
	* process.command_line
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Full command line that started the process, including the absolute path to the executable, and all arguments. Some arguments may be filtered to protect sensitive information.
	* Example: /usr/bin/ssh -l user 10.0.0.16
	*/
	"process.command_line": string,

	/**
	* process.entity_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the process. The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
	Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.
	* Example: c2c455d9f99375d
	*/
	"process.entity_id": string,

	/**
	* process.executable
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Absolute path to the process executable.
	* Example: /usr/bin/ssh
	*/
	"process.executable": string,

	/**
	* process.exit_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: The exit code of the process, if this is a termination event. The field should be absent if there is no exit code for the event (e.g. process start).
	* Example: 137
	*/
	"process.exit_code": number,

	/**
	* process.hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MD5 hash.
	* Example: <None>
	*/
	"process.hash.md5": string,

	/**
	* process.hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA1 hash.
	* Example: <None>
	*/
	"process.hash.sha1": string,

	/**
	* process.hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA256 hash.
	* Example: <None>
	*/
	"process.hash.sha256": string,

	/**
	* process.hash.sha512
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA512 hash.
	* Example: <None>
	*/
	"process.hash.sha512": string,

	/**
	* process.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Process name. Sometimes called program name or similar.
	* Example: ssh
	*/
	"process.name": string,

	/**
	* process.parent.args
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of process arguments, starting with the absolute path to the executable. May be filtered to protect sensitive information.
	* Example: ["/usr/bin/ssh", "-l", "user", "10.0.0.16"]
	*/
	"process.parent.args": string,

	/**
	* process.parent.args_count
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Length of the process.args array. This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.
	* Example: 4
	*/
	"process.parent.args_count": number,

	/**
	* process.parent.code_signature.exists
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: core
	* Elasticsearch type: boolean
	* Description: Boolean to capture if a signature is present.
	* Example: true
	*/
	"process.parent.code_signature.exists": boolean,

	/**
	* process.parent.code_signature.status
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
	* Example: ERROR_UNTRUSTED_ROOT
	*/
	"process.parent.code_signature.status": string,

	/**
	* process.parent.code_signature.subject_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: core
	* Elasticsearch type: keyword
	* Description: Subject name of the code signer
	* Example: Microsoft Corporation
	*/
	"process.parent.code_signature.subject_name": string,

	/**
	* process.parent.code_signature.trusted
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
	* Example: true
	*/
	"process.parent.code_signature.trusted": boolean,

	/**
	* process.parent.code_signature.valid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
	* Example: true
	*/
	"process.parent.code_signature.valid": boolean,

	/**
	* process.parent.command_line
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Full command line that started the process, including the absolute path to the executable, and all arguments. Some arguments may be filtered to protect sensitive information.
	* Example: /usr/bin/ssh -l user 10.0.0.16
	*/
	"process.parent.command_line": string,

	/**
	* process.parent.entity_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the process. The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
	Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.
	* Example: c2c455d9f99375d
	*/
	"process.parent.entity_id": string,

	/**
	* process.parent.executable
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Absolute path to the process executable.
	* Example: /usr/bin/ssh
	*/
	"process.parent.executable": string,

	/**
	* process.parent.exit_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: The exit code of the process, if this is a termination event. The field should be absent if there is no exit code for the event (e.g. process start).
	* Example: 137
	*/
	"process.parent.exit_code": number,

	/**
	* process.parent.hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MD5 hash.
	* Example: <None>
	*/
	"process.parent.hash.md5": string,

	/**
	* process.parent.hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA1 hash.
	* Example: <None>
	*/
	"process.parent.hash.sha1": string,

	/**
	* process.parent.hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA256 hash.
	* Example: <None>
	*/
	"process.parent.hash.sha256": string,

	/**
	* process.parent.hash.sha512
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA512 hash.
	* Example: <None>
	*/
	"process.parent.hash.sha512": string,

	/**
	* process.parent.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Process name. Sometimes called program name or similar.
	* Example: ssh
	*/
	"process.parent.name": string,

	/**
	* process.parent.pe.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: CPU architecture target for the file.
	* Example: x64
	*/
	"process.parent.pe.architecture": string,

	/**
	* process.parent.pe.company
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal company name of the file, provided at compile-time.
	* Example: Microsoft Corporation
	*/
	"process.parent.pe.company": string,

	/**
	* process.parent.pe.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal description of the file, provided at compile-time.
	* Example: Paint
	*/
	"process.parent.pe.description": string,

	/**
	* process.parent.pe.file_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal version of the file, provided at compile-time.
	* Example: 6.3.9600.17415
	*/
	"process.parent.pe.file_version": string,

	/**
	* process.parent.pe.imphash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
	* Example: 0c6803c4e922103c4dca5963aad36ddf
	*/
	"process.parent.pe.imphash": string,

	/**
	* process.parent.pe.original_file_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal name of the file, provided at compile-time.
	* Example: MSPAINT.EXE
	*/
	"process.parent.pe.original_file_name": string,

	/**
	* process.parent.pe.product
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal product name of the file, provided at compile-time.
	* Example: Microsoft® Windows® Operating System
	*/
	"process.parent.pe.product": string,

	/**
	* process.parent.pgid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Identifier of the group of processes the process belongs to.
	* Example: <None>
	*/
	"process.parent.pgid": number,

	/**
	* process.parent.pid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: core
	* Elasticsearch type: long
	* Description: Process id.
	* Example: 4242
	*/
	"process.parent.pid": number,

	/**
	* process.parent.ppid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Parent process' pid.
	* Example: 4241
	*/
	"process.parent.ppid": number,

	/**
	* process.parent.start
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: date
	* Description: The time the process started.
	* Example: 2016-05-23T08:05:34.853Z
	*/
	"process.parent.start": Date,

	/**
	* process.parent.thread.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Thread ID.
	* Example: 4242
	*/
	"process.parent.thread.id": number,

	/**
	* process.parent.thread.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Thread name.
	* Example: thread-0
	*/
	"process.parent.thread.name": string,

	/**
	* process.parent.title
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Process title. The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.
	* Example: <None>
	*/
	"process.parent.title": string,

	/**
	* process.parent.uptime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Seconds the process has been up.
	* Example: 1325
	*/
	"process.parent.uptime": number,

	/**
	* process.parent.working_directory
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The working directory of the process.
	* Example: /home/alice
	*/
	"process.parent.working_directory": string,

	/**
	* process.pe.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: CPU architecture target for the file.
	* Example: x64
	*/
	"process.pe.architecture": string,

	/**
	* process.pe.company
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal company name of the file, provided at compile-time.
	* Example: Microsoft Corporation
	*/
	"process.pe.company": string,

	/**
	* process.pe.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal description of the file, provided at compile-time.
	* Example: Paint
	*/
	"process.pe.description": string,

	/**
	* process.pe.file_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal version of the file, provided at compile-time.
	* Example: 6.3.9600.17415
	*/
	"process.pe.file_version": string,

	/**
	* process.pe.imphash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
	* Example: 0c6803c4e922103c4dca5963aad36ddf
	*/
	"process.pe.imphash": string,

	/**
	* process.pe.original_file_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal name of the file, provided at compile-time.
	* Example: MSPAINT.EXE
	*/
	"process.pe.original_file_name": string,

	/**
	* process.pe.product
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal product name of the file, provided at compile-time.
	* Example: Microsoft® Windows® Operating System
	*/
	"process.pe.product": string,

	/**
	* process.pgid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Identifier of the group of processes the process belongs to.
	* Example: <None>
	*/
	"process.pgid": number,

	/**
	* process.pid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: core
	* Elasticsearch type: long
	* Description: Process id.
	* Example: 4242
	*/
	"process.pid": number,

	/**
	* process.ppid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Parent process' pid.
	* Example: 4241
	*/
	"process.ppid": number,

	/**
	* process.start
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: date
	* Description: The time the process started.
	* Example: 2016-05-23T08:05:34.853Z
	*/
	"process.start": Date,

	/**
	* process.thread.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Thread ID.
	* Example: 4242
	*/
	"process.thread.id": number,

	/**
	* process.thread.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Thread name.
	* Example: thread-0
	*/
	"process.thread.name": string,

	/**
	* process.title
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Process title. The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.
	* Example: <None>
	*/
	"process.title": string,

	/**
	* process.uptime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Seconds the process has been up.
	* Example: 1325
	*/
	"process.uptime": number,

	/**
	* process.working_directory
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The working directory of the process.
	* Example: /home/alice
	*/
	"process.working_directory": string,

	/**
	* registry.data.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Original bytes written with base64 encoding. For Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values.
	* Example: ZQBuAC0AVQBTAAAAZQBuAAAAAAA=
	*/
	"registry.data.bytes": string,

	/**
	* registry.data.strings
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Content when writing string types. Populated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `"1"`).
	* Example: ["C:\rta\red_ttp\bin\myapp.exe"]
	*/
	"registry.data.strings": string[],

	/**
	* registry.data.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Standard registry type for encoding contents
	* Example: REG_SZ
	*/
	"registry.data.type": string,

	/**
	* registry.hive
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Abbreviated name for the hive.
	* Example: HKLM
	*/
	"registry.hive": string,

	/**
	* registry.key
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Hive-relative path of keys.
	* Example: SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe
	*/
	"registry.key": string,

	/**
	* registry.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Full path, including hive, key and value
	* Example: HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe\Debugger
	*/
	"registry.path": string,

	/**
	* registry.value
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the value written.
	* Example: Debugger
	*/
	"registry.value": string,

	/**
	* related.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-related.html
	* Field Set: related
	* Level: extended
	* Elasticsearch type: keyword
	* Description: All the hashes seen on your event. Populating this field, then using it to search for hashes can help in situations where you're unsure what the hash algorithm is (and therefore which key name to search).
	* Example: <None>
	*/
	"related.hash": string[],

	/**
	* related.hosts
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-related.html
	* Field Set: related
	* Level: extended
	* Elasticsearch type: keyword
	* Description: All hostnames or other host identifiers seen on your event. Example identifiers include FQDNs, domain names, workstation names, or aliases.
	* Example: <None>
	*/
	"related.hosts": string[],

	/**
	* related.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-related.html
	* Field Set: related
	* Level: extended
	* Elasticsearch type: ip
	* Description: All of the IPs seen on your event.
	* Example: <None>
	*/
	"related.ip": string[],

	/**
	* related.user
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-related.html
	* Field Set: related
	* Level: extended
	* Elasticsearch type: keyword
	* Description: All the user names seen on your event.
	* Example: <None>
	*/
	"related.user": string[],

	/**
	* rule.author
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name, organization, or pseudonym of the author or authors who created the rule used to generate this event.
	* Example: ["Star-Lord"]
	*/
	"rule.author": string[],

	/**
	* rule.category
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A categorization value keyword used by the entity using the rule for detection of this event.
	* Example: Attempted Information Leak
	*/
	"rule.category": string,

	/**
	* rule.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The description of the rule generating the event.
	* Example: Block requests to public DNS over HTTPS / TLS protocols
	*/
	"rule.description": string,

	/**
	* rule.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A rule ID that is unique within the scope of an agent, observer, or other entity using the rule for detection of this event.
	* Example: 101
	*/
	"rule.id": string,

	/**
	* rule.license
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the license under which the rule used to generate this event is made available.
	* Example: Apache 2.0
	*/
	"rule.license": string,

	/**
	* rule.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The name of the rule or signature generating the event.
	* Example: BLOCK_DNS_over_TLS
	*/
	"rule.name": string,

	/**
	* rule.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Reference URL to additional information about the rule used to generate this event. The URL can point to the vendor's documentation about the rule. If that's not available, it can also be a link to a more general page describing this type of alert.
	* Example: https://en.wikipedia.org/wiki/DNS_over_TLS
	*/
	"rule.reference": string,

	/**
	* rule.ruleset
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the ruleset, policy, group, or parent category in which the rule used to generate this event is a member.
	* Example: Standard_Protocol_Filters
	*/
	"rule.ruleset": string,

	/**
	* rule.uuid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A rule ID that is unique within the scope of a set or group of agents, observers, or other entities using the rule for detection of this event.
	* Example: 1100110011
	*/
	"rule.uuid": string,

	/**
	* rule.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The version / revision of the rule being used for analysis.
	* Example: 1.1
	*/
	"rule.version": string,

	/**
	* server.address
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Some event server addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field. Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
	* Example: <None>
	*/
	"server.address": string,

	/**
	* server.as.number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: long
	* Description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
	* Example: 15169
	*/
	"server.as.number": number,

	/**
	* server.as.organization.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Organization name.
	* Example: Google LLC
	*/
	"server.as.organization.name": string,

	/**
	* server.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: long
	* Description: Bytes sent from the server to the client.
	* Example: 184
	*/
	"server.bytes": number,

	/**
	* server.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Server domain.
	* Example: <None>
	*/
	"server.domain": string,

	/**
	* server.geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"server.geo.city_name": string,

	/**
	* server.geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"server.geo.continent_name": string,

	/**
	* server.geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"server.geo.country_iso_code": string,

	/**
	* server.geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"server.geo.country_name": string,

	/**
	* server.geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"server.geo.location": GeoPoint,

	/**
	* server.geo.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
	Not typically used in automated geolocation.
	* Example: boston-dc
	*/
	"server.geo.name": string,

	/**
	* server.geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"server.geo.region_iso_code": string,

	/**
	* server.geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"server.geo.region_name": string,

	/**
	* server.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: ip
	* Description: IP address of the server (IPv4 or IPv6).
	* Example: <None>
	*/
	"server.ip": string,

	/**
	* server.mac
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: MAC address of the server.
	* Example: <None>
	*/
	"server.mac": string,

	/**
	* server.nat.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: ip
	* Description: Translated ip of destination based NAT sessions (e.g. internet to private DMZ) Typically used with load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"server.nat.ip": string,

	/**
	* server.nat.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: long
	* Description: Translated port of destination based NAT sessions (e.g. internet to private DMZ) Typically used with load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"server.nat.port": number,

	/**
	* server.packets
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: long
	* Description: Packets sent from the server to the client.
	* Example: 12
	*/
	"server.packets": number,

	/**
	* server.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: long
	* Description: Port of the server.
	* Example: <None>
	*/
	"server.port": number,

	/**
	* server.registered_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The highest registered server domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
	This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
	* Example: example.com
	*/
	"server.registered_domain": string,

	/**
	* server.subdomain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain. For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
	* Example: east
	*/
	"server.subdomain": string,

	/**
	* server.top_level_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
	* Example: co.uk
	*/
	"server.top_level_domain": string,

	/**
	* server.user.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the user is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"server.user.domain": string,

	/**
	* server.user.email
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User email address.
	* Example: <None>
	*/
	"server.user.email": string,

	/**
	* server.user.full_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User's full name, if available.
	* Example: Albert Einstein
	*/
	"server.user.full_name": string,

	/**
	* server.user.group.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the group is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"server.user.group.domain": string,

	/**
	* server.user.group.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the group on the system/platform.
	* Example: <None>
	*/
	"server.user.group.id": string,

	/**
	* server.user.group.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the group.
	* Example: <None>
	*/
	"server.user.group.name": string,

	/**
	* server.user.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique user hash to correlate information for a user in anonymized form. Useful if `user.id` or `user.name` contain confidential information and cannot be used.
	* Example: <None>
	*/
	"server.user.hash": string,

	/**
	* server.user.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the user.
	* Example: <None>
	*/
	"server.user.id": string,

	/**
	* server.user.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: core
	* Elasticsearch type: keyword
	* Description: Short name or login of the user.
	* Example: albert
	*/
	"server.user.name": string,

	/**
	* server.user.roles
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-server.html
	* Field Set: server
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of user roles at the time of the event.
	* Example: ["kibana_admin", "reporting_user"]
	*/
	"server.user.roles": string,

	/**
	* service.ephemeral_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Ephemeral identifier of this service (if one exists). This id normally changes across restarts, but `service.id` does not.
	* Example: 8a4f500f
	*/
	"service.ephemeral_id": string,

	/**
	* service.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the running service. If the service is comprised of many nodes, the `service.id` should be the same for all nodes. This id should uniquely identify the service. This makes it possible to correlate logs and metrics for one specific service, no matter which particular node emitted the event.
	Note that if you need to see the events from one specific host of the service, you should filter on that `host.name` or `host.id` instead.
	* Example: d37e5ebfe0ae6c4972dbe9f0174a1637bb8247f6
	*/
	"service.id": string,

	/**
	* service.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the service data is collected from. The name of the service is normally user given. This allows for distributed services that run on multiple hosts to correlate the related instances based on the name.
	In the case of Elasticsearch the `service.name` could contain the cluster name. For Beats the `service.name` is by default a copy of the `service.type` field if no name is specified.
	* Example: elasticsearch-metrics
	*/
	"service.name": string,

	/**
	* service.node.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of a service node. This allows for two nodes of the same service running on the same host to be differentiated. Therefore, `service.node.name` should typically be unique across nodes of a given service.
	In the case of Elasticsearch, the `service.node.name` could contain the unique node name within the Elasticsearch cluster. In cases where the service doesn't have the concept of a node name, the host name or container name can be used to distinguish running instances that make up this service. If those do not provide uniqueness (e.g. multiple instances of the service running on the same host) - the node name can be manually set.
	* Example: instance-0000000016
	*/
	"service.node.name": string,

	/**
	* service.state
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: core
	* Elasticsearch type: keyword
	* Description: Current state of the service.
	* Example: <None>
	*/
	"service.state": string,

	/**
	* service.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: core
	* Elasticsearch type: keyword
	* Description: The type of the service data is collected from. The type can be used to group and correlate logs and metrics from one service type.
	Example: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`.
	* Example: elasticsearch
	*/
	"service.type": string,

	/**
	* service.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: core
	* Elasticsearch type: keyword
	* Description: Version of the service the data was collected from. This allows to look at a data set only for a specific version of a service.
	* Example: 3.2.4
	*/
	"service.version": string,

	/**
	* source.address
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Some event source addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field. Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
	* Example: <None>
	*/
	"source.address": string,

	/**
	* source.as.number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: long
	* Description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
	* Example: 15169
	*/
	"source.as.number": number,

	/**
	* source.as.organization.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Organization name.
	* Example: Google LLC
	*/
	"source.as.organization.name": string,

	/**
	* source.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: long
	* Description: Bytes sent from the source to the destination.
	* Example: 184
	*/
	"source.bytes": number,

	/**
	* source.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Source domain.
	* Example: <None>
	*/
	"source.domain": string,

	/**
	* source.geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"source.geo.city_name": string,

	/**
	* source.geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"source.geo.continent_name": string,

	/**
	* source.geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"source.geo.country_iso_code": string,

	/**
	* source.geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"source.geo.country_name": string,

	/**
	* source.geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"source.geo.location": GeoPoint,

	/**
	* source.geo.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
	Not typically used in automated geolocation.
	* Example: boston-dc
	*/
	"source.geo.name": string,

	/**
	* source.geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"source.geo.region_iso_code": string,

	/**
	* source.geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"source.geo.region_name": string,

	/**
	* source.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: ip
	* Description: IP address of the source (IPv4 or IPv6).
	* Example: <None>
	*/
	"source.ip": string,

	/**
	* source.mac
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: MAC address of the source.
	* Example: <None>
	*/
	"source.mac": string,

	/**
	* source.nat.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: ip
	* Description: Translated ip of source based NAT sessions (e.g. internal client to internet) Typically connections traversing load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"source.nat.ip": string,

	/**
	* source.nat.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: long
	* Description: Translated port of source based NAT sessions. (e.g. internal client to internet) Typically used with load balancers, firewalls, or routers.
	* Example: <None>
	*/
	"source.nat.port": number,

	/**
	* source.packets
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: long
	* Description: Packets sent from the source to the destination.
	* Example: 12
	*/
	"source.packets": number,

	/**
	* source.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: long
	* Description: Port of the source.
	* Example: <None>
	*/
	"source.port": number,

	/**
	* source.registered_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The highest registered source domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
	This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
	* Example: example.com
	*/
	"source.registered_domain": string,

	/**
	* source.subdomain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain. For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
	* Example: east
	*/
	"source.subdomain": string,

	/**
	* source.top_level_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
	* Example: co.uk
	*/
	"source.top_level_domain": string,

	/**
	* source.user.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the user is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"source.user.domain": string,

	/**
	* source.user.email
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User email address.
	* Example: <None>
	*/
	"source.user.email": string,

	/**
	* source.user.full_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User's full name, if available.
	* Example: Albert Einstein
	*/
	"source.user.full_name": string,

	/**
	* source.user.group.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the group is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"source.user.group.domain": string,

	/**
	* source.user.group.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the group on the system/platform.
	* Example: <None>
	*/
	"source.user.group.id": string,

	/**
	* source.user.group.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the group.
	* Example: <None>
	*/
	"source.user.group.name": string,

	/**
	* source.user.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique user hash to correlate information for a user in anonymized form. Useful if `user.id` or `user.name` contain confidential information and cannot be used.
	* Example: <None>
	*/
	"source.user.hash": string,

	/**
	* source.user.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the user.
	* Example: <None>
	*/
	"source.user.id": string,

	/**
	* source.user.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Short name or login of the user.
	* Example: albert
	*/
	"source.user.name": string,

	/**
	* source.user.roles
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of user roles at the time of the event.
	* Example: ["kibana_admin", "reporting_user"]
	*/
	"source.user.roles": string,

	/**
	* span.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier of the span within the scope of its trace. A span represents an operation within a transaction, such as a request to another service, or a database query.
	* Example: 3ff9a8981b7ccd5a
	*/
	"span.id": string,

	/**
	* tags
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: core
	* Elasticsearch type: keyword
	* Description: List of keywords used to tag each event.
	* Example: ["production", "env2"]
	*/
	"tags": string[],

	/**
	* threat.framework
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the threat framework used to further categorize and classify the tactic and technique of the reported threat. Framework classification can be provided by detecting systems, evaluated at ingest time, or retrospectively tagged to events.
	* Example: MITRE ATT&CK
	*/
	"threat.framework": string,

	/**
	* threat.tactic.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The id of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )
	* Example: TA0002
	*/
	"threat.tactic.id": string[],

	/**
	* threat.tactic.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the type of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/)
	* Example: Execution
	*/
	"threat.tactic.name": string[],

	/**
	* threat.tactic.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The reference url of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )
	* Example: https://attack.mitre.org/tactics/TA0002/
	*/
	"threat.tactic.reference": string[],

	/**
	* threat.technique.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The id of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)
	* Example: T1059
	*/
	"threat.technique.id": string[],

	/**
	* threat.technique.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The name of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)
	* Example: Command and Scripting Interpreter
	*/
	"threat.technique.name": string[],

	/**
	* threat.technique.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The reference url of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)
	* Example: https://attack.mitre.org/techniques/T1059/
	*/
	"threat.technique.reference": string[],

	/**
	* threat.technique.subtechnique.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The full id of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)
	* Example: T1059.001
	*/
	"threat.technique.subtechnique.id": string[],

	/**
	* threat.technique.subtechnique.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The name of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)
	* Example: PowerShell
	*/
	"threat.technique.subtechnique.name": string[],

	/**
	* threat.technique.subtechnique.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The reference url of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)
	* Example: https://attack.mitre.org/techniques/T1059/001/
	*/
	"threat.technique.subtechnique.reference": string[],

	/**
	* tls.cipher
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: String indicating the cipher used during the current connection.
	* Example: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
	*/
	"tls.cipher": string,

	/**
	* tls.client.certificate
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: PEM-encoded stand-alone certificate offered by the client. This is usually mutually-exclusive of `client.certificate_chain` since this value also exists in that list.
	* Example: MII...
	*/
	"tls.client.certificate": string,

	/**
	* tls.client.certificate_chain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of PEM-encoded certificates that make up the certificate chain offered by the client. This is usually mutually-exclusive of `client.certificate` since that value should be the first certificate in the chain.
	* Example: ["MII...", "MII..."]
	*/
	"tls.client.certificate_chain": string[],

	/**
	* tls.client.hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
	* Example: 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC
	*/
	"tls.client.hash.md5": string,

	/**
	* tls.client.hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
	* Example: 9E393D93138888D288266C2D915214D1D1CCEB2A
	*/
	"tls.client.hash.sha1": string,

	/**
	* tls.client.hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
	* Example: 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0
	*/
	"tls.client.hash.sha256": string,

	/**
	* tls.client.issuer
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name of subject of the issuer of the x.509 certificate presented by the client.
	* Example: CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com
	*/
	"tls.client.issuer": string,

	/**
	* tls.client.ja3
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash that identifies clients based on how they perform an SSL/TLS handshake.
	* Example: d4e5b18d6b55c71272893221c96ba240
	*/
	"tls.client.ja3": string,

	/**
	* tls.client.not_after
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Date/Time indicating when client certificate is no longer considered valid.
	* Example: 2021-01-01T00:00:00.000Z
	*/
	"tls.client.not_after": Date,

	/**
	* tls.client.not_before
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Date/Time indicating when client certificate is first considered valid.
	* Example: 1970-01-01T00:00:00.000Z
	*/
	"tls.client.not_before": Date,

	/**
	* tls.client.server_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Also called an SNI, this tells the server which hostname to which the client is attempting to connect to. When this value is available, it should get copied to `destination.domain`.
	* Example: www.elastic.co
	*/
	"tls.client.server_name": string,

	/**
	* tls.client.subject
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name of subject of the x.509 certificate presented by the client.
	* Example: CN=myclient, OU=Documentation Team, DC=example, DC=com
	*/
	"tls.client.subject": string,

	/**
	* tls.client.supported_ciphers
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of ciphers offered by the client during the client hello.
	* Example: ["TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", "..."]
	*/
	"tls.client.supported_ciphers": string[],

	/**
	* tls.client.x509.alternative_names
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
	* Example: *.elastic.co
	*/
	"tls.client.x509.alternative_names": string,

	/**
	* tls.client.x509.issuer.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common name (CN) of issuing certificate authority.
	* Example: Example SHA2 High Assurance Server CA
	*/
	"tls.client.x509.issuer.common_name": string,

	/**
	* tls.client.x509.issuer.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) codes
	* Example: US
	*/
	"tls.client.x509.issuer.country": string,

	/**
	* tls.client.x509.issuer.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of issuing certificate authority.
	* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
	*/
	"tls.client.x509.issuer.distinguished_name": string,

	/**
	* tls.client.x509.issuer.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: Mountain View
	*/
	"tls.client.x509.issuer.locality": string,

	/**
	* tls.client.x509.issuer.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of issuing certificate authority.
	* Example: Example Inc
	*/
	"tls.client.x509.issuer.organization": string,

	/**
	* tls.client.x509.issuer.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of issuing certificate authority.
	* Example: www.example.com
	*/
	"tls.client.x509.issuer.organizational_unit": string,

	/**
	* tls.client.x509.issuer.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"tls.client.x509.issuer.state_or_province": string,

	/**
	* tls.client.x509.not_after
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is no longer considered valid.
	* Example: 2020-07-16 03:15:39+00:00
	*/
	"tls.client.x509.not_after": Date,

	/**
	* tls.client.x509.not_before
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is first considered valid.
	* Example: 2019-08-16 01:40:25+00:00
	*/
	"tls.client.x509.not_before": Date,

	/**
	* tls.client.x509.public_key_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Algorithm used to generate the public key.
	* Example: RSA
	*/
	"tls.client.x509.public_key_algorithm": string,

	/**
	* tls.client.x509.public_key_curve
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
	* Example: nistp521
	*/
	"tls.client.x509.public_key_curve": string,

	/**
	* tls.client.x509.public_key_exponent
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: long
	* Description: Exponent used to derive the public key. This is algorithm specific.
	* Example: 65537
	*/
	"tls.client.x509.public_key_exponent": number,

	/**
	* tls.client.x509.public_key_size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: long
	* Description: The size of the public key space in bits.
	* Example: 2048
	*/
	"tls.client.x509.public_key_size": number,

	/**
	* tls.client.x509.serial_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
	* Example: 55FBB9C7DEBF09809D12CCAA
	*/
	"tls.client.x509.serial_number": string,

	/**
	* tls.client.x509.signature_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
	* Example: SHA256-RSA
	*/
	"tls.client.x509.signature_algorithm": string,

	/**
	* tls.client.x509.subject.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common names (CN) of subject.
	* Example: shared.global.example.net
	*/
	"tls.client.x509.subject.common_name": string,

	/**
	* tls.client.x509.subject.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) code
	* Example: US
	*/
	"tls.client.x509.subject.country": string,

	/**
	* tls.client.x509.subject.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of the certificate subject entity.
	* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
	*/
	"tls.client.x509.subject.distinguished_name": string,

	/**
	* tls.client.x509.subject.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: San Francisco
	*/
	"tls.client.x509.subject.locality": string,

	/**
	* tls.client.x509.subject.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of subject.
	* Example: Example, Inc.
	*/
	"tls.client.x509.subject.organization": string,

	/**
	* tls.client.x509.subject.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of subject.
	* Example: <None>
	*/
	"tls.client.x509.subject.organizational_unit": string,

	/**
	* tls.client.x509.subject.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"tls.client.x509.subject.state_or_province": string,

	/**
	* tls.client.x509.version_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Version of x509 format.
	* Example: 3
	*/
	"tls.client.x509.version_number": string,

	/**
	* tls.curve
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: String indicating the curve used for the given cipher, when applicable.
	* Example: secp256r1
	*/
	"tls.curve": string,

	/**
	* tls.established
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean flag indicating if the TLS negotiation was successful and transitioned to an encrypted tunnel.
	* Example: <None>
	*/
	"tls.established": boolean,

	/**
	* tls.next_protocol
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: String indicating the protocol being tunneled. Per the values in the IANA registry (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids), this string should be lower case.
	* Example: http/1.1
	*/
	"tls.next_protocol": string,

	/**
	* tls.resumed
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean flag indicating if this TLS connection was resumed from an existing TLS negotiation.
	* Example: <None>
	*/
	"tls.resumed": boolean,

	/**
	* tls.server.certificate
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: PEM-encoded stand-alone certificate offered by the server. This is usually mutually-exclusive of `server.certificate_chain` since this value also exists in that list.
	* Example: MII...
	*/
	"tls.server.certificate": string,

	/**
	* tls.server.certificate_chain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of PEM-encoded certificates that make up the certificate chain offered by the server. This is usually mutually-exclusive of `server.certificate` since that value should be the first certificate in the chain.
	* Example: ["MII...", "MII..."]
	*/
	"tls.server.certificate_chain": string[],

	/**
	* tls.server.hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
	* Example: 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC
	*/
	"tls.server.hash.md5": string,

	/**
	* tls.server.hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
	* Example: 9E393D93138888D288266C2D915214D1D1CCEB2A
	*/
	"tls.server.hash.sha1": string,

	/**
	* tls.server.hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
	* Example: 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0
	*/
	"tls.server.hash.sha256": string,

	/**
	* tls.server.issuer
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Subject of the issuer of the x.509 certificate presented by the server.
	* Example: CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com
	*/
	"tls.server.issuer": string,

	/**
	* tls.server.ja3s
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash that identifies servers based on how they perform an SSL/TLS handshake.
	* Example: 394441ab65754e2207b1e1b457b3641d
	*/
	"tls.server.ja3s": string,

	/**
	* tls.server.not_after
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Timestamp indicating when server certificate is no longer considered valid.
	* Example: 2021-01-01T00:00:00.000Z
	*/
	"tls.server.not_after": Date,

	/**
	* tls.server.not_before
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Timestamp indicating when server certificate is first considered valid.
	* Example: 1970-01-01T00:00:00.000Z
	*/
	"tls.server.not_before": Date,

	/**
	* tls.server.subject
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Subject of the x.509 certificate presented by the server.
	* Example: CN=www.example.com, OU=Infrastructure Team, DC=example, DC=com
	*/
	"tls.server.subject": string,

	/**
	* tls.server.x509.alternative_names
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
	* Example: *.elastic.co
	*/
	"tls.server.x509.alternative_names": string,

	/**
	* tls.server.x509.issuer.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common name (CN) of issuing certificate authority.
	* Example: Example SHA2 High Assurance Server CA
	*/
	"tls.server.x509.issuer.common_name": string,

	/**
	* tls.server.x509.issuer.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) codes
	* Example: US
	*/
	"tls.server.x509.issuer.country": string,

	/**
	* tls.server.x509.issuer.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of issuing certificate authority.
	* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
	*/
	"tls.server.x509.issuer.distinguished_name": string,

	/**
	* tls.server.x509.issuer.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: Mountain View
	*/
	"tls.server.x509.issuer.locality": string,

	/**
	* tls.server.x509.issuer.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of issuing certificate authority.
	* Example: Example Inc
	*/
	"tls.server.x509.issuer.organization": string,

	/**
	* tls.server.x509.issuer.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of issuing certificate authority.
	* Example: www.example.com
	*/
	"tls.server.x509.issuer.organizational_unit": string,

	/**
	* tls.server.x509.issuer.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"tls.server.x509.issuer.state_or_province": string,

	/**
	* tls.server.x509.not_after
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is no longer considered valid.
	* Example: 2020-07-16 03:15:39+00:00
	*/
	"tls.server.x509.not_after": Date,

	/**
	* tls.server.x509.not_before
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is first considered valid.
	* Example: 2019-08-16 01:40:25+00:00
	*/
	"tls.server.x509.not_before": Date,

	/**
	* tls.server.x509.public_key_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Algorithm used to generate the public key.
	* Example: RSA
	*/
	"tls.server.x509.public_key_algorithm": string,

	/**
	* tls.server.x509.public_key_curve
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
	* Example: nistp521
	*/
	"tls.server.x509.public_key_curve": string,

	/**
	* tls.server.x509.public_key_exponent
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: long
	* Description: Exponent used to derive the public key. This is algorithm specific.
	* Example: 65537
	*/
	"tls.server.x509.public_key_exponent": number,

	/**
	* tls.server.x509.public_key_size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: long
	* Description: The size of the public key space in bits.
	* Example: 2048
	*/
	"tls.server.x509.public_key_size": number,

	/**
	* tls.server.x509.serial_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
	* Example: 55FBB9C7DEBF09809D12CCAA
	*/
	"tls.server.x509.serial_number": string,

	/**
	* tls.server.x509.signature_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
	* Example: SHA256-RSA
	*/
	"tls.server.x509.signature_algorithm": string,

	/**
	* tls.server.x509.subject.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common names (CN) of subject.
	* Example: shared.global.example.net
	*/
	"tls.server.x509.subject.common_name": string,

	/**
	* tls.server.x509.subject.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) code
	* Example: US
	*/
	"tls.server.x509.subject.country": string,

	/**
	* tls.server.x509.subject.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of the certificate subject entity.
	* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
	*/
	"tls.server.x509.subject.distinguished_name": string,

	/**
	* tls.server.x509.subject.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: San Francisco
	*/
	"tls.server.x509.subject.locality": string,

	/**
	* tls.server.x509.subject.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of subject.
	* Example: Example, Inc.
	*/
	"tls.server.x509.subject.organization": string,

	/**
	* tls.server.x509.subject.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of subject.
	* Example: <None>
	*/
	"tls.server.x509.subject.organizational_unit": string,

	/**
	* tls.server.x509.subject.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"tls.server.x509.subject.state_or_province": string,

	/**
	* tls.server.x509.version_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Version of x509 format.
	* Example: 3
	*/
	"tls.server.x509.version_number": string,

	/**
	* tls.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Numeric part of the version parsed from the original string.
	* Example: 1.2
	*/
	"tls.version": string,

	/**
	* tls.version_protocol
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Normalized lowercase protocol name parsed from original string.
	* Example: tls
	*/
	"tls.version_protocol": string,

	/**
	* trace.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier of the trace. A trace groups multiple events like transactions that belong together. For example, a user request handled by multiple inter-connected services.
	* Example: 4bf92f3577b34da6a3ce929d0e0e4736
	*/
	"trace.id": string,

	/**
	* transaction.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier of the transaction within the scope of its trace. A transaction is the highest level of work measured within a service, such as a request to a server.
	* Example: 00f067aa0ba902b7
	*/
	"transaction.id": string,

	/**
	* url.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Domain of the url, such as "www.elastic.co". In some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.
	* Example: www.elastic.co
	*/
	"url.domain": string,

	/**
	* url.extension
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The field contains the file extension from the original request url, excluding the leading dot. The file extension is only set if it exists, as not every url has a file extension.
	The leading period must not be included. For example, the value must be "png", not ".png".
	Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").
	* Example: png
	*/
	"url.extension": string,

	/**
	* url.fragment
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Portion of the url after the `#`, such as "top". The `#` is not part of the fragment.
	* Example: <None>
	*/
	"url.fragment": string,

	/**
	* url.full
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.
	* Example: https://www.elastic.co:443/search?q=elasticsearch#top
	*/
	"url.full": string,

	/**
	* url.original
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unmodified original url as seen in the event source. Note that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.
	This field is meant to represent the URL as it was observed, complete or not.
	* Example: https://www.elastic.co:443/search?q=elasticsearch#top or /search?q=elasticsearch
	*/
	"url.original": string,

	/**
	* url.password
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Password of the request.
	* Example: <None>
	*/
	"url.password": string,

	/**
	* url.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Path of the request, such as "/search".
	* Example: <None>
	*/
	"url.path": string,

	/**
	* url.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: long
	* Description: Port of the request, such as 443.
	* Example: 443
	*/
	"url.port": number,

	/**
	* url.query
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The query field describes the query string of the request, such as "q=elasticsearch". The `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.
	* Example: <None>
	*/
	"url.query": string,

	/**
	* url.registered_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The highest registered url domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
	This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
	* Example: example.com
	*/
	"url.registered_domain": string,

	/**
	* url.scheme
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Scheme of the request, such as "https". Note: The `:` is not part of the scheme.
	* Example: https
	*/
	"url.scheme": string,

	/**
	* url.subdomain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain. For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
	* Example: east
	*/
	"url.subdomain": string,

	/**
	* url.top_level_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
	* Example: co.uk
	*/
	"url.top_level_domain": string,

	/**
	* url.username
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Username of the request.
	* Example: <None>
	*/
	"url.username": string,

	/**
	* user.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the user is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"user.domain": string,

	/**
	* user.email
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User email address.
	* Example: <None>
	*/
	"user.email": string,

	/**
	* user.full_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User's full name, if available.
	* Example: Albert Einstein
	*/
	"user.full_name": string,

	/**
	* user.group.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the group is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"user.group.domain": string,

	/**
	* user.group.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the group on the system/platform.
	* Example: <None>
	*/
	"user.group.id": string,

	/**
	* user.group.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the group.
	* Example: <None>
	*/
	"user.group.name": string,

	/**
	* user.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique user hash to correlate information for a user in anonymized form. Useful if `user.id` or `user.name` contain confidential information and cannot be used.
	* Example: <None>
	*/
	"user.hash": string,

	/**
	* user.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the user.
	* Example: <None>
	*/
	"user.id": string,

	/**
	* user.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: core
	* Elasticsearch type: keyword
	* Description: Short name or login of the user.
	* Example: albert
	*/
	"user.name": string,

	/**
	* user.roles
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of user roles at the time of the event.
	* Example: ["kibana_admin", "reporting_user"]
	*/
	"user.roles": string[],

	/**
	* user_agent.device.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the device.
	* Example: iPhone
	*/
	"user_agent.device.name": string,

	/**
	* user_agent.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the user agent.
	* Example: Safari
	*/
	"user_agent.name": string,

	/**
	* user_agent.original
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unparsed user_agent string.
	* Example: Mozilla/5.0 (iPhone; CPU iPhone OS 12_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Mobile/15E148 Safari/604.1
	*/
	"user_agent.original": string,

	/**
	* user_agent.os.family
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: OS family (such as redhat, debian, freebsd, windows).
	* Example: debian
	*/
	"user_agent.os.family": string,

	/**
	* user_agent.os.full
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, including the version or code name.
	* Example: Mac OS Mojave
	*/
	"user_agent.os.full": string,

	/**
	* user_agent.os.kernel
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system kernel version as a raw string.
	* Example: 4.4.0-112-generic
	*/
	"user_agent.os.kernel": string,

	/**
	* user_agent.os.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system name, without the version.
	* Example: Mac OS X
	*/
	"user_agent.os.name": string,

	/**
	* user_agent.os.platform
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system platform (such centos, ubuntu, windows).
	* Example: darwin
	*/
	"user_agent.os.platform": string,

	/**
	* user_agent.os.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system version as a raw string.
	* Example: 10.14.1
	*/
	"user_agent.os.version": string,

	/**
	* user_agent.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Version of the user agent.
	* Example: 12
	*/
	"user_agent.version": string,

	/**
	* vlan.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vlan.html
	* Field Set: vlan
	* Level: extended
	* Elasticsearch type: keyword
	* Description: VLAN ID as reported by the observer.
	* Example: 10
	*/
	"vlan.id": string,

	/**
	* vlan.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vlan.html
	* Field Set: vlan
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Optional VLAN name as reported by the observer.
	* Example: outside
	*/
	"vlan.name": string,

	/**
	* vulnerability.category
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of system or architecture that the vulnerability affects. These may be platform-specific (for example, Debian or SUSE) or general (for example, Database or Firewall). For example (https://qualysguard.qualys.com/qwebhelp/fo_portal/knowledgebase/vulnerability_categories.htm[Qualys vulnerability categories]) This field must be an array.
	* Example: ["Firewall"]
	*/
	"vulnerability.category": string[],

	/**
	* vulnerability.classification
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The classification of the vulnerability scoring system. For example (https://www.first.org/cvss/)
	* Example: CVSS
	*/
	"vulnerability.classification": string,

	/**
	* vulnerability.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The description of the vulnerability that provides additional context of the vulnerability. For example (https://cve.mitre.org/about/faqs.html#cve_entry_descriptions_created[Common Vulnerabilities and Exposure CVE description])
	* Example: In macOS before 2.12.6, there is a vulnerability in the RPC...
	*/
	"vulnerability.description": string,

	/**
	* vulnerability.enumeration
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of identifier used for this vulnerability. For example (https://cve.mitre.org/about/)
	* Example: CVE
	*/
	"vulnerability.enumeration": string,

	/**
	* vulnerability.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The identification (ID) is the number portion of a vulnerability entry. It includes a unique identification number for the vulnerability. For example (https://cve.mitre.org/about/faqs.html#what_is_cve_id)[Common Vulnerabilities and Exposure CVE ID]
	* Example: CVE-2019-00001
	*/
	"vulnerability.id": string,

	/**
	* vulnerability.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A resource that provides additional information, context, and mitigations for the identified vulnerability.
	* Example: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6111
	*/
	"vulnerability.reference": string,

	/**
	* vulnerability.report_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The report or scan identification number.
	* Example: 20191018.0001
	*/
	"vulnerability.report_id": string,

	/**
	* vulnerability.scanner.vendor
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The name of the vulnerability scanner vendor.
	* Example: Tenable
	*/
	"vulnerability.scanner.vendor": string,

	/**
	* vulnerability.score.base
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: float
	* Description: Scores can range from 0.0 to 10.0, with 10.0 being the most severe. Base scores cover an assessment for exploitability metrics (attack vector, complexity, privileges, and user interaction), impact metrics (confidentiality, integrity, and availability), and scope. For example (https://www.first.org/cvss/specification-document)
	* Example: 5.5
	*/
	"vulnerability.score.base": number,

	/**
	* vulnerability.score.environmental
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: float
	* Description: Scores can range from 0.0 to 10.0, with 10.0 being the most severe. Environmental scores cover an assessment for any modified Base metrics, confidentiality, integrity, and availability requirements. For example (https://www.first.org/cvss/specification-document)
	* Example: 5.5
	*/
	"vulnerability.score.environmental": number,

	/**
	* vulnerability.score.temporal
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: float
	* Description: Scores can range from 0.0 to 10.0, with 10.0 being the most severe. Temporal scores cover an assessment for code maturity, remediation level, and confidence. For example (https://www.first.org/cvss/specification-document)
	* Example: <None>
	*/
	"vulnerability.score.temporal": number,

	/**
	* vulnerability.score.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The National Vulnerability Database (NVD) provides qualitative severity rankings of "Low", "Medium", and "High" for CVSS v2.0 base score ranges in addition to the severity ratings for CVSS v3.0 as they are defined in the CVSS v3.0 specification. CVSS is owned and managed by FIRST.Org, Inc. (FIRST), a US-based non-profit organization, whose mission is to help computer security incident response teams across the world. For example (https://nvd.nist.gov/vuln-metrics/cvss)
	* Example: 2
	*/
	"vulnerability.score.version": string,

	/**
	* vulnerability.severity
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The severity of the vulnerability can help with metrics and internal prioritization regarding remediation. For example (https://nvd.nist.gov/vuln-metrics/cvss)
	* Example: Critical
	*/
	"vulnerability.severity": string,

	/**
	* x509.alternative_names
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
	* Example: *.elastic.co
	*/
	"x509.alternative_names": string[],

	/**
	* x509.issuer.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common name (CN) of issuing certificate authority.
	* Example: Example SHA2 High Assurance Server CA
	*/
	"x509.issuer.common_name": string[],

	/**
	* x509.issuer.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) codes
	* Example: US
	*/
	"x509.issuer.country": string[],

	/**
	* x509.issuer.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of issuing certificate authority.
	* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
	*/
	"x509.issuer.distinguished_name": string,

	/**
	* x509.issuer.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: Mountain View
	*/
	"x509.issuer.locality": string[],

	/**
	* x509.issuer.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of issuing certificate authority.
	* Example: Example Inc
	*/
	"x509.issuer.organization": string[],

	/**
	* x509.issuer.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of issuing certificate authority.
	* Example: www.example.com
	*/
	"x509.issuer.organizational_unit": string[],

	/**
	* x509.issuer.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"x509.issuer.state_or_province": string[],

	/**
	* x509.not_after
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is no longer considered valid.
	* Example: 2020-07-16 03:15:39+00:00
	*/
	"x509.not_after": Date,

	/**
	* x509.not_before
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is first considered valid.
	* Example: 2019-08-16 01:40:25+00:00
	*/
	"x509.not_before": Date,

	/**
	* x509.public_key_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Algorithm used to generate the public key.
	* Example: RSA
	*/
	"x509.public_key_algorithm": string,

	/**
	* x509.public_key_curve
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
	* Example: nistp521
	*/
	"x509.public_key_curve": string,

	/**
	* x509.public_key_exponent
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: long
	* Description: Exponent used to derive the public key. This is algorithm specific.
	* Example: 65537
	*/
	"x509.public_key_exponent": number,

	/**
	* x509.public_key_size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: long
	* Description: The size of the public key space in bits.
	* Example: 2048
	*/
	"x509.public_key_size": number,

	/**
	* x509.serial_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
	* Example: 55FBB9C7DEBF09809D12CCAA
	*/
	"x509.serial_number": string,

	/**
	* x509.signature_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
	* Example: SHA256-RSA
	*/
	"x509.signature_algorithm": string,

	/**
	* x509.subject.common_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of common names (CN) of subject.
	* Example: shared.global.example.net
	*/
	"x509.subject.common_name": string[],

	/**
	* x509.subject.country
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of country (C) code
	* Example: US
	*/
	"x509.subject.country": string[],

	/**
	* x509.subject.distinguished_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Distinguished name (DN) of the certificate subject entity.
	* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
	*/
	"x509.subject.distinguished_name": string,

	/**
	* x509.subject.locality
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of locality names (L)
	* Example: San Francisco
	*/
	"x509.subject.locality": string[],

	/**
	* x509.subject.organization
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizations (O) of subject.
	* Example: Example, Inc.
	*/
	"x509.subject.organization": string[],

	/**
	* x509.subject.organizational_unit
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of organizational units (OU) of subject.
	* Example: <None>
	*/
	"x509.subject.organizational_unit": string[],

	/**
	* x509.subject.state_or_province
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of state or province names (ST, S, or P)
	* Example: California
	*/
	"x509.subject.state_or_province": string[],

	/**
	* x509.version_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Version of x509 format.
	* Example: 3
	*/
	"x509.version_number": string,


}

export interface EcsCoreTree {
	/**
	* @timestamp
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: core
	* Elasticsearch type: date
	* Description: Date/time when the event originated. This is the date/time extracted from the event, typically representing when the event was generated by the source.
	If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.
	Required field for all events.
	* Example: 2016-05-23T08:05:34.853Z
	*/
	"@timestamp": Date,

	/**
	* event.action
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: The action captured by the event. This describes the information in the event. It is more specific than `event.category`. Examples are `group-add`, `process-started`, `file-created`. The value is normally defined by the implementer.
	* Example: user-password-change
	*/
	"action": string,

	/**
	* host.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-host.html
	* Field Set: host
	* Level: core
	* Elasticsearch type: keyword
	* Description: Operating system architecture.
	* Example: x86_64
	*/
	"architecture": string,

	build: {
		/**
		* agent.build.original
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-agent.html
		* Field Set: agent
		* Level: core
		* Elasticsearch type: keyword
		* Description: Extended build information for the agent. This field is intended to contain any build information that a data source may provide, no specific formatting is required.
		* Example: metricbeat version 7.6.0 (amd64), libbeat 7.6.0 [6a23e8f8f30f5001ba344e4e54d8d9cb82cb107c built 2020-02-05 23:10:10 +0000 UTC]
		*/
		"original": string,

	}
	/**
	* source.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: long
	* Description: Bytes sent from the source to the destination.
	* Example: 184
	*/
	"bytes": number,

	/**
	* event.category
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy. `event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.
	This field is an array. This will allow proper categorization of some events that fall in multiple categories.
	* Example: authentication
	*/
	"category": ('authentication' | 'configuration' | 'database' | 'driver' | 'file' | 'host' | 'iam' | 'intrusion_detection' | 'malware' | 'network' | 'package' | 'process' | 'web')[],

	/**
	* geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"city_name": string,

	/**
	* error.code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: core
	* Elasticsearch type: keyword
	* Description: Error code describing the error.
	* Example: <None>
	*/
	"code": string,

	code_signature: {
		/**
		* process.code_signature.exists
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: core
		* Elasticsearch type: boolean
		* Description: Boolean to capture if a signature is present.
		* Example: true
		*/
		"exists": boolean,

		/**
		* process.code_signature.subject_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: core
		* Elasticsearch type: keyword
		* Description: Subject name of the code signer
		* Example: Microsoft Corporation
		*/
		"subject_name": string,

	}
	/**
	* geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"continent_name": string,

	/**
	* geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"country_iso_code": string,

	/**
	* geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"country_name": string,

	/**
	* event.created
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: date
	* Description: event.created contains the date/time when the event was first read by an agent, or by your pipeline. This field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.
	In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.
	In case the two timestamps are identical, @timestamp should be used.
	* Example: 2016-05-23T08:05:34.857Z
	*/
	"created": Date,

	data: {
		/**
		* registry.data.strings
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
		* Field Set: registry
		* Level: core
		* Elasticsearch type: keyword
		* Description: Content when writing string types. Populated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `"1"`).
		* Example: ["C:\rta\red_ttp\bin\myapp.exe"]
		*/
		"strings": string[],

		/**
		* registry.data.type
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
		* Field Set: registry
		* Level: core
		* Elasticsearch type: keyword
		* Description: Standard registry type for encoding contents
		* Example: REG_SZ
		*/
		"type": string,

	}
	/**
	* event.dataset
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the dataset. If an event source publishes more than one type of log or events (e.g. access log, error log), the dataset is used to specify which one the event comes from.
	It's recommended but not required to start the dataset name with the module name, followed by a dot, then the dataset name.
	* Example: apache.access
	*/
	"dataset": string,

	/**
	* network.direction
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: keyword
	* Description: Direction of the network traffic. Recommended values are:
	  * ingress
	  * egress
	  * inbound
	  * outbound
	  * internal
	  * external
	  * unknown
	
	When mapping events from a host-based monitoring context, populate this field from the host's point of view, using the values "ingress" or "egress".
	When mapping events from a network or perimeter-based monitoring context, populate this field from the point of view of the network perimeter, using the values "inbound", "outbound", "internal" or "external".
	Note that "internal" is not crossing perimeter boundaries, and is meant to describe communication between two hosts within the perimeter. Note also that "external" is meant to describe traffic between two hosts that are external to the perimeter. This could for example be useful for ISPs or VPN service providers.
	* Example: inbound
	*/
	"direction": string,

	/**
	* source.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: Source domain.
	* Example: <None>
	*/
	"domain": string,

	/**
	* event.duration
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: long
	* Description: Duration of the event in nanoseconds. If event.start and event.end are known this value should be the difference between the end and start time.
	* Example: <None>
	*/
	"duration": number,

	/**
	* code_signature.exists
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: core
	* Elasticsearch type: boolean
	* Description: Boolean to capture if a signature is present.
	* Example: true
	*/
	"exists": boolean,

	/**
	* network.forwarded_ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: ip
	* Description: Host IP address when the source IP address is the proxy.
	* Example: 192.1.1.2
	*/
	"forwarded_ip": string,

	geo: {
		/**
		* source.geo.city_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: keyword
		* Description: City name.
		* Example: Montreal
		*/
		"city_name": string,

		/**
		* source.geo.continent_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: keyword
		* Description: Name of the continent.
		* Example: North America
		*/
		"continent_name": string,

		/**
		* source.geo.country_iso_code
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: keyword
		* Description: Country ISO code.
		* Example: CA
		*/
		"country_iso_code": string,

		/**
		* source.geo.country_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: keyword
		* Description: Country name.
		* Example: Canada
		*/
		"country_name": string,

		/**
		* source.geo.location
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: geo_point
		* Description: Longitude and latitude.
		* Example: { "lon": -73.614830, "lat": 45.505918 }
		*/
		"location": GeoPoint,

		/**
		* source.geo.region_iso_code
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: keyword
		* Description: Region ISO code.
		* Example: CA-QC
		*/
		"region_iso_code": string,

		/**
		* source.geo.region_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: keyword
		* Description: Region name.
		* Example: Quebec
		*/
		"region_name": string,

	}
	/**
	* registry.hive
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Abbreviated name for the hive.
	* Example: HKLM
	*/
	"hive": string,

	/**
	* observer.hostname
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Hostname of the observer.
	* Example: <None>
	*/
	"hostname": string,

	/**
	* user.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: core
	* Elasticsearch type: keyword
	* Description: Unique identifier of the user.
	* Example: <None>
	*/
	"id": string,

	/**
	* event.ingested
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: date
	* Description: Timestamp when an event arrived in the central data store. This is different from `@timestamp`, which is when the event originally occurred.  It's also different from `event.created`, which is meant to capture the first time an agent saw the event.
	In normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`.
	* Example: 2016-05-23T08:05:35.101Z
	*/
	"ingested": Date,

	/**
	* source.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: ip
	* Description: IP address of the source (IPv4 or IPv6).
	* Example: <None>
	*/
	"ip": string,

	/**
	* registry.key
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Hive-relative path of keys.
	* Example: SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe
	*/
	"key": string,

	/**
	* event.kind
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy. `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.
	The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.
	* Example: alert
	*/
	"kind": ('alert' | 'event' | 'metric' | 'state' | 'pipeline_error' | 'signal'),

	/**
	* labels
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: core
	* Elasticsearch type: object
	* Description: Custom key/value pairs. Can be used to add meta information to events. Should not contain nested objects. All values are stored as keyword.
	Example: `docker` and `k8s` labels.
	* Example: {"application": "foo-bar", "env": "production"}
	*/
	"labels": object,

	/**
	* log.level
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: core
	* Elasticsearch type: keyword
	* Description: Original log level of the log event. If the source of the event provides a log level or textual severity, this is the one that goes in `log.level`. If your source doesn't specify one, you may put your event transport's severity here (e.g. Syslog severity).
	Some examples are `warn`, `err`, `i`, `informational`.
	* Example: error
	*/
	"level": string,

	/**
	* geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"location": GeoPoint,

	/**
	* log.logger
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: core
	* Elasticsearch type: keyword
	* Description: The name of the logger inside an application. This is usually the name of the class which initialized the logger, or can be a custom name.
	* Example: org.elasticsearch.bootstrap.Bootstrap
	*/
	"logger": string,

	/**
	* source.mac
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: MAC address of the source.
	* Example: <None>
	*/
	"mac": string,

	/**
	* error.message
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: core
	* Elasticsearch type: text
	* Description: Error message.
	* Example: <None>
	*/
	"message": string,

	/**
	* event.module
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the module this data is coming from. If your monitoring agent supports the concept of modules or plugins to process events of a given source (e.g. Apache logs), `event.module` should contain the name of this module.
	* Example: apache
	*/
	"module": string,

	/**
	* user.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: core
	* Elasticsearch type: keyword
	* Description: Short name or login of the user.
	* Example: albert
	*/
	"name": string,

	/**
	* log.original
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is the original log message and contains the full log message before splitting it up in multiple parts. In contrast to the `message` field which can contain an extracted part of the log message, this field contains the original, full log message. It can have already some modifications applied like encoding or new lines removed to clean up the log message.
	This field is not indexed and doc_values are disabled so it can't be queried but the value can be retrieved from `_source`.
	* Example: Sep 19 08:26:10 localhost My log
	*/
	"original": string,

	/**
	* event.outcome
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is one of four ECS Categorization Fields, and indicates the lowest level in the ECS category hierarchy. `event.outcome` simply denotes whether the event represents a success or a failure from the perspective of the entity that produced the event.
	Note that when a single transaction is described in multiple events, each event may populate different values of `event.outcome`, according to their perspective.
	Also note that in the case of a compound event (a single event that contains multiple logical events), this field should be populated with the value that best captures the overall success or failure from the perspective of the event producer.
	Further note that not all events will have an associated outcome. For example, this field is generally not populated for metric events, events with `event.type:info`, or any events for which an outcome does not make logical sense.
	* Example: success
	*/
	"outcome": ('failure' | 'success' | 'unknown'),

	/**
	* source.packets
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: long
	* Description: Packets sent from the source to the destination.
	* Example: 12
	*/
	"packets": number,

	parent: {
		code_signature: {
			/**
			* process.parent.code_signature.exists
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: core
			* Elasticsearch type: boolean
			* Description: Boolean to capture if a signature is present.
			* Example: true
			*/
			"exists": boolean,

			/**
			* process.parent.code_signature.subject_name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: core
			* Elasticsearch type: keyword
			* Description: Subject name of the code signer
			* Example: Microsoft Corporation
			*/
			"subject_name": string,

		}
		/**
		* process.parent.pid
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: core
		* Elasticsearch type: long
		* Description: Process id.
		* Example: 4242
		*/
		"pid": number,

	}
	/**
	* registry.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Full path, including hive, key and value
	* Example: HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe\Debugger
	*/
	"path": string,

	/**
	* process.pid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: core
	* Elasticsearch type: long
	* Description: Process id.
	* Example: 4242
	*/
	"pid": number,

	/**
	* source.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: long
	* Description: Port of the source.
	* Example: <None>
	*/
	"port": number,

	/**
	* network.protocol
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: keyword
	* Description: L7 Network protocol name. ex. http, lumberjack, transport protocol. The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
	* Example: http
	*/
	"protocol": string,

	/**
	* geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"region_iso_code": string,

	/**
	* geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"region_name": string,

	/**
	* event.risk_score
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: float
	* Description: Risk score or priority of the event (e.g. security solutions). Use your system's original value here.
	* Example: <None>
	*/
	"risk_score": number,

	/**
	* event.severity
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: long
	* Description: The numeric severity of the event according to your event source. What the different severity values mean can be different between sources and use cases. It's up to the implementer to make sure severities are consistent across events from the same source.
	The Syslog severity belongs in `log.syslog.severity.code`. `event.severity` is meant to represent the severity according to the event source (e.g. firewall, IDS). If the event source does not publish its own severity, you may optionally copy the `log.syslog.severity.code` to `event.severity`.
	* Example: 7
	*/
	"severity": number,

	/**
	* service.state
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: core
	* Elasticsearch type: keyword
	* Description: Current state of the service.
	* Example: <None>
	*/
	"state": string,

	/**
	* code_signature.subject_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: core
	* Elasticsearch type: keyword
	* Description: Subject name of the code signer
	* Example: Microsoft Corporation
	*/
	"subject_name": string,

	/**
	* tags
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: core
	* Elasticsearch type: keyword
	* Description: List of keywords used to tag each event.
	* Example: ["production", "env2"]
	*/
	"tags": string[],

	/**
	* network.transport
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: keyword
	* Description: Same as network.iana_number, but instead using the Keyword name of the transport layer (udp, tcp, ipv6-icmp, etc.) The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
	* Example: tcp
	*/
	"transport": string,

	/**
	* service.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: core
	* Elasticsearch type: keyword
	* Description: The type of the service data is collected from. The type can be used to group and correlate logs and metrics from one service type.
	Example: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`.
	* Example: elasticsearch
	*/
	"type": string,

	user: {
		/**
		* source.user.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: keyword
		* Description: Unique identifier of the user.
		* Example: <None>
		*/
		"id": string,

		/**
		* source.user.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: keyword
		* Description: Short name or login of the user.
		* Example: albert
		*/
		"name": string,

	}
	/**
	* registry.value
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the value written.
	* Example: Debugger
	*/
	"value": string,

	/**
	* observer.vendor
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Vendor name of the observer.
	* Example: Symantec
	*/
	"vendor": string,

	/**
	* service.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: core
	* Elasticsearch type: keyword
	* Description: Version of the service the data was collected from. This allows to look at a data set only for a specific version of a service.
	* Example: 3.2.4
	*/
	"version": string,


}

export interface EcsExtendedTree {
	/**
	* file.accessed
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Last time the file was accessed. Note that not all filesystems keep track of access time.
	* Example: <None>
	*/
	"accessed": Date,

	account: {
		/**
		* cloud.account.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
		* Field Set: cloud
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The cloud account or organization id used to identify different entities in a multi-tenant environment. Examples: AWS account id, Google Cloud ORG Id, or other unique identifier.
		* Example: 666777888999
		*/
		"id": string,

		/**
		* cloud.account.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
		* Field Set: cloud
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The cloud account name or alias used to identify different entities in a multi-tenant environment. Examples: AWS account name, Google Cloud ORG display name.
		* Example: elastic-dev
		*/
		"name": string,

	}
	/**
	* source.address
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Some event source addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field. Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
	* Example: <None>
	*/
	"address": string,

	/**
	* interface.alias
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-interface.html
	* Field Set: interface
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.
	* Example: outside
	*/
	"alias": string,

	/**
	* x509.alternative_names
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
	* Example: *.elastic.co
	*/
	"alternative_names": string[],

	/**
	* dns.answers
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: object
	* Description: An array containing an object for each answer section returned by the server. The main keys that should be present in these objects are defined by ECS. Records that have more information may contain more keys than what ECS defines.
	Not all DNS data sources give all details about DNS answers. At minimum, answer objects must contain the `data` key. If more information is available, map as much of it to ECS as possible, and add any additional fields to the answer objects as custom fields.
	* Example: <None>
	*/
	"answers": object[],

	/**
	* network.application
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A name given to an application level protocol. This can be arbitrarily assigned for things like microservices, but also apply to things like skype, icq, facebook, twitter. This would be used in situations where the vendor or service can be decoded such as from the source/dest IP owners, ports, or wire format. The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
	* Example: aim
	*/
	"application": string,

	/**
	* pe.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: CPU architecture target for the file.
	* Example: x64
	*/
	"architecture": string,

	/**
	* process.args
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of process arguments, starting with the absolute path to the executable. May be filtered to protect sensitive information.
	* Example: ["/usr/bin/ssh", "-l", "user", "10.0.0.16"]
	*/
	"args": string[],

	/**
	* process.args_count
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Length of the process.args array. This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.
	* Example: 4
	*/
	"args_count": number,

	as: {
		/**
		* source.as.number
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: extended
		* Elasticsearch type: long
		* Description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
		* Example: 15169
		*/
		"number": number,

		organization: {
			/**
			* source.as.organization.name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
			* Field Set: source
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Organization name.
			* Example: Google LLC
			*/
			"name": string,

		}
	}
	/**
	* file.attributes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of file attributes. Attributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.
	* Example: ["readonly", "system"]
	*/
	"attributes": string[],

	/**
	* rule.author
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name, organization, or pseudonym of the author or authors who created the rule used to generate this event.
	* Example: ["Star-Lord"]
	*/
	"author": string[],

	/**
	* cloud.availability_zone
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Availability zone in which this host is running.
	* Example: us-east-1c
	*/
	"availability_zone": string,

	/**
	* package.build_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the build version of the installed package. For example use the commit SHA of a non-released package.
	* Example: 36f4f7e89dd61b0988b12ee000b98966867710cd
	*/
	"build_version": string,

	/**
	* vulnerability.category
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of system or architecture that the vulnerability affects. These may be platform-specific (for example, Debian or SUSE) or general (for example, Database or Firewall). For example (https://qualysguard.qualys.com/qwebhelp/fo_portal/knowledgebase/vulnerability_categories.htm[Qualys vulnerability categories]) This field must be an array.
	* Example: ["Firewall"]
	*/
	"category": string[],

	/**
	* package.checksum
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Checksum of the installed package for verification.
	* Example: 68b329da9893e34099c7d8ad5cb9c940
	*/
	"checksum": string,

	/**
	* tls.cipher
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: String indicating the cipher used during the current connection.
	* Example: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
	*/
	"cipher": string,

	/**
	* vulnerability.classification
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The classification of the vulnerability scoring system. For example (https://www.first.org/cvss/)
	* Example: CVSS
	*/
	"classification": string,

	client: {
		/**
		* tls.client.certificate
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: PEM-encoded stand-alone certificate offered by the client. This is usually mutually-exclusive of `client.certificate_chain` since this value also exists in that list.
		* Example: MII...
		*/
		"certificate": string,

		/**
		* tls.client.certificate_chain
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Array of PEM-encoded certificates that make up the certificate chain offered by the client. This is usually mutually-exclusive of `client.certificate` since that value should be the first certificate in the chain.
		* Example: ["MII...", "MII..."]
		*/
		"certificate_chain": string[],

		hash: {
			/**
			* tls.client.hash.md5
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
			* Example: 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC
			*/
			"md5": string,

			/**
			* tls.client.hash.sha1
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
			* Example: 9E393D93138888D288266C2D915214D1D1CCEB2A
			*/
			"sha1": string,

			/**
			* tls.client.hash.sha256
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
			* Example: 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0
			*/
			"sha256": string,

		}
		/**
		* tls.client.issuer
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Distinguished name of subject of the issuer of the x.509 certificate presented by the client.
		* Example: CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com
		*/
		"issuer": string,

		/**
		* tls.client.ja3
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: A hash that identifies clients based on how they perform an SSL/TLS handshake.
		* Example: d4e5b18d6b55c71272893221c96ba240
		*/
		"ja3": string,

		/**
		* tls.client.not_after
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: date
		* Description: Date/Time indicating when client certificate is no longer considered valid.
		* Example: 2021-01-01T00:00:00.000Z
		*/
		"not_after": Date,

		/**
		* tls.client.not_before
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: date
		* Description: Date/Time indicating when client certificate is first considered valid.
		* Example: 1970-01-01T00:00:00.000Z
		*/
		"not_before": Date,

		/**
		* tls.client.server_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Also called an SNI, this tells the server which hostname to which the client is attempting to connect to. When this value is available, it should get copied to `destination.domain`.
		* Example: www.elastic.co
		*/
		"server_name": string,

		/**
		* tls.client.subject
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Distinguished name of subject of the x.509 certificate presented by the client.
		* Example: CN=myclient, OU=Documentation Team, DC=example, DC=com
		*/
		"subject": string,

		/**
		* tls.client.supported_ciphers
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Array of ciphers offered by the client during the client hello.
		* Example: ["TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", "..."]
		*/
		"supported_ciphers": string[],

		x509: {
			/**
			* tls.client.x509.alternative_names
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
			* Example: *.elastic.co
			*/
			"alternative_names": string,

			issuer: {
				/**
				* tls.client.x509.issuer.common_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of common name (CN) of issuing certificate authority.
				* Example: Example SHA2 High Assurance Server CA
				*/
				"common_name": string,

				/**
				* tls.client.x509.issuer.country
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of country (C) codes
				* Example: US
				*/
				"country": string,

				/**
				* tls.client.x509.issuer.distinguished_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: Distinguished name (DN) of issuing certificate authority.
				* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
				*/
				"distinguished_name": string,

				/**
				* tls.client.x509.issuer.locality
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of locality names (L)
				* Example: Mountain View
				*/
				"locality": string,

				/**
				* tls.client.x509.issuer.organization
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizations (O) of issuing certificate authority.
				* Example: Example Inc
				*/
				"organization": string,

				/**
				* tls.client.x509.issuer.organizational_unit
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizational units (OU) of issuing certificate authority.
				* Example: www.example.com
				*/
				"organizational_unit": string,

				/**
				* tls.client.x509.issuer.state_or_province
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of state or province names (ST, S, or P)
				* Example: California
				*/
				"state_or_province": string,

			}
			/**
			* tls.client.x509.not_after
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: date
			* Description: Time at which the certificate is no longer considered valid.
			* Example: 2020-07-16 03:15:39+00:00
			*/
			"not_after": Date,

			/**
			* tls.client.x509.not_before
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: date
			* Description: Time at which the certificate is first considered valid.
			* Example: 2019-08-16 01:40:25+00:00
			*/
			"not_before": Date,

			/**
			* tls.client.x509.public_key_algorithm
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Algorithm used to generate the public key.
			* Example: RSA
			*/
			"public_key_algorithm": string,

			/**
			* tls.client.x509.public_key_curve
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
			* Example: nistp521
			*/
			"public_key_curve": string,

			/**
			* tls.client.x509.public_key_exponent
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: long
			* Description: Exponent used to derive the public key. This is algorithm specific.
			* Example: 65537
			*/
			"public_key_exponent": number,

			/**
			* tls.client.x509.public_key_size
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: long
			* Description: The size of the public key space in bits.
			* Example: 2048
			*/
			"public_key_size": number,

			/**
			* tls.client.x509.serial_number
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
			* Example: 55FBB9C7DEBF09809D12CCAA
			*/
			"serial_number": string,

			/**
			* tls.client.x509.signature_algorithm
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
			* Example: SHA256-RSA
			*/
			"signature_algorithm": string,

			subject: {
				/**
				* tls.client.x509.subject.common_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of common names (CN) of subject.
				* Example: shared.global.example.net
				*/
				"common_name": string,

				/**
				* tls.client.x509.subject.country
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of country (C) code
				* Example: US
				*/
				"country": string,

				/**
				* tls.client.x509.subject.distinguished_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: Distinguished name (DN) of the certificate subject entity.
				* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
				*/
				"distinguished_name": string,

				/**
				* tls.client.x509.subject.locality
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of locality names (L)
				* Example: San Francisco
				*/
				"locality": string,

				/**
				* tls.client.x509.subject.organization
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizations (O) of subject.
				* Example: Example, Inc.
				*/
				"organization": string,

				/**
				* tls.client.x509.subject.organizational_unit
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizational units (OU) of subject.
				* Example: <None>
				*/
				"organizational_unit": string,

				/**
				* tls.client.x509.subject.state_or_province
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of state or province names (ST, S, or P)
				* Example: California
				*/
				"state_or_province": string,

			}
			/**
			* tls.client.x509.version_number
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Version of x509 format.
			* Example: 3
			*/
			"version_number": string,

		}
	}
	/**
	* event.code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Identification code for this event, if one exists. Some event sources use event codes to identify messages unambiguously, regardless of message language or wording adjustments over time. An example of this is the Windows Event ID.
	* Example: 4648
	*/
	"code": string,

	code_signature: {
		/**
		* process.code_signature.status
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
		* Example: ERROR_UNTRUSTED_ROOT
		*/
		"status": string,

		/**
		* process.code_signature.trusted
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: boolean
		* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
		* Example: true
		*/
		"trusted": boolean,

		/**
		* process.code_signature.valid
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: boolean
		* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
		* Example: true
		*/
		"valid": boolean,

	}
	/**
	* process.command_line
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Full command line that started the process, including the absolute path to the executable, and all arguments. Some arguments may be filtered to protect sensitive information.
	* Example: /usr/bin/ssh -l user 10.0.0.16
	*/
	"command_line": string,

	/**
	* network.community_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of source and destination IPs and ports, as well as the protocol used in a communication. This is a tool-agnostic standard to identify flows. Learn more at https://github.com/corelight/community-id-spec.
	* Example: 1:hO+sN4H+MG5MY/8hIrXPqc4ZQz0=
	*/
	"community_id": string,

	/**
	* pe.company
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal company name of the file, provided at compile-time.
	* Example: Microsoft Corporation
	*/
	"company": string,

	/**
	* file.created
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: File creation time. Note that not all filesystems store the creation time.
	* Example: <None>
	*/
	"created": Date,

	/**
	* file.ctime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Last time the file attributes or metadata changed. Note that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file.
	* Example: <None>
	*/
	"ctime": Date,

	/**
	* tls.curve
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: String indicating the curve used for the given cipher, when applicable.
	* Example: secp256r1
	*/
	"curve": string,

	data: {
		/**
		* registry.data.bytes
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
		* Field Set: registry
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Original bytes written with base64 encoding. For Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values.
		* Example: ZQBuAC0AVQBTAAAAZQBuAAAAAAA=
		*/
		"bytes": string,

	}
	/**
	* vulnerability.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The description of the vulnerability that provides additional context of the vulnerability. For example (https://cve.mitre.org/about/faqs.html#cve_entry_descriptions_created[Common Vulnerabilities and Exposure CVE description])
	* Example: In macOS before 2.12.6, there is a vulnerability in the RPC...
	*/
	"description": string,

	/**
	* file.device
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Device that is the source of the file.
	* Example: sda
	*/
	"device": string,

	/**
	* file.directory
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Directory where the file is located. It should include the drive letter, when appropriate.
	* Example: /home/alice
	*/
	"directory": string,

	/**
	* user.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the user is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"domain": string,

	/**
	* file.drive_letter
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Drive letter where the file is located. This field is only relevant on Windows. The value should be uppercase, and not include the colon.
	* Example: C
	*/
	"drive_letter": string,

	/**
	* observer.egress
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: object
	* Description: Observer.egress holds information like interface number and name, vlan, and zone information to  classify egress traffic.  Single armed monitoring such as a network sensor on a span port should  only use observer.ingress to categorize traffic.
	* Example: <None>
	*/
	"egress": object,

	/**
	* user.email
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User email address.
	* Example: <None>
	*/
	"email": string,

	/**
	* event.end
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: date
	* Description: event.end contains the date when the event ended or when the activity was last observed.
	* Example: <None>
	*/
	"end": Date,

	/**
	* process.entity_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the process. The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
	Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.
	* Example: c2c455d9f99375d
	*/
	"entity_id": string,

	/**
	* vulnerability.enumeration
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of identifier used for this vulnerability. For example (https://cve.mitre.org/about/)
	* Example: CVE
	*/
	"enumeration": string,

	/**
	* service.ephemeral_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Ephemeral identifier of this service (if one exists). This id normally changes across restarts, but `service.id` does not.
	* Example: 8a4f500f
	*/
	"ephemeral_id": string,

	/**
	* tls.established
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean flag indicating if the TLS negotiation was successful and transitioned to an encrypted tunnel.
	* Example: <None>
	*/
	"established": boolean,

	/**
	* process.executable
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Absolute path to the process executable.
	* Example: /usr/bin/ssh
	*/
	"executable": string,

	/**
	* process.exit_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: The exit code of the process, if this is a termination event. The field should be absent if there is no exit code for the event (e.g. process start).
	* Example: 137
	*/
	"exit_code": number,

	/**
	* url.extension
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The field contains the file extension from the original request url, excluding the leading dot. The file extension is only set if it exists, as not every url has a file extension.
	The leading period must not be included. For example, the value must be "png", not ".png".
	Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").
	* Example: png
	*/
	"extension": string,

	/**
	* os.family
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: OS family (such as redhat, debian, freebsd, windows).
	* Example: debian
	*/
	"family": string,

	file: {
		/**
		* log.file.path
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
		* Field Set: log
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Full path to the log file this event came from, including the file name. It should include the drive letter, when appropriate. If the event wasn't read from a log file, do not populate this field.
		* Example: /var/log/fun-times.log
		*/
		"path": string,

	}
	/**
	* pe.file_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal version of the file, provided at compile-time.
	* Example: 6.3.9600.17415
	*/
	"file_version": string,

	/**
	* url.fragment
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Portion of the url after the `#`, such as "top". The `#` is not part of the fragment.
	* Example: <None>
	*/
	"fragment": string,

	/**
	* threat.framework
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the threat framework used to further categorize and classify the tactic and technique of the reported threat. Framework classification can be provided by detecting systems, evaluated at ingest time, or retrospectively tagged to events.
	* Example: MITRE ATT&CK
	*/
	"framework": string,

	/**
	* url.full
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.
	* Example: https://www.elastic.co:443/search?q=elasticsearch#top
	*/
	"full": string,

	/**
	* user.full_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User's full name, if available.
	* Example: Albert Einstein
	*/
	"full_name": string,

	geo: {
		/**
		* source.geo.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: extended
		* Elasticsearch type: keyword
		* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
		Not typically used in automated geolocation.
		* Example: boston-dc
		*/
		"name": string,

	}
	/**
	* file.gid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Primary group ID (GID) of the file.
	* Example: 1001
	*/
	"gid": string,

	/**
	* file.group
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Primary group name of the file.
	* Example: alice
	*/
	"group": string,

	/**
	* user.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique user hash to correlate information for a user in anonymized form. Useful if `user.id` or `user.name` contain confidential information and cannot be used.
	* Example: <None>
	*/
	"hash": string,

	/**
	* dns.header_flags
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of 2 letter DNS header flags. Expected values are: AA, TC, RD, RA, AD, CD, DO.
	* Example: ["RD", "RA"]
	*/
	"header_flags": string[],

	/**
	* related.hosts
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-related.html
	* Field Set: related
	* Level: extended
	* Elasticsearch type: keyword
	* Description: All hostnames or other host identifiers seen on your event. Example identifiers include FQDNs, domain names, workstation names, or aliases.
	* Example: <None>
	*/
	"hosts": string[],

	/**
	* network.iana_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: IANA Protocol Number (https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Standardized list of protocols. This aligns well with NetFlow and sFlow related logs which use the IANA Protocol Number.
	* Example: 6
	*/
	"iana_number": string,

	/**
	* vulnerability.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The identification (ID) is the number portion of a vulnerability entry. It includes a unique identification number for the vulnerability. For example (https://cve.mitre.org/about/faqs.html#what_is_cve_id)[Common Vulnerabilities and Exposure CVE ID]
	* Example: CVE-2019-00001
	*/
	"id": string,

	image: {
		/**
		* container.image.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
		* Field Set: container
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Name of the image the container was built on.
		* Example: <None>
		*/
		"name": string,

		/**
		* container.image.tag
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
		* Field Set: container
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Container image tags.
		* Example: <None>
		*/
		"tag": string[],

	}
	/**
	* pe.imphash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
	* Example: 0c6803c4e922103c4dca5963aad36ddf
	*/
	"imphash": string,

	/**
	* observer.ingress
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: object
	* Description: Observer.ingress holds information like interface number and name, vlan, and zone information to  classify ingress traffic.  Single armed monitoring such as a network sensor on a span port should  only use observer.ingress to categorize traffic.
	* Example: <None>
	*/
	"ingress": object,

	/**
	* network.inner
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: object
	* Description: Network.inner fields are added in addition to network.vlan fields to describe the innermost VLAN when q-in-q VLAN tagging is present. Allowed fields include vlan.id and vlan.name. Inner vlan fields are typically used when sending traffic with multiple 802.1q encapsulations to a network sensor (e.g. Zeek, Wireshark.)
	* Example: <None>
	*/
	"inner": object,

	/**
	* file.inode
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Inode representing the file in the filesystem.
	* Example: 256383
	*/
	"inode": string,

	/**
	* package.install_scope
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Indicating how the package was installed, e.g. user-local, global.
	* Example: global
	*/
	"install_scope": string,

	/**
	* package.installed
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: date
	* Description: Time when package was installed.
	* Example: <None>
	*/
	"installed": Date,

	instance: {
		/**
		* cloud.instance.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
		* Field Set: cloud
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Instance ID of the host machine.
		* Example: i-1234567890abcdef0
		*/
		"id": string,

		/**
		* cloud.instance.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
		* Field Set: cloud
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Instance name of the host machine.
		* Example: <None>
		*/
		"name": string,

	}
	/**
	* related.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-related.html
	* Field Set: related
	* Level: extended
	* Elasticsearch type: ip
	* Description: All of the IPs seen on your event.
	* Example: <None>
	*/
	"ip": string[],

	issuer: {
		/**
		* x509.issuer.common_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of common name (CN) of issuing certificate authority.
		* Example: Example SHA2 High Assurance Server CA
		*/
		"common_name": string[],

		/**
		* x509.issuer.country
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of country (C) codes
		* Example: US
		*/
		"country": string[],

		/**
		* x509.issuer.distinguished_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Distinguished name (DN) of issuing certificate authority.
		* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
		*/
		"distinguished_name": string,

		/**
		* x509.issuer.locality
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of locality names (L)
		* Example: Mountain View
		*/
		"locality": string[],

		/**
		* x509.issuer.organization
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of organizations (O) of issuing certificate authority.
		* Example: Example Inc
		*/
		"organization": string[],

		/**
		* x509.issuer.organizational_unit
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of organizational units (OU) of issuing certificate authority.
		* Example: www.example.com
		*/
		"organizational_unit": string[],

		/**
		* x509.issuer.state_or_province
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of state or province names (ST, S, or P)
		* Example: California
		*/
		"state_or_province": string[],

	}
	/**
	* os.kernel
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system kernel version as a raw string.
	* Example: 4.4.0-112-generic
	*/
	"kernel": string,

	/**
	* container.labels
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: extended
	* Elasticsearch type: object
	* Description: Image labels.
	* Example: <None>
	*/
	"labels": object,

	/**
	* rule.license
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the license under which the rule used to generate this event is made available.
	* Example: Apache 2.0
	*/
	"license": string,

	machine: {
		/**
		* cloud.machine.type
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
		* Field Set: cloud
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Machine type of the host machine.
		* Example: t2.medium
		*/
		"type": string,

	}
	/**
	* hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MD5 hash.
	* Example: <None>
	*/
	"md5": string,

	/**
	* file.mime_type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.
	* Example: <None>
	*/
	"mime_type": string,

	/**
	* file.mode
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Mode of the file in octal representation.
	* Example: 0640
	*/
	"mode": string,

	/**
	* file.mtime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Last time the file content was modified.
	* Example: <None>
	*/
	"mtime": Date,

	/**
	* vlan.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vlan.html
	* Field Set: vlan
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Optional VLAN name as reported by the observer.
	* Example: outside
	*/
	"name": string,

	nat: {
		/**
		* source.nat.ip
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: extended
		* Elasticsearch type: ip
		* Description: Translated ip of source based NAT sessions (e.g. internal client to internet) Typically connections traversing load balancers, firewalls, or routers.
		* Example: <None>
		*/
		"ip": string,

		/**
		* source.nat.port
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: extended
		* Elasticsearch type: long
		* Description: Translated port of source based NAT sessions. (e.g. internal client to internet) Typically used with load balancers, firewalls, or routers.
		* Example: <None>
		*/
		"port": number,

	}
	/**
	* tls.next_protocol
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: String indicating the protocol being tunneled. Per the values in the IANA registry (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids), this string should be lower case.
	* Example: http/1.1
	*/
	"next_protocol": string,

	node: {
		/**
		* service.node.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
		* Field Set: service
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Name of a service node. This allows for two nodes of the same service running on the same host to be differentiated. Therefore, `service.node.name` should typically be unique across nodes of a given service.
		In the case of Elasticsearch, the `service.node.name` could contain the unique node name within the Elasticsearch cluster. In cases where the service doesn't have the concept of a node name, the host name or container name can be used to distinguish running instances that make up this service. If those do not provide uniqueness (e.g. multiple instances of the service running on the same host) - the node name can be manually set.
		* Example: instance-0000000016
		*/
		"name": string,

	}
	/**
	* x509.not_after
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is no longer considered valid.
	* Example: 2020-07-16 03:15:39+00:00
	*/
	"not_after": Date,

	/**
	* x509.not_before
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is first considered valid.
	* Example: 2019-08-16 01:40:25+00:00
	*/
	"not_before": Date,

	/**
	* as.number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-as.html
	* Field Set: as
	* Level: extended
	* Elasticsearch type: long
	* Description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
	* Example: 15169
	*/
	"number": number,

	/**
	* dns.op_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The DNS operation code that specifies the kind of query in the message. This value is set by the originator of a query and copied into the response.
	* Example: QUERY
	*/
	"op_code": string,

	organization: {
		/**
		* as.organization.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-as.html
		* Field Set: as
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Organization name.
		* Example: Google LLC
		*/
		"name": string,

	}
	origin: {
		file: {
			/**
			* log.origin.file.line
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
			* Field Set: log
			* Level: extended
			* Elasticsearch type: integer
			* Description: The line number of the file containing the source code which originated the log event.
			* Example: 42
			*/
			"line": number,

			/**
			* log.origin.file.name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
			* Field Set: log
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The name of the file containing the source code which originated the log event. Note that this field is not meant to capture the log file. The correct field to capture the log file is `log.file.path`.
			* Example: Bootstrap.java
			*/
			"name": string,

		}
		/**
		* log.origin.function
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
		* Field Set: log
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The name of the function or method which originated the log event.
		* Example: init
		*/
		"function": string,

	}
	/**
	* user_agent.original
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unparsed user_agent string.
	* Example: Mozilla/5.0 (iPhone; CPU iPhone OS 12_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Mobile/15E148 Safari/604.1
	*/
	"original": string,

	/**
	* pe.original_file_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal name of the file, provided at compile-time.
	* Example: MSPAINT.EXE
	*/
	"original_file_name": string,

	os: {
		/**
		* user_agent.os.family
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
		* Field Set: user_agent
		* Level: extended
		* Elasticsearch type: keyword
		* Description: OS family (such as redhat, debian, freebsd, windows).
		* Example: debian
		*/
		"family": string,

		/**
		* user_agent.os.full
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
		* Field Set: user_agent
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Operating system name, including the version or code name.
		* Example: Mac OS Mojave
		*/
		"full": string,

		/**
		* user_agent.os.kernel
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
		* Field Set: user_agent
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Operating system kernel version as a raw string.
		* Example: 4.4.0-112-generic
		*/
		"kernel": string,

		/**
		* user_agent.os.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
		* Field Set: user_agent
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Operating system name, without the version.
		* Example: Mac OS X
		*/
		"name": string,

		/**
		* user_agent.os.platform
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
		* Field Set: user_agent
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Operating system platform (such centos, ubuntu, windows).
		* Example: darwin
		*/
		"platform": string,

		/**
		* user_agent.os.version
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
		* Field Set: user_agent
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Operating system version as a raw string.
		* Example: 10.14.1
		*/
		"version": string,

	}
	/**
	* file.owner
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: File owner's username.
	* Example: alice
	*/
	"owner": string,

	parent: {
		/**
		* process.parent.args
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Array of process arguments, starting with the absolute path to the executable. May be filtered to protect sensitive information.
		* Example: ["/usr/bin/ssh", "-l", "user", "10.0.0.16"]
		*/
		"args": string,

		/**
		* process.parent.args_count
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: long
		* Description: Length of the process.args array. This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.
		* Example: 4
		*/
		"args_count": number,

		code_signature: {
			/**
			* process.parent.code_signature.status
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
			* Example: ERROR_UNTRUSTED_ROOT
			*/
			"status": string,

			/**
			* process.parent.code_signature.trusted
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: boolean
			* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
			* Example: true
			*/
			"trusted": boolean,

			/**
			* process.parent.code_signature.valid
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: boolean
			* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
			* Example: true
			*/
			"valid": boolean,

		}
		/**
		* process.parent.command_line
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Full command line that started the process, including the absolute path to the executable, and all arguments. Some arguments may be filtered to protect sensitive information.
		* Example: /usr/bin/ssh -l user 10.0.0.16
		*/
		"command_line": string,

		/**
		* process.parent.entity_id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Unique identifier for the process. The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
		Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.
		* Example: c2c455d9f99375d
		*/
		"entity_id": string,

		/**
		* process.parent.executable
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Absolute path to the process executable.
		* Example: /usr/bin/ssh
		*/
		"executable": string,

		/**
		* process.parent.exit_code
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: long
		* Description: The exit code of the process, if this is a termination event. The field should be absent if there is no exit code for the event (e.g. process start).
		* Example: 137
		*/
		"exit_code": number,

		hash: {
			/**
			* process.parent.hash.md5
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: MD5 hash.
			* Example: <None>
			*/
			"md5": string,

			/**
			* process.parent.hash.sha1
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: SHA1 hash.
			* Example: <None>
			*/
			"sha1": string,

			/**
			* process.parent.hash.sha256
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: SHA256 hash.
			* Example: <None>
			*/
			"sha256": string,

			/**
			* process.parent.hash.sha512
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: SHA512 hash.
			* Example: <None>
			*/
			"sha512": string,

		}
		/**
		* process.parent.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Process name. Sometimes called program name or similar.
		* Example: ssh
		*/
		"name": string,

		pe: {
			/**
			* process.parent.pe.architecture
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: CPU architecture target for the file.
			* Example: x64
			*/
			"architecture": string,

			/**
			* process.parent.pe.company
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Internal company name of the file, provided at compile-time.
			* Example: Microsoft Corporation
			*/
			"company": string,

			/**
			* process.parent.pe.description
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Internal description of the file, provided at compile-time.
			* Example: Paint
			*/
			"description": string,

			/**
			* process.parent.pe.file_version
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Internal version of the file, provided at compile-time.
			* Example: 6.3.9600.17415
			*/
			"file_version": string,

			/**
			* process.parent.pe.imphash
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
			* Example: 0c6803c4e922103c4dca5963aad36ddf
			*/
			"imphash": string,

			/**
			* process.parent.pe.original_file_name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Internal name of the file, provided at compile-time.
			* Example: MSPAINT.EXE
			*/
			"original_file_name": string,

			/**
			* process.parent.pe.product
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Internal product name of the file, provided at compile-time.
			* Example: Microsoft® Windows® Operating System
			*/
			"product": string,

		}
		/**
		* process.parent.pgid
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: long
		* Description: Identifier of the group of processes the process belongs to.
		* Example: <None>
		*/
		"pgid": number,

		/**
		* process.parent.ppid
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: long
		* Description: Parent process' pid.
		* Example: 4241
		*/
		"ppid": number,

		/**
		* process.parent.start
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: date
		* Description: The time the process started.
		* Example: 2016-05-23T08:05:34.853Z
		*/
		"start": Date,

		thread: {
			/**
			* process.parent.thread.id
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: long
			* Description: Thread ID.
			* Example: 4242
			*/
			"id": number,

			/**
			* process.parent.thread.name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Thread name.
			* Example: thread-0
			*/
			"name": string,

		}
		/**
		* process.parent.title
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Process title. The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.
		* Example: <None>
		*/
		"title": string,

		/**
		* process.parent.uptime
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: long
		* Description: Seconds the process has been up.
		* Example: 1325
		*/
		"uptime": number,

		/**
		* process.parent.working_directory
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The working directory of the process.
		* Example: /home/alice
		*/
		"working_directory": string,

	}
	/**
	* url.password
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Password of the request.
	* Example: <None>
	*/
	"password": string,

	/**
	* url.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Path of the request, such as "/search".
	* Example: <None>
	*/
	"path": string,

	pe: {
		/**
		* process.pe.architecture
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: CPU architecture target for the file.
		* Example: x64
		*/
		"architecture": string,

		/**
		* process.pe.company
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Internal company name of the file, provided at compile-time.
		* Example: Microsoft Corporation
		*/
		"company": string,

		/**
		* process.pe.description
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Internal description of the file, provided at compile-time.
		* Example: Paint
		*/
		"description": string,

		/**
		* process.pe.file_version
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Internal version of the file, provided at compile-time.
		* Example: 6.3.9600.17415
		*/
		"file_version": string,

		/**
		* process.pe.imphash
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
		* Example: 0c6803c4e922103c4dca5963aad36ddf
		*/
		"imphash": string,

		/**
		* process.pe.original_file_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Internal name of the file, provided at compile-time.
		* Example: MSPAINT.EXE
		*/
		"original_file_name": string,

		/**
		* process.pe.product
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Internal product name of the file, provided at compile-time.
		* Example: Microsoft® Windows® Operating System
		*/
		"product": string,

	}
	/**
	* process.pgid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Identifier of the group of processes the process belongs to.
	* Example: <None>
	*/
	"pgid": number,

	/**
	* os.platform
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system platform (such centos, ubuntu, windows).
	* Example: darwin
	*/
	"platform": string,

	/**
	* url.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: long
	* Description: Port of the request, such as 443.
	* Example: 443
	*/
	"port": number,

	/**
	* process.ppid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Parent process' pid.
	* Example: 4241
	*/
	"ppid": number,

	/**
	* pe.product
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal product name of the file, provided at compile-time.
	* Example: Microsoft® Windows® Operating System
	*/
	"product": string,

	project: {
		/**
		* cloud.project.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
		* Field Set: cloud
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The cloud project identifier. Examples: Google Cloud Project id, Azure Project id.
		* Example: my-project
		*/
		"id": string,

		/**
		* cloud.project.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
		* Field Set: cloud
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The cloud project name. Examples: Google Cloud Project name, Azure Project name.
		* Example: my project
		*/
		"name": string,

	}
	/**
	* event.provider
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Source of the event. Event transports such as Syslog or the Windows Event Log typically mention the source of an event. It can be the name of the software that generated the event (e.g. Sysmon, httpd), or of a subsystem of the operating system (kernel, Microsoft-Windows-Security-Auditing).
	* Example: kernel
	*/
	"provider": string,

	/**
	* x509.public_key_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Algorithm used to generate the public key.
	* Example: RSA
	*/
	"public_key_algorithm": string,

	/**
	* x509.public_key_curve
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
	* Example: nistp521
	*/
	"public_key_curve": string,

	/**
	* x509.public_key_exponent
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: long
	* Description: Exponent used to derive the public key. This is algorithm specific.
	* Example: 65537
	*/
	"public_key_exponent": number,

	/**
	* x509.public_key_size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: long
	* Description: The size of the public key space in bits.
	* Example: 2048
	*/
	"public_key_size": number,

	/**
	* url.query
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The query field describes the query string of the request, such as "q=elasticsearch". The `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.
	* Example: <None>
	*/
	"query": string,

	question: {
		/**
		* dns.question.class
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
		* Field Set: dns
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The class of records being queried.
		* Example: IN
		*/
		"class": string,

		/**
		* dns.question.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
		* Field Set: dns
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The name being queried. If the name field contains non-printable characters (below 32 or above 126), those characters should be represented as escaped base 10 integers (\DDD). Back slashes and quotes should be escaped. Tabs, carriage returns, and line feeds should be converted to \t, \r, and \n respectively.
		* Example: www.example.com
		*/
		"name": string,

		/**
		* dns.question.registered_domain
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
		* Field Set: dns
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The highest registered domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
		This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
		* Example: example.com
		*/
		"registered_domain": string,

		/**
		* dns.question.subdomain
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
		* Field Set: dns
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The subdomain is all of the labels under the registered_domain. If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
		* Example: www
		*/
		"subdomain": string,

		/**
		* dns.question.top_level_domain
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
		* Field Set: dns
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
		* Example: co.uk
		*/
		"top_level_domain": string,

		/**
		* dns.question.type
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
		* Field Set: dns
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The type of record being queried.
		* Example: AAAA
		*/
		"type": string,

	}
	/**
	* event.reason
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Reason why this event happened, according to the source. This describes the why of a particular action or outcome captured in the event. Where `event.action` captures the action from the event, `event.reason` describes why that action was taken. For example, a web proxy with an `event.action` which denied the request may also populate `event.reason` with the reason why (e.g. `blocked site`).
	* Example: Terminated an unexpected process
	*/
	"reason": string,

	/**
	* vulnerability.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A resource that provides additional information, context, and mitigations for the identified vulnerability.
	* Example: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6111
	*/
	"reference": string,

	/**
	* cloud.region
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Region in which this host is running.
	* Example: us-east-1
	*/
	"region": string,

	/**
	* url.registered_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The highest registered url domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
	This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
	* Example: example.com
	*/
	"registered_domain": string,

	/**
	* vulnerability.report_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The report or scan identification number.
	* Example: 20191018.0001
	*/
	"report_id": string,

	request: {
		body: {
			/**
			* http.request.body.bytes
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
			* Field Set: http
			* Level: extended
			* Elasticsearch type: long
			* Description: Size in bytes of the request body.
			* Example: 887
			*/
			"bytes": number,

			/**
			* http.request.body.content
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
			* Field Set: http
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The full HTTP request body.
			* Example: Hello world
			*/
			"content": string,

		}
		/**
		* http.request.bytes
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
		* Field Set: http
		* Level: extended
		* Elasticsearch type: long
		* Description: Total size in bytes of the request (body and headers).
		* Example: 1437
		*/
		"bytes": number,

		/**
		* http.request.method
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
		* Field Set: http
		* Level: extended
		* Elasticsearch type: keyword
		* Description: HTTP request method. Prior to ECS 1.6.0 the following guidance was provided:
		"The field value must be normalized to lowercase for querying."
		As of ECS 1.6.0, the guidance is deprecated because the original case of the method may be useful in anomaly detection.  Original case will be mandated in ECS 2.0.0
		* Example: GET, POST, PUT, PoST
		*/
		"method": string,

		/**
		* http.request.mime_type
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
		* Field Set: http
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Mime type of the body of the request. This value must only be populated based on the content of the request body, not on the `Content-Type` header. Comparing the mime type of a request with the request's Content-Type header can be helpful in detecting threats or misconfigured clients.
		* Example: image/gif
		*/
		"mime_type": string,

		/**
		* http.request.referrer
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
		* Field Set: http
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Referrer for this HTTP request.
		* Example: https://blog.example.com/
		*/
		"referrer": string,

	}
	/**
	* dns.resolved_ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: ip
	* Description: Array containing all IPs seen in `answers.data`. The `answers` array can be difficult to use, because of the variety of data formats it can contain. Extracting all IP addresses seen in there to `dns.resolved_ip` makes it possible to index them as IP addresses, and makes them easier to visualize and query for.
	* Example: ["10.10.10.10", "10.10.10.11"]
	*/
	"resolved_ip": string[],

	response: {
		body: {
			/**
			* http.response.body.bytes
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
			* Field Set: http
			* Level: extended
			* Elasticsearch type: long
			* Description: Size in bytes of the response body.
			* Example: 887
			*/
			"bytes": number,

			/**
			* http.response.body.content
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
			* Field Set: http
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The full HTTP response body.
			* Example: Hello world
			*/
			"content": string,

		}
		/**
		* http.response.bytes
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
		* Field Set: http
		* Level: extended
		* Elasticsearch type: long
		* Description: Total size in bytes of the response (body and headers).
		* Example: 1437
		*/
		"bytes": number,

		/**
		* http.response.mime_type
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
		* Field Set: http
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Mime type of the body of the response. This value must only be populated based on the content of the response body, not on the `Content-Type` header. Comparing the mime type of a response with the response's Content-Type header can be helpful in detecting misconfigured servers.
		* Example: image/gif
		*/
		"mime_type": string,

		/**
		* http.response.status_code
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
		* Field Set: http
		* Level: extended
		* Elasticsearch type: long
		* Description: HTTP response status code.
		* Example: 404
		*/
		"status_code": number,

	}
	/**
	* dns.response_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The DNS response code.
	* Example: NOERROR
	*/
	"response_code": string,

	/**
	* tls.resumed
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean flag indicating if this TLS connection was resumed from an existing TLS negotiation.
	* Example: <None>
	*/
	"resumed": boolean,

	/**
	* event.risk_score_norm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: float
	* Description: Normalized risk score or priority of the event, on a scale of 0 to 100. This is mainly useful if you use more than one system that assigns risk scores, and you want to see a normalized value across all systems.
	* Example: <None>
	*/
	"risk_score_norm": number,

	/**
	* user.roles
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of user roles at the time of the event.
	* Example: ["kibana_admin", "reporting_user"]
	*/
	"roles": string[],

	/**
	* rule.ruleset
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the ruleset, policy, group, or parent category in which the rule used to generate this event is a member.
	* Example: Standard_Protocol_Filters
	*/
	"ruleset": string,

	/**
	* container.runtime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Runtime managing this container.
	* Example: docker
	*/
	"runtime": string,

	scanner: {
		/**
		* vulnerability.scanner.vendor
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
		* Field Set: vulnerability
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The name of the vulnerability scanner vendor.
		* Example: Tenable
		*/
		"vendor": string,

	}
	/**
	* url.scheme
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Scheme of the request, such as "https". Note: The `:` is not part of the scheme.
	* Example: https
	*/
	"scheme": string,

	score: {
		/**
		* vulnerability.score.base
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
		* Field Set: vulnerability
		* Level: extended
		* Elasticsearch type: float
		* Description: Scores can range from 0.0 to 10.0, with 10.0 being the most severe. Base scores cover an assessment for exploitability metrics (attack vector, complexity, privileges, and user interaction), impact metrics (confidentiality, integrity, and availability), and scope. For example (https://www.first.org/cvss/specification-document)
		* Example: 5.5
		*/
		"base": number,

		/**
		* vulnerability.score.environmental
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
		* Field Set: vulnerability
		* Level: extended
		* Elasticsearch type: float
		* Description: Scores can range from 0.0 to 10.0, with 10.0 being the most severe. Environmental scores cover an assessment for any modified Base metrics, confidentiality, integrity, and availability requirements. For example (https://www.first.org/cvss/specification-document)
		* Example: 5.5
		*/
		"environmental": number,

		/**
		* vulnerability.score.temporal
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
		* Field Set: vulnerability
		* Level: extended
		* Elasticsearch type: float
		* Description: Scores can range from 0.0 to 10.0, with 10.0 being the most severe. Temporal scores cover an assessment for code maturity, remediation level, and confidence. For example (https://www.first.org/cvss/specification-document)
		* Example: <None>
		*/
		"temporal": number,

		/**
		* vulnerability.score.version
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
		* Field Set: vulnerability
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The National Vulnerability Database (NVD) provides qualitative severity rankings of "Low", "Medium", and "High" for CVSS v2.0 base score ranges in addition to the severity ratings for CVSS v3.0 as they are defined in the CVSS v3.0 specification. CVSS is owned and managed by FIRST.Org, Inc. (FIRST), a US-based non-profit organization, whose mission is to help computer security incident response teams across the world. For example (https://nvd.nist.gov/vuln-metrics/cvss)
		* Example: 2
		*/
		"version": string,

	}
	/**
	* event.sequence
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: long
	* Description: Sequence number of the event. The sequence number is a value published by some event sources, to make the exact ordering of events unambiguous, regardless of the timestamp precision.
	* Example: <None>
	*/
	"sequence": number,

	/**
	* x509.serial_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
	* Example: 55FBB9C7DEBF09809D12CCAA
	*/
	"serial_number": string,

	server: {
		/**
		* tls.server.certificate
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: PEM-encoded stand-alone certificate offered by the server. This is usually mutually-exclusive of `server.certificate_chain` since this value also exists in that list.
		* Example: MII...
		*/
		"certificate": string,

		/**
		* tls.server.certificate_chain
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Array of PEM-encoded certificates that make up the certificate chain offered by the server. This is usually mutually-exclusive of `server.certificate` since that value should be the first certificate in the chain.
		* Example: ["MII...", "MII..."]
		*/
		"certificate_chain": string[],

		hash: {
			/**
			* tls.server.hash.md5
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
			* Example: 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC
			*/
			"md5": string,

			/**
			* tls.server.hash.sha1
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
			* Example: 9E393D93138888D288266C2D915214D1D1CCEB2A
			*/
			"sha1": string,

			/**
			* tls.server.hash.sha256
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
			* Example: 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0
			*/
			"sha256": string,

		}
		/**
		* tls.server.issuer
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Subject of the issuer of the x.509 certificate presented by the server.
		* Example: CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com
		*/
		"issuer": string,

		/**
		* tls.server.ja3s
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: A hash that identifies servers based on how they perform an SSL/TLS handshake.
		* Example: 394441ab65754e2207b1e1b457b3641d
		*/
		"ja3s": string,

		/**
		* tls.server.not_after
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: date
		* Description: Timestamp indicating when server certificate is no longer considered valid.
		* Example: 2021-01-01T00:00:00.000Z
		*/
		"not_after": Date,

		/**
		* tls.server.not_before
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: date
		* Description: Timestamp indicating when server certificate is first considered valid.
		* Example: 1970-01-01T00:00:00.000Z
		*/
		"not_before": Date,

		/**
		* tls.server.subject
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Subject of the x.509 certificate presented by the server.
		* Example: CN=www.example.com, OU=Infrastructure Team, DC=example, DC=com
		*/
		"subject": string,

		x509: {
			/**
			* tls.server.x509.alternative_names
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
			* Example: *.elastic.co
			*/
			"alternative_names": string,

			issuer: {
				/**
				* tls.server.x509.issuer.common_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of common name (CN) of issuing certificate authority.
				* Example: Example SHA2 High Assurance Server CA
				*/
				"common_name": string,

				/**
				* tls.server.x509.issuer.country
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of country (C) codes
				* Example: US
				*/
				"country": string,

				/**
				* tls.server.x509.issuer.distinguished_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: Distinguished name (DN) of issuing certificate authority.
				* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
				*/
				"distinguished_name": string,

				/**
				* tls.server.x509.issuer.locality
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of locality names (L)
				* Example: Mountain View
				*/
				"locality": string,

				/**
				* tls.server.x509.issuer.organization
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizations (O) of issuing certificate authority.
				* Example: Example Inc
				*/
				"organization": string,

				/**
				* tls.server.x509.issuer.organizational_unit
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizational units (OU) of issuing certificate authority.
				* Example: www.example.com
				*/
				"organizational_unit": string,

				/**
				* tls.server.x509.issuer.state_or_province
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of state or province names (ST, S, or P)
				* Example: California
				*/
				"state_or_province": string,

			}
			/**
			* tls.server.x509.not_after
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: date
			* Description: Time at which the certificate is no longer considered valid.
			* Example: 2020-07-16 03:15:39+00:00
			*/
			"not_after": Date,

			/**
			* tls.server.x509.not_before
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: date
			* Description: Time at which the certificate is first considered valid.
			* Example: 2019-08-16 01:40:25+00:00
			*/
			"not_before": Date,

			/**
			* tls.server.x509.public_key_algorithm
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Algorithm used to generate the public key.
			* Example: RSA
			*/
			"public_key_algorithm": string,

			/**
			* tls.server.x509.public_key_curve
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
			* Example: nistp521
			*/
			"public_key_curve": string,

			/**
			* tls.server.x509.public_key_exponent
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: long
			* Description: Exponent used to derive the public key. This is algorithm specific.
			* Example: 65537
			*/
			"public_key_exponent": number,

			/**
			* tls.server.x509.public_key_size
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: long
			* Description: The size of the public key space in bits.
			* Example: 2048
			*/
			"public_key_size": number,

			/**
			* tls.server.x509.serial_number
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
			* Example: 55FBB9C7DEBF09809D12CCAA
			*/
			"serial_number": string,

			/**
			* tls.server.x509.signature_algorithm
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
			* Example: SHA256-RSA
			*/
			"signature_algorithm": string,

			subject: {
				/**
				* tls.server.x509.subject.common_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of common names (CN) of subject.
				* Example: shared.global.example.net
				*/
				"common_name": string,

				/**
				* tls.server.x509.subject.country
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of country (C) code
				* Example: US
				*/
				"country": string,

				/**
				* tls.server.x509.subject.distinguished_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: Distinguished name (DN) of the certificate subject entity.
				* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
				*/
				"distinguished_name": string,

				/**
				* tls.server.x509.subject.locality
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of locality names (L)
				* Example: San Francisco
				*/
				"locality": string,

				/**
				* tls.server.x509.subject.organization
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizations (O) of subject.
				* Example: Example, Inc.
				*/
				"organization": string,

				/**
				* tls.server.x509.subject.organizational_unit
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizational units (OU) of subject.
				* Example: <None>
				*/
				"organizational_unit": string,

				/**
				* tls.server.x509.subject.state_or_province
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of state or province names (ST, S, or P)
				* Example: California
				*/
				"state_or_province": string,

			}
			/**
			* tls.server.x509.version_number
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Version of x509 format.
			* Example: 3
			*/
			"version_number": string,

		}
	}
	/**
	* vulnerability.severity
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The severity of the vulnerability can help with metrics and internal prioritization regarding remediation. For example (https://nvd.nist.gov/vuln-metrics/cvss)
	* Example: Critical
	*/
	"severity": string,

	/**
	* hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA1 hash.
	* Example: <None>
	*/
	"sha1": string,

	/**
	* hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA256 hash.
	* Example: <None>
	*/
	"sha256": string,

	/**
	* hash.sha512
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA512 hash.
	* Example: <None>
	*/
	"sha512": string,

	/**
	* x509.signature_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
	* Example: SHA256-RSA
	*/
	"signature_algorithm": string,

	/**
	* package.size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: long
	* Description: Package size in bytes.
	* Example: 62231
	*/
	"size": number,

	span: {
		/**
		* span.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
		* Field Set: base
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Unique identifier of the span within the scope of its trace. A span represents an operation within a transaction, such as a request to another service, or a database query.
		* Example: 3ff9a8981b7ccd5a
		*/
		"id": string,

	}
	/**
	* error.stack_trace
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The stack trace of this error in plain text.
	* Example: <None>
	*/
	"stack_trace": string,

	/**
	* process.start
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: date
	* Description: The time the process started.
	* Example: 2016-05-23T08:05:34.853Z
	*/
	"start": Date,

	/**
	* code_signature.status
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
	* Example: ERROR_UNTRUSTED_ROOT
	*/
	"status": string,

	/**
	* url.subdomain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain. For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
	* Example: east
	*/
	"subdomain": string,

	subject: {
		/**
		* x509.subject.common_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of common names (CN) of subject.
		* Example: shared.global.example.net
		*/
		"common_name": string[],

		/**
		* x509.subject.country
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of country (C) code
		* Example: US
		*/
		"country": string[],

		/**
		* x509.subject.distinguished_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Distinguished name (DN) of the certificate subject entity.
		* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
		*/
		"distinguished_name": string,

		/**
		* x509.subject.locality
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of locality names (L)
		* Example: San Francisco
		*/
		"locality": string[],

		/**
		* x509.subject.organization
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of organizations (O) of subject.
		* Example: Example, Inc.
		*/
		"organization": string[],

		/**
		* x509.subject.organizational_unit
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of organizational units (OU) of subject.
		* Example: <None>
		*/
		"organizational_unit": string[],

		/**
		* x509.subject.state_or_province
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of state or province names (ST, S, or P)
		* Example: California
		*/
		"state_or_province": string[],

	}
	/**
	* log.syslog
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: object
	* Description: The Syslog metadata of the event, if the event was transmitted via Syslog. Please see RFCs 5424 or 3164.
	* Example: <None>
	*/
	"syslog": object,

	tactic: {
		/**
		* threat.tactic.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
		* Field Set: threat
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The id of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )
		* Example: TA0002
		*/
		"id": string[],

		/**
		* threat.tactic.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
		* Field Set: threat
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Name of the type of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/)
		* Example: Execution
		*/
		"name": string[],

		/**
		* threat.tactic.reference
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
		* Field Set: threat
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The reference url of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )
		* Example: https://attack.mitre.org/tactics/TA0002/
		*/
		"reference": string[],

	}
	/**
	* file.target_path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Target path for symlinks.
	* Example: <None>
	*/
	"target_path": string,

	technique: {
		/**
		* threat.technique.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
		* Field Set: threat
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The id of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)
		* Example: T1059
		*/
		"id": string[],

		/**
		* threat.technique.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
		* Field Set: threat
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The name of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)
		* Example: Command and Scripting Interpreter
		*/
		"name": string[],

		/**
		* threat.technique.reference
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
		* Field Set: threat
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The reference url of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)
		* Example: https://attack.mitre.org/techniques/T1059/
		*/
		"reference": string[],

		subtechnique: {
			/**
			* threat.technique.subtechnique.id
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
			* Field Set: threat
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The full id of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)
			* Example: T1059.001
			*/
			"id": string[],

			/**
			* threat.technique.subtechnique.name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
			* Field Set: threat
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The name of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)
			* Example: PowerShell
			*/
			"name": string[],

			/**
			* threat.technique.subtechnique.reference
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
			* Field Set: threat
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The reference url of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)
			* Example: https://attack.mitre.org/techniques/T1059/001/
			*/
			"reference": string[],

		}
	}
	thread: {
		/**
		* process.thread.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: long
		* Description: Thread ID.
		* Example: 4242
		*/
		"id": number,

		/**
		* process.thread.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Thread name.
		* Example: thread-0
		*/
		"name": string,

	}
	/**
	* event.timezone
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: This field should be populated when the event's timestamp does not include timezone information already (e.g. default Syslog timestamps). It's optional otherwise. Acceptable timezone formats are: a canonical ID (e.g. "Europe/Amsterdam"), abbreviated (e.g. "EST") or an HH:mm differential (e.g. "-05:00").
	* Example: <None>
	*/
	"timezone": string,

	/**
	* process.title
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Process title. The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.
	* Example: <None>
	*/
	"title": string,

	/**
	* url.top_level_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
	* Example: co.uk
	*/
	"top_level_domain": string,

	trace: {
		/**
		* trace.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
		* Field Set: base
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Unique identifier of the trace. A trace groups multiple events like transactions that belong together. For example, a user request handled by multiple inter-connected services.
		* Example: 4bf92f3577b34da6a3ce929d0e0e4736
		*/
		"id": string,

	}
	transaction: {
		/**
		* transaction.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
		* Field Set: base
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Unique identifier of the transaction within the scope of its trace. A transaction is the highest level of work measured within a service, such as a request to a server.
		* Example: 00f067aa0ba902b7
		*/
		"id": string,

	}
	/**
	* code_signature.trusted
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
	* Example: true
	*/
	"trusted": boolean,

	/**
	* package.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Type of package. This should contain the package file type, rather than the package manager name. Examples: rpm, dpkg, brew, npm, gem, nupkg, jar.
	* Example: rpm
	*/
	"type": string,

	/**
	* file.uid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The user ID (UID) or security identifier (SID) of the file owner.
	* Example: 1001
	*/
	"uid": string,

	/**
	* process.uptime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Seconds the process has been up.
	* Example: 1325
	*/
	"uptime": number,

	/**
	* event.url
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: URL linking to an external system to continue investigation of this event. This URL links to another system where in-depth investigation of the specific occurrence of this event can take place. Alert events, indicated by `event.kind:alert`, are a common use case for this field.
	* Example: https://mysystem.example.com/alert/5271dedb-f5b0-4218-87f0-4ac4870a38fe
	*/
	"url": string,

	/**
	* related.user
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-related.html
	* Field Set: related
	* Level: extended
	* Elasticsearch type: keyword
	* Description: All the user names seen on your event.
	* Example: <None>
	*/
	"user": string[],

	/**
	* url.username
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Username of the request.
	* Example: <None>
	*/
	"username": string,

	/**
	* rule.uuid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A rule ID that is unique within the scope of a set or group of agents, observers, or other entities using the rule for detection of this event.
	* Example: 1100110011
	*/
	"uuid": string,

	/**
	* code_signature.valid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
	* Example: true
	*/
	"valid": boolean,

	/**
	* user_agent.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Version of the user agent.
	* Example: 12
	*/
	"version": string,

	/**
	* x509.version_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Version of x509 format.
	* Example: 3
	*/
	"version_number": string,

	/**
	* tls.version_protocol
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Normalized lowercase protocol name parsed from original string.
	* Example: tls
	*/
	"version_protocol": string,

	vlan: {
		/**
		* network.vlan.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
		* Field Set: network
		* Level: extended
		* Elasticsearch type: keyword
		* Description: VLAN ID as reported by the observer.
		* Example: 10
		*/
		"id": string,

		/**
		* network.vlan.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
		* Field Set: network
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Optional VLAN name as reported by the observer.
		* Example: outside
		*/
		"name": string,

	}
	/**
	* process.working_directory
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The working directory of the process.
	* Example: /home/alice
	*/
	"working_directory": string,

	x509: {
		/**
		* file.x509.alternative_names
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
		* Example: *.elastic.co
		*/
		"alternative_names": string,

		issuer: {
			/**
			* file.x509.issuer.common_name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of common name (CN) of issuing certificate authority.
			* Example: Example SHA2 High Assurance Server CA
			*/
			"common_name": string,

			/**
			* file.x509.issuer.country
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of country (C) codes
			* Example: US
			*/
			"country": string,

			/**
			* file.x509.issuer.distinguished_name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Distinguished name (DN) of issuing certificate authority.
			* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
			*/
			"distinguished_name": string,

			/**
			* file.x509.issuer.locality
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of locality names (L)
			* Example: Mountain View
			*/
			"locality": string,

			/**
			* file.x509.issuer.organization
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of organizations (O) of issuing certificate authority.
			* Example: Example Inc
			*/
			"organization": string,

			/**
			* file.x509.issuer.organizational_unit
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of organizational units (OU) of issuing certificate authority.
			* Example: www.example.com
			*/
			"organizational_unit": string,

			/**
			* file.x509.issuer.state_or_province
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of state or province names (ST, S, or P)
			* Example: California
			*/
			"state_or_province": string,

		}
		/**
		* file.x509.not_after
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: date
		* Description: Time at which the certificate is no longer considered valid.
		* Example: 2020-07-16 03:15:39+00:00
		*/
		"not_after": Date,

		/**
		* file.x509.not_before
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: date
		* Description: Time at which the certificate is first considered valid.
		* Example: 2019-08-16 01:40:25+00:00
		*/
		"not_before": Date,

		/**
		* file.x509.public_key_algorithm
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Algorithm used to generate the public key.
		* Example: RSA
		*/
		"public_key_algorithm": string,

		/**
		* file.x509.public_key_curve
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
		* Example: nistp521
		*/
		"public_key_curve": string,

		/**
		* file.x509.public_key_exponent
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: long
		* Description: Exponent used to derive the public key. This is algorithm specific.
		* Example: 65537
		*/
		"public_key_exponent": number,

		/**
		* file.x509.public_key_size
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: long
		* Description: The size of the public key space in bits.
		* Example: 2048
		*/
		"public_key_size": number,

		/**
		* file.x509.serial_number
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
		* Example: 55FBB9C7DEBF09809D12CCAA
		*/
		"serial_number": string,

		/**
		* file.x509.signature_algorithm
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
		* Example: SHA256-RSA
		*/
		"signature_algorithm": string,

		subject: {
			/**
			* file.x509.subject.common_name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of common names (CN) of subject.
			* Example: shared.global.example.net
			*/
			"common_name": string,

			/**
			* file.x509.subject.country
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of country (C) code
			* Example: US
			*/
			"country": string,

			/**
			* file.x509.subject.distinguished_name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Distinguished name (DN) of the certificate subject entity.
			* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
			*/
			"distinguished_name": string,

			/**
			* file.x509.subject.locality
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of locality names (L)
			* Example: San Francisco
			*/
			"locality": string,

			/**
			* file.x509.subject.organization
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of organizations (O) of subject.
			* Example: Example, Inc.
			*/
			"organization": string,

			/**
			* file.x509.subject.organizational_unit
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of organizational units (OU) of subject.
			* Example: <None>
			*/
			"organizational_unit": string,

			/**
			* file.x509.subject.state_or_province
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of state or province names (ST, S, or P)
			* Example: California
			*/
			"state_or_province": string,

		}
		/**
		* file.x509.version_number
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Version of x509 format.
		* Example: 3
		*/
		"version_number": string,

	}

}

export interface EcsTree {
	/**
	* @timestamp
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: core
	* Elasticsearch type: date
	* Description: Date/time when the event originated. This is the date/time extracted from the event, typically representing when the event was generated by the source.
	If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.
	Required field for all events.
	* Example: 2016-05-23T08:05:34.853Z
	*/
	"@timestamp": Date,

	/**
	* file.accessed
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Last time the file was accessed. Note that not all filesystems keep track of access time.
	* Example: <None>
	*/
	"accessed": Date,

	account: {
		/**
		* cloud.account.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
		* Field Set: cloud
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The cloud account or organization id used to identify different entities in a multi-tenant environment. Examples: AWS account id, Google Cloud ORG Id, or other unique identifier.
		* Example: 666777888999
		*/
		"id": string,

		/**
		* cloud.account.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
		* Field Set: cloud
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The cloud account name or alias used to identify different entities in a multi-tenant environment. Examples: AWS account name, Google Cloud ORG display name.
		* Example: elastic-dev
		*/
		"name": string,

	}
	/**
	* event.action
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: The action captured by the event. This describes the information in the event. It is more specific than `event.category`. Examples are `group-add`, `process-started`, `file-created`. The value is normally defined by the implementer.
	* Example: user-password-change
	*/
	"action": string,

	/**
	* source.address
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Some event source addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field. Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
	* Example: <None>
	*/
	"address": string,

	/**
	* interface.alias
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-interface.html
	* Field Set: interface
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.
	* Example: outside
	*/
	"alias": string,

	/**
	* x509.alternative_names
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
	* Example: *.elastic.co
	*/
	"alternative_names": string[],

	/**
	* dns.answers
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: object
	* Description: An array containing an object for each answer section returned by the server. The main keys that should be present in these objects are defined by ECS. Records that have more information may contain more keys than what ECS defines.
	Not all DNS data sources give all details about DNS answers. At minimum, answer objects must contain the `data` key. If more information is available, map as much of it to ECS as possible, and add any additional fields to the answer objects as custom fields.
	* Example: <None>
	*/
	"answers": object[],

	/**
	* network.application
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A name given to an application level protocol. This can be arbitrarily assigned for things like microservices, but also apply to things like skype, icq, facebook, twitter. This would be used in situations where the vendor or service can be decoded such as from the source/dest IP owners, ports, or wire format. The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
	* Example: aim
	*/
	"application": string,

	/**
	* pe.architecture
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: CPU architecture target for the file.
	* Example: x64
	*/
	"architecture": string,

	/**
	* process.args
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of process arguments, starting with the absolute path to the executable. May be filtered to protect sensitive information.
	* Example: ["/usr/bin/ssh", "-l", "user", "10.0.0.16"]
	*/
	"args": string[],

	/**
	* process.args_count
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Length of the process.args array. This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.
	* Example: 4
	*/
	"args_count": number,

	as: {
		/**
		* source.as.number
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: extended
		* Elasticsearch type: long
		* Description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
		* Example: 15169
		*/
		"number": number,

		organization: {
			/**
			* source.as.organization.name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
			* Field Set: source
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Organization name.
			* Example: Google LLC
			*/
			"name": string,

		}
	}
	/**
	* file.attributes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of file attributes. Attributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.
	* Example: ["readonly", "system"]
	*/
	"attributes": string[],

	/**
	* rule.author
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name, organization, or pseudonym of the author or authors who created the rule used to generate this event.
	* Example: ["Star-Lord"]
	*/
	"author": string[],

	/**
	* cloud.availability_zone
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Availability zone in which this host is running.
	* Example: us-east-1c
	*/
	"availability_zone": string,

	build: {
		/**
		* agent.build.original
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-agent.html
		* Field Set: agent
		* Level: core
		* Elasticsearch type: keyword
		* Description: Extended build information for the agent. This field is intended to contain any build information that a data source may provide, no specific formatting is required.
		* Example: metricbeat version 7.6.0 (amd64), libbeat 7.6.0 [6a23e8f8f30f5001ba344e4e54d8d9cb82cb107c built 2020-02-05 23:10:10 +0000 UTC]
		*/
		"original": string,

	}
	/**
	* package.build_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the build version of the installed package. For example use the commit SHA of a non-released package.
	* Example: 36f4f7e89dd61b0988b12ee000b98966867710cd
	*/
	"build_version": string,

	/**
	* source.bytes
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: long
	* Description: Bytes sent from the source to the destination.
	* Example: 184
	*/
	"bytes": number,

	/**
	* vulnerability.category
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of system or architecture that the vulnerability affects. These may be platform-specific (for example, Debian or SUSE) or general (for example, Database or Firewall). For example (https://qualysguard.qualys.com/qwebhelp/fo_portal/knowledgebase/vulnerability_categories.htm[Qualys vulnerability categories]) This field must be an array.
	* Example: ["Firewall"]
	*/
	"category": string[],

	/**
	* package.checksum
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Checksum of the installed package for verification.
	* Example: 68b329da9893e34099c7d8ad5cb9c940
	*/
	"checksum": string,

	/**
	* tls.cipher
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: String indicating the cipher used during the current connection.
	* Example: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
	*/
	"cipher": string,

	/**
	* geo.city_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: City name.
	* Example: Montreal
	*/
	"city_name": string,

	/**
	* vulnerability.classification
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The classification of the vulnerability scoring system. For example (https://www.first.org/cvss/)
	* Example: CVSS
	*/
	"classification": string,

	client: {
		/**
		* tls.client.certificate
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: PEM-encoded stand-alone certificate offered by the client. This is usually mutually-exclusive of `client.certificate_chain` since this value also exists in that list.
		* Example: MII...
		*/
		"certificate": string,

		/**
		* tls.client.certificate_chain
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Array of PEM-encoded certificates that make up the certificate chain offered by the client. This is usually mutually-exclusive of `client.certificate` since that value should be the first certificate in the chain.
		* Example: ["MII...", "MII..."]
		*/
		"certificate_chain": string[],

		hash: {
			/**
			* tls.client.hash.md5
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
			* Example: 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC
			*/
			"md5": string,

			/**
			* tls.client.hash.sha1
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
			* Example: 9E393D93138888D288266C2D915214D1D1CCEB2A
			*/
			"sha1": string,

			/**
			* tls.client.hash.sha256
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
			* Example: 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0
			*/
			"sha256": string,

		}
		/**
		* tls.client.issuer
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Distinguished name of subject of the issuer of the x.509 certificate presented by the client.
		* Example: CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com
		*/
		"issuer": string,

		/**
		* tls.client.ja3
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: A hash that identifies clients based on how they perform an SSL/TLS handshake.
		* Example: d4e5b18d6b55c71272893221c96ba240
		*/
		"ja3": string,

		/**
		* tls.client.not_after
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: date
		* Description: Date/Time indicating when client certificate is no longer considered valid.
		* Example: 2021-01-01T00:00:00.000Z
		*/
		"not_after": Date,

		/**
		* tls.client.not_before
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: date
		* Description: Date/Time indicating when client certificate is first considered valid.
		* Example: 1970-01-01T00:00:00.000Z
		*/
		"not_before": Date,

		/**
		* tls.client.server_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Also called an SNI, this tells the server which hostname to which the client is attempting to connect to. When this value is available, it should get copied to `destination.domain`.
		* Example: www.elastic.co
		*/
		"server_name": string,

		/**
		* tls.client.subject
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Distinguished name of subject of the x.509 certificate presented by the client.
		* Example: CN=myclient, OU=Documentation Team, DC=example, DC=com
		*/
		"subject": string,

		/**
		* tls.client.supported_ciphers
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Array of ciphers offered by the client during the client hello.
		* Example: ["TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", "..."]
		*/
		"supported_ciphers": string[],

		x509: {
			/**
			* tls.client.x509.alternative_names
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
			* Example: *.elastic.co
			*/
			"alternative_names": string,

			issuer: {
				/**
				* tls.client.x509.issuer.common_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of common name (CN) of issuing certificate authority.
				* Example: Example SHA2 High Assurance Server CA
				*/
				"common_name": string,

				/**
				* tls.client.x509.issuer.country
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of country (C) codes
				* Example: US
				*/
				"country": string,

				/**
				* tls.client.x509.issuer.distinguished_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: Distinguished name (DN) of issuing certificate authority.
				* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
				*/
				"distinguished_name": string,

				/**
				* tls.client.x509.issuer.locality
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of locality names (L)
				* Example: Mountain View
				*/
				"locality": string,

				/**
				* tls.client.x509.issuer.organization
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizations (O) of issuing certificate authority.
				* Example: Example Inc
				*/
				"organization": string,

				/**
				* tls.client.x509.issuer.organizational_unit
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizational units (OU) of issuing certificate authority.
				* Example: www.example.com
				*/
				"organizational_unit": string,

				/**
				* tls.client.x509.issuer.state_or_province
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of state or province names (ST, S, or P)
				* Example: California
				*/
				"state_or_province": string,

			}
			/**
			* tls.client.x509.not_after
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: date
			* Description: Time at which the certificate is no longer considered valid.
			* Example: 2020-07-16 03:15:39+00:00
			*/
			"not_after": Date,

			/**
			* tls.client.x509.not_before
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: date
			* Description: Time at which the certificate is first considered valid.
			* Example: 2019-08-16 01:40:25+00:00
			*/
			"not_before": Date,

			/**
			* tls.client.x509.public_key_algorithm
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Algorithm used to generate the public key.
			* Example: RSA
			*/
			"public_key_algorithm": string,

			/**
			* tls.client.x509.public_key_curve
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
			* Example: nistp521
			*/
			"public_key_curve": string,

			/**
			* tls.client.x509.public_key_exponent
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: long
			* Description: Exponent used to derive the public key. This is algorithm specific.
			* Example: 65537
			*/
			"public_key_exponent": number,

			/**
			* tls.client.x509.public_key_size
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: long
			* Description: The size of the public key space in bits.
			* Example: 2048
			*/
			"public_key_size": number,

			/**
			* tls.client.x509.serial_number
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
			* Example: 55FBB9C7DEBF09809D12CCAA
			*/
			"serial_number": string,

			/**
			* tls.client.x509.signature_algorithm
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
			* Example: SHA256-RSA
			*/
			"signature_algorithm": string,

			subject: {
				/**
				* tls.client.x509.subject.common_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of common names (CN) of subject.
				* Example: shared.global.example.net
				*/
				"common_name": string,

				/**
				* tls.client.x509.subject.country
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of country (C) code
				* Example: US
				*/
				"country": string,

				/**
				* tls.client.x509.subject.distinguished_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: Distinguished name (DN) of the certificate subject entity.
				* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
				*/
				"distinguished_name": string,

				/**
				* tls.client.x509.subject.locality
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of locality names (L)
				* Example: San Francisco
				*/
				"locality": string,

				/**
				* tls.client.x509.subject.organization
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizations (O) of subject.
				* Example: Example, Inc.
				*/
				"organization": string,

				/**
				* tls.client.x509.subject.organizational_unit
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizational units (OU) of subject.
				* Example: <None>
				*/
				"organizational_unit": string,

				/**
				* tls.client.x509.subject.state_or_province
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of state or province names (ST, S, or P)
				* Example: California
				*/
				"state_or_province": string,

			}
			/**
			* tls.client.x509.version_number
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Version of x509 format.
			* Example: 3
			*/
			"version_number": string,

		}
	}
	/**
	* event.code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Identification code for this event, if one exists. Some event sources use event codes to identify messages unambiguously, regardless of message language or wording adjustments over time. An example of this is the Windows Event ID.
	* Example: 4648
	*/
	"code": string,

	code_signature: {
		/**
		* process.code_signature.exists
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: core
		* Elasticsearch type: boolean
		* Description: Boolean to capture if a signature is present.
		* Example: true
		*/
		"exists": boolean,

		/**
		* process.code_signature.status
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
		* Example: ERROR_UNTRUSTED_ROOT
		*/
		"status": string,

		/**
		* process.code_signature.subject_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: core
		* Elasticsearch type: keyword
		* Description: Subject name of the code signer
		* Example: Microsoft Corporation
		*/
		"subject_name": string,

		/**
		* process.code_signature.trusted
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: boolean
		* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
		* Example: true
		*/
		"trusted": boolean,

		/**
		* process.code_signature.valid
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: boolean
		* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
		* Example: true
		*/
		"valid": boolean,

	}
	/**
	* process.command_line
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Full command line that started the process, including the absolute path to the executable, and all arguments. Some arguments may be filtered to protect sensitive information.
	* Example: /usr/bin/ssh -l user 10.0.0.16
	*/
	"command_line": string,

	/**
	* network.community_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of source and destination IPs and ports, as well as the protocol used in a communication. This is a tool-agnostic standard to identify flows. Learn more at https://github.com/corelight/community-id-spec.
	* Example: 1:hO+sN4H+MG5MY/8hIrXPqc4ZQz0=
	*/
	"community_id": string,

	/**
	* pe.company
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal company name of the file, provided at compile-time.
	* Example: Microsoft Corporation
	*/
	"company": string,

	/**
	* geo.continent_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the continent.
	* Example: North America
	*/
	"continent_name": string,

	/**
	* geo.country_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country ISO code.
	* Example: CA
	*/
	"country_iso_code": string,

	/**
	* geo.country_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Country name.
	* Example: Canada
	*/
	"country_name": string,

	/**
	* file.created
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: File creation time. Note that not all filesystems store the creation time.
	* Example: <None>
	*/
	"created": Date,

	/**
	* file.ctime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Last time the file attributes or metadata changed. Note that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file.
	* Example: <None>
	*/
	"ctime": Date,

	/**
	* tls.curve
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: String indicating the curve used for the given cipher, when applicable.
	* Example: secp256r1
	*/
	"curve": string,

	data: {
		/**
		* registry.data.bytes
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
		* Field Set: registry
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Original bytes written with base64 encoding. For Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values.
		* Example: ZQBuAC0AVQBTAAAAZQBuAAAAAAA=
		*/
		"bytes": string,

		/**
		* registry.data.strings
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
		* Field Set: registry
		* Level: core
		* Elasticsearch type: keyword
		* Description: Content when writing string types. Populated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `"1"`).
		* Example: ["C:\rta\red_ttp\bin\myapp.exe"]
		*/
		"strings": string[],

		/**
		* registry.data.type
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
		* Field Set: registry
		* Level: core
		* Elasticsearch type: keyword
		* Description: Standard registry type for encoding contents
		* Example: REG_SZ
		*/
		"type": string,

	}
	/**
	* event.dataset
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the dataset. If an event source publishes more than one type of log or events (e.g. access log, error log), the dataset is used to specify which one the event comes from.
	It's recommended but not required to start the dataset name with the module name, followed by a dot, then the dataset name.
	* Example: apache.access
	*/
	"dataset": string,

	/**
	* vulnerability.description
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The description of the vulnerability that provides additional context of the vulnerability. For example (https://cve.mitre.org/about/faqs.html#cve_entry_descriptions_created[Common Vulnerabilities and Exposure CVE description])
	* Example: In macOS before 2.12.6, there is a vulnerability in the RPC...
	*/
	"description": string,

	/**
	* file.device
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Device that is the source of the file.
	* Example: sda
	*/
	"device": string,

	/**
	* network.direction
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: keyword
	* Description: Direction of the network traffic. Recommended values are:
	  * ingress
	  * egress
	  * inbound
	  * outbound
	  * internal
	  * external
	  * unknown
	
	When mapping events from a host-based monitoring context, populate this field from the host's point of view, using the values "ingress" or "egress".
	When mapping events from a network or perimeter-based monitoring context, populate this field from the point of view of the network perimeter, using the values "inbound", "outbound", "internal" or "external".
	Note that "internal" is not crossing perimeter boundaries, and is meant to describe communication between two hosts within the perimeter. Note also that "external" is meant to describe traffic between two hosts that are external to the perimeter. This could for example be useful for ISPs or VPN service providers.
	* Example: inbound
	*/
	"direction": string,

	/**
	* file.directory
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Directory where the file is located. It should include the drive letter, when appropriate.
	* Example: /home/alice
	*/
	"directory": string,

	/**
	* user.domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the directory the user is a member of. For example, an LDAP or Active Directory domain name.
	* Example: <None>
	*/
	"domain": string,

	/**
	* file.drive_letter
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Drive letter where the file is located. This field is only relevant on Windows. The value should be uppercase, and not include the colon.
	* Example: C
	*/
	"drive_letter": string,

	/**
	* event.duration
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: long
	* Description: Duration of the event in nanoseconds. If event.start and event.end are known this value should be the difference between the end and start time.
	* Example: <None>
	*/
	"duration": number,

	/**
	* observer.egress
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: object
	* Description: Observer.egress holds information like interface number and name, vlan, and zone information to  classify egress traffic.  Single armed monitoring such as a network sensor on a span port should  only use observer.ingress to categorize traffic.
	* Example: <None>
	*/
	"egress": object,

	/**
	* user.email
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User email address.
	* Example: <None>
	*/
	"email": string,

	/**
	* event.end
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: date
	* Description: event.end contains the date when the event ended or when the activity was last observed.
	* Example: <None>
	*/
	"end": Date,

	/**
	* process.entity_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique identifier for the process. The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
	Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.
	* Example: c2c455d9f99375d
	*/
	"entity_id": string,

	/**
	* vulnerability.enumeration
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The type of identifier used for this vulnerability. For example (https://cve.mitre.org/about/)
	* Example: CVE
	*/
	"enumeration": string,

	/**
	* service.ephemeral_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Ephemeral identifier of this service (if one exists). This id normally changes across restarts, but `service.id` does not.
	* Example: 8a4f500f
	*/
	"ephemeral_id": string,

	/**
	* tls.established
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean flag indicating if the TLS negotiation was successful and transitioned to an encrypted tunnel.
	* Example: <None>
	*/
	"established": boolean,

	/**
	* process.executable
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Absolute path to the process executable.
	* Example: /usr/bin/ssh
	*/
	"executable": string,

	/**
	* code_signature.exists
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: core
	* Elasticsearch type: boolean
	* Description: Boolean to capture if a signature is present.
	* Example: true
	*/
	"exists": boolean,

	/**
	* process.exit_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: The exit code of the process, if this is a termination event. The field should be absent if there is no exit code for the event (e.g. process start).
	* Example: 137
	*/
	"exit_code": number,

	/**
	* url.extension
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The field contains the file extension from the original request url, excluding the leading dot. The file extension is only set if it exists, as not every url has a file extension.
	The leading period must not be included. For example, the value must be "png", not ".png".
	Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").
	* Example: png
	*/
	"extension": string,

	/**
	* os.family
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: OS family (such as redhat, debian, freebsd, windows).
	* Example: debian
	*/
	"family": string,

	file: {
		/**
		* log.file.path
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
		* Field Set: log
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Full path to the log file this event came from, including the file name. It should include the drive letter, when appropriate. If the event wasn't read from a log file, do not populate this field.
		* Example: /var/log/fun-times.log
		*/
		"path": string,

	}
	/**
	* pe.file_version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal version of the file, provided at compile-time.
	* Example: 6.3.9600.17415
	*/
	"file_version": string,

	/**
	* network.forwarded_ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: ip
	* Description: Host IP address when the source IP address is the proxy.
	* Example: 192.1.1.2
	*/
	"forwarded_ip": string,

	/**
	* url.fragment
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Portion of the url after the `#`, such as "top". The `#` is not part of the fragment.
	* Example: <None>
	*/
	"fragment": string,

	/**
	* threat.framework
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
	* Field Set: threat
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the threat framework used to further categorize and classify the tactic and technique of the reported threat. Framework classification can be provided by detecting systems, evaluated at ingest time, or retrospectively tagged to events.
	* Example: MITRE ATT&CK
	*/
	"framework": string,

	/**
	* url.full
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.
	* Example: https://www.elastic.co:443/search?q=elasticsearch#top
	*/
	"full": string,

	/**
	* user.full_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: User's full name, if available.
	* Example: Albert Einstein
	*/
	"full_name": string,

	geo: {
		/**
		* source.geo.city_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: keyword
		* Description: City name.
		* Example: Montreal
		*/
		"city_name": string,

		/**
		* source.geo.continent_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: keyword
		* Description: Name of the continent.
		* Example: North America
		*/
		"continent_name": string,

		/**
		* source.geo.country_iso_code
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: keyword
		* Description: Country ISO code.
		* Example: CA
		*/
		"country_iso_code": string,

		/**
		* source.geo.country_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: keyword
		* Description: Country name.
		* Example: Canada
		*/
		"country_name": string,

		/**
		* source.geo.location
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: geo_point
		* Description: Longitude and latitude.
		* Example: { "lon": -73.614830, "lat": 45.505918 }
		*/
		"location": GeoPoint,

		/**
		* source.geo.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: extended
		* Elasticsearch type: keyword
		* Description: User-defined description of a location, at the level of granularity they care about. Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
		Not typically used in automated geolocation.
		* Example: boston-dc
		*/
		"name": string,

		/**
		* source.geo.region_iso_code
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: keyword
		* Description: Region ISO code.
		* Example: CA-QC
		*/
		"region_iso_code": string,

		/**
		* source.geo.region_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: core
		* Elasticsearch type: keyword
		* Description: Region name.
		* Example: Quebec
		*/
		"region_name": string,

	}
	/**
	* file.gid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Primary group ID (GID) of the file.
	* Example: 1001
	*/
	"gid": string,

	/**
	* file.group
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Primary group name of the file.
	* Example: alice
	*/
	"group": string,

	/**
	* user.hash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique user hash to correlate information for a user in anonymized form. Useful if `user.id` or `user.name` contain confidential information and cannot be used.
	* Example: <None>
	*/
	"hash": string,

	/**
	* dns.header_flags
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of 2 letter DNS header flags. Expected values are: AA, TC, RD, RA, AD, CD, DO.
	* Example: ["RD", "RA"]
	*/
	"header_flags": string[],

	/**
	* registry.hive
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Abbreviated name for the hive.
	* Example: HKLM
	*/
	"hive": string,

	/**
	* observer.hostname
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Hostname of the observer.
	* Example: <None>
	*/
	"hostname": string,

	/**
	* related.hosts
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-related.html
	* Field Set: related
	* Level: extended
	* Elasticsearch type: keyword
	* Description: All hostnames or other host identifiers seen on your event. Example identifiers include FQDNs, domain names, workstation names, or aliases.
	* Example: <None>
	*/
	"hosts": string[],

	/**
	* network.iana_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: keyword
	* Description: IANA Protocol Number (https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Standardized list of protocols. This aligns well with NetFlow and sFlow related logs which use the IANA Protocol Number.
	* Example: 6
	*/
	"iana_number": string,

	/**
	* vulnerability.id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The identification (ID) is the number portion of a vulnerability entry. It includes a unique identification number for the vulnerability. For example (https://cve.mitre.org/about/faqs.html#what_is_cve_id)[Common Vulnerabilities and Exposure CVE ID]
	* Example: CVE-2019-00001
	*/
	"id": string,

	image: {
		/**
		* container.image.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
		* Field Set: container
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Name of the image the container was built on.
		* Example: <None>
		*/
		"name": string,

		/**
		* container.image.tag
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
		* Field Set: container
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Container image tags.
		* Example: <None>
		*/
		"tag": string[],

	}
	/**
	* pe.imphash
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
	* Example: 0c6803c4e922103c4dca5963aad36ddf
	*/
	"imphash": string,

	/**
	* event.ingested
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: date
	* Description: Timestamp when an event arrived in the central data store. This is different from `@timestamp`, which is when the event originally occurred.  It's also different from `event.created`, which is meant to capture the first time an agent saw the event.
	In normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`.
	* Example: 2016-05-23T08:05:35.101Z
	*/
	"ingested": Date,

	/**
	* observer.ingress
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: extended
	* Elasticsearch type: object
	* Description: Observer.ingress holds information like interface number and name, vlan, and zone information to  classify ingress traffic.  Single armed monitoring such as a network sensor on a span port should  only use observer.ingress to categorize traffic.
	* Example: <None>
	*/
	"ingress": object,

	/**
	* network.inner
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: extended
	* Elasticsearch type: object
	* Description: Network.inner fields are added in addition to network.vlan fields to describe the innermost VLAN when q-in-q VLAN tagging is present. Allowed fields include vlan.id and vlan.name. Inner vlan fields are typically used when sending traffic with multiple 802.1q encapsulations to a network sensor (e.g. Zeek, Wireshark.)
	* Example: <None>
	*/
	"inner": object,

	/**
	* file.inode
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Inode representing the file in the filesystem.
	* Example: 256383
	*/
	"inode": string,

	/**
	* package.install_scope
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Indicating how the package was installed, e.g. user-local, global.
	* Example: global
	*/
	"install_scope": string,

	/**
	* package.installed
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: date
	* Description: Time when package was installed.
	* Example: <None>
	*/
	"installed": Date,

	instance: {
		/**
		* cloud.instance.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
		* Field Set: cloud
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Instance ID of the host machine.
		* Example: i-1234567890abcdef0
		*/
		"id": string,

		/**
		* cloud.instance.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
		* Field Set: cloud
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Instance name of the host machine.
		* Example: <None>
		*/
		"name": string,

	}
	/**
	* related.ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-related.html
	* Field Set: related
	* Level: extended
	* Elasticsearch type: ip
	* Description: All of the IPs seen on your event.
	* Example: <None>
	*/
	"ip": string[],

	issuer: {
		/**
		* x509.issuer.common_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of common name (CN) of issuing certificate authority.
		* Example: Example SHA2 High Assurance Server CA
		*/
		"common_name": string[],

		/**
		* x509.issuer.country
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of country (C) codes
		* Example: US
		*/
		"country": string[],

		/**
		* x509.issuer.distinguished_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Distinguished name (DN) of issuing certificate authority.
		* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
		*/
		"distinguished_name": string,

		/**
		* x509.issuer.locality
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of locality names (L)
		* Example: Mountain View
		*/
		"locality": string[],

		/**
		* x509.issuer.organization
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of organizations (O) of issuing certificate authority.
		* Example: Example Inc
		*/
		"organization": string[],

		/**
		* x509.issuer.organizational_unit
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of organizational units (OU) of issuing certificate authority.
		* Example: www.example.com
		*/
		"organizational_unit": string[],

		/**
		* x509.issuer.state_or_province
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of state or province names (ST, S, or P)
		* Example: California
		*/
		"state_or_province": string[],

	}
	/**
	* os.kernel
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system kernel version as a raw string.
	* Example: 4.4.0-112-generic
	*/
	"kernel": string,

	/**
	* registry.key
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Hive-relative path of keys.
	* Example: SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe
	*/
	"key": string,

	/**
	* event.kind
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy. `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.
	The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.
	* Example: alert
	*/
	"kind": ('alert' | 'event' | 'metric' | 'state' | 'pipeline_error' | 'signal'),

	/**
	* container.labels
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: extended
	* Elasticsearch type: object
	* Description: Image labels.
	* Example: <None>
	*/
	"labels": object,

	/**
	* log.level
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: core
	* Elasticsearch type: keyword
	* Description: Original log level of the log event. If the source of the event provides a log level or textual severity, this is the one that goes in `log.level`. If your source doesn't specify one, you may put your event transport's severity here (e.g. Syslog severity).
	Some examples are `warn`, `err`, `i`, `informational`.
	* Example: error
	*/
	"level": string,

	/**
	* rule.license
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the license under which the rule used to generate this event is made available.
	* Example: Apache 2.0
	*/
	"license": string,

	/**
	* geo.location
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: geo_point
	* Description: Longitude and latitude.
	* Example: { "lon": -73.614830, "lat": 45.505918 }
	*/
	"location": GeoPoint,

	/**
	* log.logger
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: core
	* Elasticsearch type: keyword
	* Description: The name of the logger inside an application. This is usually the name of the class which initialized the logger, or can be a custom name.
	* Example: org.elasticsearch.bootstrap.Bootstrap
	*/
	"logger": string,

	/**
	* source.mac
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: keyword
	* Description: MAC address of the source.
	* Example: <None>
	*/
	"mac": string,

	machine: {
		/**
		* cloud.machine.type
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
		* Field Set: cloud
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Machine type of the host machine.
		* Example: t2.medium
		*/
		"type": string,

	}
	/**
	* hash.md5
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MD5 hash.
	* Example: <None>
	*/
	"md5": string,

	/**
	* error.message
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: core
	* Elasticsearch type: text
	* Description: Error message.
	* Example: <None>
	*/
	"message": string,

	/**
	* file.mime_type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.
	* Example: <None>
	*/
	"mime_type": string,

	/**
	* file.mode
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Mode of the file in octal representation.
	* Example: 0640
	*/
	"mode": string,

	/**
	* event.module
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the module this data is coming from. If your monitoring agent supports the concept of modules or plugins to process events of a given source (e.g. Apache logs), `event.module` should contain the name of this module.
	* Example: apache
	*/
	"module": string,

	/**
	* file.mtime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: date
	* Description: Last time the file content was modified.
	* Example: <None>
	*/
	"mtime": Date,

	/**
	* vlan.name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vlan.html
	* Field Set: vlan
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Optional VLAN name as reported by the observer.
	* Example: outside
	*/
	"name": string,

	nat: {
		/**
		* source.nat.ip
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: extended
		* Elasticsearch type: ip
		* Description: Translated ip of source based NAT sessions (e.g. internal client to internet) Typically connections traversing load balancers, firewalls, or routers.
		* Example: <None>
		*/
		"ip": string,

		/**
		* source.nat.port
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
		* Field Set: source
		* Level: extended
		* Elasticsearch type: long
		* Description: Translated port of source based NAT sessions. (e.g. internal client to internet) Typically used with load balancers, firewalls, or routers.
		* Example: <None>
		*/
		"port": number,

	}
	/**
	* tls.next_protocol
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: String indicating the protocol being tunneled. Per the values in the IANA registry (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids), this string should be lower case.
	* Example: http/1.1
	*/
	"next_protocol": string,

	node: {
		/**
		* service.node.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
		* Field Set: service
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Name of a service node. This allows for two nodes of the same service running on the same host to be differentiated. Therefore, `service.node.name` should typically be unique across nodes of a given service.
		In the case of Elasticsearch, the `service.node.name` could contain the unique node name within the Elasticsearch cluster. In cases where the service doesn't have the concept of a node name, the host name or container name can be used to distinguish running instances that make up this service. If those do not provide uniqueness (e.g. multiple instances of the service running on the same host) - the node name can be manually set.
		* Example: instance-0000000016
		*/
		"name": string,

	}
	/**
	* x509.not_after
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is no longer considered valid.
	* Example: 2020-07-16 03:15:39+00:00
	*/
	"not_after": Date,

	/**
	* x509.not_before
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: date
	* Description: Time at which the certificate is first considered valid.
	* Example: 2019-08-16 01:40:25+00:00
	*/
	"not_before": Date,

	/**
	* as.number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-as.html
	* Field Set: as
	* Level: extended
	* Elasticsearch type: long
	* Description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
	* Example: 15169
	*/
	"number": number,

	/**
	* dns.op_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The DNS operation code that specifies the kind of query in the message. This value is set by the originator of a query and copied into the response.
	* Example: QUERY
	*/
	"op_code": string,

	organization: {
		/**
		* as.organization.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-as.html
		* Field Set: as
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Organization name.
		* Example: Google LLC
		*/
		"name": string,

	}
	origin: {
		file: {
			/**
			* log.origin.file.line
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
			* Field Set: log
			* Level: extended
			* Elasticsearch type: integer
			* Description: The line number of the file containing the source code which originated the log event.
			* Example: 42
			*/
			"line": number,

			/**
			* log.origin.file.name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
			* Field Set: log
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The name of the file containing the source code which originated the log event. Note that this field is not meant to capture the log file. The correct field to capture the log file is `log.file.path`.
			* Example: Bootstrap.java
			*/
			"name": string,

		}
		/**
		* log.origin.function
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
		* Field Set: log
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The name of the function or method which originated the log event.
		* Example: init
		*/
		"function": string,

	}
	/**
	* user_agent.original
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unparsed user_agent string.
	* Example: Mozilla/5.0 (iPhone; CPU iPhone OS 12_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Mobile/15E148 Safari/604.1
	*/
	"original": string,

	/**
	* pe.original_file_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal name of the file, provided at compile-time.
	* Example: MSPAINT.EXE
	*/
	"original_file_name": string,

	os: {
		/**
		* user_agent.os.family
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
		* Field Set: user_agent
		* Level: extended
		* Elasticsearch type: keyword
		* Description: OS family (such as redhat, debian, freebsd, windows).
		* Example: debian
		*/
		"family": string,

		/**
		* user_agent.os.full
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
		* Field Set: user_agent
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Operating system name, including the version or code name.
		* Example: Mac OS Mojave
		*/
		"full": string,

		/**
		* user_agent.os.kernel
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
		* Field Set: user_agent
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Operating system kernel version as a raw string.
		* Example: 4.4.0-112-generic
		*/
		"kernel": string,

		/**
		* user_agent.os.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
		* Field Set: user_agent
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Operating system name, without the version.
		* Example: Mac OS X
		*/
		"name": string,

		/**
		* user_agent.os.platform
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
		* Field Set: user_agent
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Operating system platform (such centos, ubuntu, windows).
		* Example: darwin
		*/
		"platform": string,

		/**
		* user_agent.os.version
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
		* Field Set: user_agent
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Operating system version as a raw string.
		* Example: 10.14.1
		*/
		"version": string,

	}
	/**
	* event.outcome
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: keyword
	* Description: This is one of four ECS Categorization Fields, and indicates the lowest level in the ECS category hierarchy. `event.outcome` simply denotes whether the event represents a success or a failure from the perspective of the entity that produced the event.
	Note that when a single transaction is described in multiple events, each event may populate different values of `event.outcome`, according to their perspective.
	Also note that in the case of a compound event (a single event that contains multiple logical events), this field should be populated with the value that best captures the overall success or failure from the perspective of the event producer.
	Further note that not all events will have an associated outcome. For example, this field is generally not populated for metric events, events with `event.type:info`, or any events for which an outcome does not make logical sense.
	* Example: success
	*/
	"outcome": ('failure' | 'success' | 'unknown'),

	/**
	* file.owner
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: File owner's username.
	* Example: alice
	*/
	"owner": string,

	/**
	* source.packets
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-source.html
	* Field Set: source
	* Level: core
	* Elasticsearch type: long
	* Description: Packets sent from the source to the destination.
	* Example: 12
	*/
	"packets": number,

	parent: {
		/**
		* process.parent.args
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Array of process arguments, starting with the absolute path to the executable. May be filtered to protect sensitive information.
		* Example: ["/usr/bin/ssh", "-l", "user", "10.0.0.16"]
		*/
		"args": string,

		/**
		* process.parent.args_count
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: long
		* Description: Length of the process.args array. This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.
		* Example: 4
		*/
		"args_count": number,

		code_signature: {
			/**
			* process.parent.code_signature.exists
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: core
			* Elasticsearch type: boolean
			* Description: Boolean to capture if a signature is present.
			* Example: true
			*/
			"exists": boolean,

			/**
			* process.parent.code_signature.status
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
			* Example: ERROR_UNTRUSTED_ROOT
			*/
			"status": string,

			/**
			* process.parent.code_signature.subject_name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: core
			* Elasticsearch type: keyword
			* Description: Subject name of the code signer
			* Example: Microsoft Corporation
			*/
			"subject_name": string,

			/**
			* process.parent.code_signature.trusted
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: boolean
			* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
			* Example: true
			*/
			"trusted": boolean,

			/**
			* process.parent.code_signature.valid
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: boolean
			* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
			* Example: true
			*/
			"valid": boolean,

		}
		/**
		* process.parent.command_line
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Full command line that started the process, including the absolute path to the executable, and all arguments. Some arguments may be filtered to protect sensitive information.
		* Example: /usr/bin/ssh -l user 10.0.0.16
		*/
		"command_line": string,

		/**
		* process.parent.entity_id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Unique identifier for the process. The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
		Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.
		* Example: c2c455d9f99375d
		*/
		"entity_id": string,

		/**
		* process.parent.executable
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Absolute path to the process executable.
		* Example: /usr/bin/ssh
		*/
		"executable": string,

		/**
		* process.parent.exit_code
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: long
		* Description: The exit code of the process, if this is a termination event. The field should be absent if there is no exit code for the event (e.g. process start).
		* Example: 137
		*/
		"exit_code": number,

		hash: {
			/**
			* process.parent.hash.md5
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: MD5 hash.
			* Example: <None>
			*/
			"md5": string,

			/**
			* process.parent.hash.sha1
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: SHA1 hash.
			* Example: <None>
			*/
			"sha1": string,

			/**
			* process.parent.hash.sha256
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: SHA256 hash.
			* Example: <None>
			*/
			"sha256": string,

			/**
			* process.parent.hash.sha512
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: SHA512 hash.
			* Example: <None>
			*/
			"sha512": string,

		}
		/**
		* process.parent.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Process name. Sometimes called program name or similar.
		* Example: ssh
		*/
		"name": string,

		pe: {
			/**
			* process.parent.pe.architecture
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: CPU architecture target for the file.
			* Example: x64
			*/
			"architecture": string,

			/**
			* process.parent.pe.company
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Internal company name of the file, provided at compile-time.
			* Example: Microsoft Corporation
			*/
			"company": string,

			/**
			* process.parent.pe.description
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Internal description of the file, provided at compile-time.
			* Example: Paint
			*/
			"description": string,

			/**
			* process.parent.pe.file_version
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Internal version of the file, provided at compile-time.
			* Example: 6.3.9600.17415
			*/
			"file_version": string,

			/**
			* process.parent.pe.imphash
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
			* Example: 0c6803c4e922103c4dca5963aad36ddf
			*/
			"imphash": string,

			/**
			* process.parent.pe.original_file_name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Internal name of the file, provided at compile-time.
			* Example: MSPAINT.EXE
			*/
			"original_file_name": string,

			/**
			* process.parent.pe.product
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Internal product name of the file, provided at compile-time.
			* Example: Microsoft® Windows® Operating System
			*/
			"product": string,

		}
		/**
		* process.parent.pgid
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: long
		* Description: Identifier of the group of processes the process belongs to.
		* Example: <None>
		*/
		"pgid": number,

		/**
		* process.parent.pid
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: core
		* Elasticsearch type: long
		* Description: Process id.
		* Example: 4242
		*/
		"pid": number,

		/**
		* process.parent.ppid
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: long
		* Description: Parent process' pid.
		* Example: 4241
		*/
		"ppid": number,

		/**
		* process.parent.start
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: date
		* Description: The time the process started.
		* Example: 2016-05-23T08:05:34.853Z
		*/
		"start": Date,

		thread: {
			/**
			* process.parent.thread.id
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: long
			* Description: Thread ID.
			* Example: 4242
			*/
			"id": number,

			/**
			* process.parent.thread.name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
			* Field Set: process
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Thread name.
			* Example: thread-0
			*/
			"name": string,

		}
		/**
		* process.parent.title
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Process title. The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.
		* Example: <None>
		*/
		"title": string,

		/**
		* process.parent.uptime
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: long
		* Description: Seconds the process has been up.
		* Example: 1325
		*/
		"uptime": number,

		/**
		* process.parent.working_directory
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The working directory of the process.
		* Example: /home/alice
		*/
		"working_directory": string,

	}
	/**
	* url.password
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Password of the request.
	* Example: <None>
	*/
	"password": string,

	/**
	* url.path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Path of the request, such as "/search".
	* Example: <None>
	*/
	"path": string,

	pe: {
		/**
		* process.pe.architecture
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: CPU architecture target for the file.
		* Example: x64
		*/
		"architecture": string,

		/**
		* process.pe.company
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Internal company name of the file, provided at compile-time.
		* Example: Microsoft Corporation
		*/
		"company": string,

		/**
		* process.pe.description
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Internal description of the file, provided at compile-time.
		* Example: Paint
		*/
		"description": string,

		/**
		* process.pe.file_version
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Internal version of the file, provided at compile-time.
		* Example: 6.3.9600.17415
		*/
		"file_version": string,

		/**
		* process.pe.imphash
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values. Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
		* Example: 0c6803c4e922103c4dca5963aad36ddf
		*/
		"imphash": string,

		/**
		* process.pe.original_file_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Internal name of the file, provided at compile-time.
		* Example: MSPAINT.EXE
		*/
		"original_file_name": string,

		/**
		* process.pe.product
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Internal product name of the file, provided at compile-time.
		* Example: Microsoft® Windows® Operating System
		*/
		"product": string,

	}
	/**
	* process.pgid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Identifier of the group of processes the process belongs to.
	* Example: <None>
	*/
	"pgid": number,

	/**
	* process.pid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: core
	* Elasticsearch type: long
	* Description: Process id.
	* Example: 4242
	*/
	"pid": number,

	/**
	* os.platform
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-os.html
	* Field Set: os
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Operating system platform (such centos, ubuntu, windows).
	* Example: darwin
	*/
	"platform": string,

	/**
	* url.port
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: long
	* Description: Port of the request, such as 443.
	* Example: 443
	*/
	"port": number,

	/**
	* process.ppid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Parent process' pid.
	* Example: 4241
	*/
	"ppid": number,

	/**
	* pe.product
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-pe.html
	* Field Set: pe
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Internal product name of the file, provided at compile-time.
	* Example: Microsoft® Windows® Operating System
	*/
	"product": string,

	project: {
		/**
		* cloud.project.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
		* Field Set: cloud
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The cloud project identifier. Examples: Google Cloud Project id, Azure Project id.
		* Example: my-project
		*/
		"id": string,

		/**
		* cloud.project.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
		* Field Set: cloud
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The cloud project name. Examples: Google Cloud Project name, Azure Project name.
		* Example: my project
		*/
		"name": string,

	}
	/**
	* network.protocol
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: keyword
	* Description: L7 Network protocol name. ex. http, lumberjack, transport protocol. The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
	* Example: http
	*/
	"protocol": string,

	/**
	* event.provider
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Source of the event. Event transports such as Syslog or the Windows Event Log typically mention the source of an event. It can be the name of the software that generated the event (e.g. Sysmon, httpd), or of a subsystem of the operating system (kernel, Microsoft-Windows-Security-Auditing).
	* Example: kernel
	*/
	"provider": string,

	/**
	* x509.public_key_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Algorithm used to generate the public key.
	* Example: RSA
	*/
	"public_key_algorithm": string,

	/**
	* x509.public_key_curve
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
	* Example: nistp521
	*/
	"public_key_curve": string,

	/**
	* x509.public_key_exponent
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: long
	* Description: Exponent used to derive the public key. This is algorithm specific.
	* Example: 65537
	*/
	"public_key_exponent": number,

	/**
	* x509.public_key_size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: long
	* Description: The size of the public key space in bits.
	* Example: 2048
	*/
	"public_key_size": number,

	/**
	* url.query
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The query field describes the query string of the request, such as "q=elasticsearch". The `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.
	* Example: <None>
	*/
	"query": string,

	question: {
		/**
		* dns.question.class
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
		* Field Set: dns
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The class of records being queried.
		* Example: IN
		*/
		"class": string,

		/**
		* dns.question.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
		* Field Set: dns
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The name being queried. If the name field contains non-printable characters (below 32 or above 126), those characters should be represented as escaped base 10 integers (\DDD). Back slashes and quotes should be escaped. Tabs, carriage returns, and line feeds should be converted to \t, \r, and \n respectively.
		* Example: www.example.com
		*/
		"name": string,

		/**
		* dns.question.registered_domain
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
		* Field Set: dns
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The highest registered domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
		This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
		* Example: example.com
		*/
		"registered_domain": string,

		/**
		* dns.question.subdomain
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
		* Field Set: dns
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The subdomain is all of the labels under the registered_domain. If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
		* Example: www
		*/
		"subdomain": string,

		/**
		* dns.question.top_level_domain
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
		* Field Set: dns
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
		* Example: co.uk
		*/
		"top_level_domain": string,

		/**
		* dns.question.type
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
		* Field Set: dns
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The type of record being queried.
		* Example: AAAA
		*/
		"type": string,

	}
	/**
	* event.reason
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Reason why this event happened, according to the source. This describes the why of a particular action or outcome captured in the event. Where `event.action` captures the action from the event, `event.reason` describes why that action was taken. For example, a web proxy with an `event.action` which denied the request may also populate `event.reason` with the reason why (e.g. `blocked site`).
	* Example: Terminated an unexpected process
	*/
	"reason": string,

	/**
	* vulnerability.reference
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A resource that provides additional information, context, and mitigations for the identified vulnerability.
	* Example: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6111
	*/
	"reference": string,

	/**
	* cloud.region
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-cloud.html
	* Field Set: cloud
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Region in which this host is running.
	* Example: us-east-1
	*/
	"region": string,

	/**
	* geo.region_iso_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region ISO code.
	* Example: CA-QC
	*/
	"region_iso_code": string,

	/**
	* geo.region_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-geo.html
	* Field Set: geo
	* Level: core
	* Elasticsearch type: keyword
	* Description: Region name.
	* Example: Quebec
	*/
	"region_name": string,

	/**
	* url.registered_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The highest registered url domain, stripped of the subdomain. For example, the registered domain for "foo.example.com" is "example.com".
	This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
	* Example: example.com
	*/
	"registered_domain": string,

	/**
	* vulnerability.report_id
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The report or scan identification number.
	* Example: 20191018.0001
	*/
	"report_id": string,

	request: {
		body: {
			/**
			* http.request.body.bytes
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
			* Field Set: http
			* Level: extended
			* Elasticsearch type: long
			* Description: Size in bytes of the request body.
			* Example: 887
			*/
			"bytes": number,

			/**
			* http.request.body.content
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
			* Field Set: http
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The full HTTP request body.
			* Example: Hello world
			*/
			"content": string,

		}
		/**
		* http.request.bytes
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
		* Field Set: http
		* Level: extended
		* Elasticsearch type: long
		* Description: Total size in bytes of the request (body and headers).
		* Example: 1437
		*/
		"bytes": number,

		/**
		* http.request.method
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
		* Field Set: http
		* Level: extended
		* Elasticsearch type: keyword
		* Description: HTTP request method. Prior to ECS 1.6.0 the following guidance was provided:
		"The field value must be normalized to lowercase for querying."
		As of ECS 1.6.0, the guidance is deprecated because the original case of the method may be useful in anomaly detection.  Original case will be mandated in ECS 2.0.0
		* Example: GET, POST, PUT, PoST
		*/
		"method": string,

		/**
		* http.request.mime_type
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
		* Field Set: http
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Mime type of the body of the request. This value must only be populated based on the content of the request body, not on the `Content-Type` header. Comparing the mime type of a request with the request's Content-Type header can be helpful in detecting threats or misconfigured clients.
		* Example: image/gif
		*/
		"mime_type": string,

		/**
		* http.request.referrer
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
		* Field Set: http
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Referrer for this HTTP request.
		* Example: https://blog.example.com/
		*/
		"referrer": string,

	}
	/**
	* dns.resolved_ip
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: ip
	* Description: Array containing all IPs seen in `answers.data`. The `answers` array can be difficult to use, because of the variety of data formats it can contain. Extracting all IP addresses seen in there to `dns.resolved_ip` makes it possible to index them as IP addresses, and makes them easier to visualize and query for.
	* Example: ["10.10.10.10", "10.10.10.11"]
	*/
	"resolved_ip": string[],

	response: {
		body: {
			/**
			* http.response.body.bytes
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
			* Field Set: http
			* Level: extended
			* Elasticsearch type: long
			* Description: Size in bytes of the response body.
			* Example: 887
			*/
			"bytes": number,

			/**
			* http.response.body.content
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
			* Field Set: http
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The full HTTP response body.
			* Example: Hello world
			*/
			"content": string,

		}
		/**
		* http.response.bytes
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
		* Field Set: http
		* Level: extended
		* Elasticsearch type: long
		* Description: Total size in bytes of the response (body and headers).
		* Example: 1437
		*/
		"bytes": number,

		/**
		* http.response.mime_type
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
		* Field Set: http
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Mime type of the body of the response. This value must only be populated based on the content of the response body, not on the `Content-Type` header. Comparing the mime type of a response with the response's Content-Type header can be helpful in detecting misconfigured servers.
		* Example: image/gif
		*/
		"mime_type": string,

		/**
		* http.response.status_code
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-http.html
		* Field Set: http
		* Level: extended
		* Elasticsearch type: long
		* Description: HTTP response status code.
		* Example: 404
		*/
		"status_code": number,

	}
	/**
	* dns.response_code
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-dns.html
	* Field Set: dns
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The DNS response code.
	* Example: NOERROR
	*/
	"response_code": string,

	/**
	* tls.resumed
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean flag indicating if this TLS connection was resumed from an existing TLS negotiation.
	* Example: <None>
	*/
	"resumed": boolean,

	/**
	* event.risk_score
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: core
	* Elasticsearch type: float
	* Description: Risk score or priority of the event (e.g. security solutions). Use your system's original value here.
	* Example: <None>
	*/
	"risk_score": number,

	/**
	* event.risk_score_norm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: float
	* Description: Normalized risk score or priority of the event, on a scale of 0 to 100. This is mainly useful if you use more than one system that assigns risk scores, and you want to see a normalized value across all systems.
	* Example: <None>
	*/
	"risk_score_norm": number,

	/**
	* user.roles
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user.html
	* Field Set: user
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Array of user roles at the time of the event.
	* Example: ["kibana_admin", "reporting_user"]
	*/
	"roles": string[],

	/**
	* rule.ruleset
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Name of the ruleset, policy, group, or parent category in which the rule used to generate this event is a member.
	* Example: Standard_Protocol_Filters
	*/
	"ruleset": string,

	/**
	* container.runtime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-container.html
	* Field Set: container
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Runtime managing this container.
	* Example: docker
	*/
	"runtime": string,

	scanner: {
		/**
		* vulnerability.scanner.vendor
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
		* Field Set: vulnerability
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The name of the vulnerability scanner vendor.
		* Example: Tenable
		*/
		"vendor": string,

	}
	/**
	* url.scheme
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Scheme of the request, such as "https". Note: The `:` is not part of the scheme.
	* Example: https
	*/
	"scheme": string,

	score: {
		/**
		* vulnerability.score.base
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
		* Field Set: vulnerability
		* Level: extended
		* Elasticsearch type: float
		* Description: Scores can range from 0.0 to 10.0, with 10.0 being the most severe. Base scores cover an assessment for exploitability metrics (attack vector, complexity, privileges, and user interaction), impact metrics (confidentiality, integrity, and availability), and scope. For example (https://www.first.org/cvss/specification-document)
		* Example: 5.5
		*/
		"base": number,

		/**
		* vulnerability.score.environmental
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
		* Field Set: vulnerability
		* Level: extended
		* Elasticsearch type: float
		* Description: Scores can range from 0.0 to 10.0, with 10.0 being the most severe. Environmental scores cover an assessment for any modified Base metrics, confidentiality, integrity, and availability requirements. For example (https://www.first.org/cvss/specification-document)
		* Example: 5.5
		*/
		"environmental": number,

		/**
		* vulnerability.score.temporal
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
		* Field Set: vulnerability
		* Level: extended
		* Elasticsearch type: float
		* Description: Scores can range from 0.0 to 10.0, with 10.0 being the most severe. Temporal scores cover an assessment for code maturity, remediation level, and confidence. For example (https://www.first.org/cvss/specification-document)
		* Example: <None>
		*/
		"temporal": number,

		/**
		* vulnerability.score.version
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
		* Field Set: vulnerability
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The National Vulnerability Database (NVD) provides qualitative severity rankings of "Low", "Medium", and "High" for CVSS v2.0 base score ranges in addition to the severity ratings for CVSS v3.0 as they are defined in the CVSS v3.0 specification. CVSS is owned and managed by FIRST.Org, Inc. (FIRST), a US-based non-profit organization, whose mission is to help computer security incident response teams across the world. For example (https://nvd.nist.gov/vuln-metrics/cvss)
		* Example: 2
		*/
		"version": string,

	}
	/**
	* event.sequence
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: long
	* Description: Sequence number of the event. The sequence number is a value published by some event sources, to make the exact ordering of events unambiguous, regardless of the timestamp precision.
	* Example: <None>
	*/
	"sequence": number,

	/**
	* x509.serial_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
	* Example: 55FBB9C7DEBF09809D12CCAA
	*/
	"serial_number": string,

	server: {
		/**
		* tls.server.certificate
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: PEM-encoded stand-alone certificate offered by the server. This is usually mutually-exclusive of `server.certificate_chain` since this value also exists in that list.
		* Example: MII...
		*/
		"certificate": string,

		/**
		* tls.server.certificate_chain
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Array of PEM-encoded certificates that make up the certificate chain offered by the server. This is usually mutually-exclusive of `server.certificate` since that value should be the first certificate in the chain.
		* Example: ["MII...", "MII..."]
		*/
		"certificate_chain": string[],

		hash: {
			/**
			* tls.server.hash.md5
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
			* Example: 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC
			*/
			"md5": string,

			/**
			* tls.server.hash.sha1
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
			* Example: 9E393D93138888D288266C2D915214D1D1CCEB2A
			*/
			"sha1": string,

			/**
			* tls.server.hash.sha256
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
			* Example: 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0
			*/
			"sha256": string,

		}
		/**
		* tls.server.issuer
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Subject of the issuer of the x.509 certificate presented by the server.
		* Example: CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com
		*/
		"issuer": string,

		/**
		* tls.server.ja3s
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: A hash that identifies servers based on how they perform an SSL/TLS handshake.
		* Example: 394441ab65754e2207b1e1b457b3641d
		*/
		"ja3s": string,

		/**
		* tls.server.not_after
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: date
		* Description: Timestamp indicating when server certificate is no longer considered valid.
		* Example: 2021-01-01T00:00:00.000Z
		*/
		"not_after": Date,

		/**
		* tls.server.not_before
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: date
		* Description: Timestamp indicating when server certificate is first considered valid.
		* Example: 1970-01-01T00:00:00.000Z
		*/
		"not_before": Date,

		/**
		* tls.server.subject
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
		* Field Set: tls
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Subject of the x.509 certificate presented by the server.
		* Example: CN=www.example.com, OU=Infrastructure Team, DC=example, DC=com
		*/
		"subject": string,

		x509: {
			/**
			* tls.server.x509.alternative_names
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
			* Example: *.elastic.co
			*/
			"alternative_names": string,

			issuer: {
				/**
				* tls.server.x509.issuer.common_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of common name (CN) of issuing certificate authority.
				* Example: Example SHA2 High Assurance Server CA
				*/
				"common_name": string,

				/**
				* tls.server.x509.issuer.country
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of country (C) codes
				* Example: US
				*/
				"country": string,

				/**
				* tls.server.x509.issuer.distinguished_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: Distinguished name (DN) of issuing certificate authority.
				* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
				*/
				"distinguished_name": string,

				/**
				* tls.server.x509.issuer.locality
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of locality names (L)
				* Example: Mountain View
				*/
				"locality": string,

				/**
				* tls.server.x509.issuer.organization
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizations (O) of issuing certificate authority.
				* Example: Example Inc
				*/
				"organization": string,

				/**
				* tls.server.x509.issuer.organizational_unit
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizational units (OU) of issuing certificate authority.
				* Example: www.example.com
				*/
				"organizational_unit": string,

				/**
				* tls.server.x509.issuer.state_or_province
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of state or province names (ST, S, or P)
				* Example: California
				*/
				"state_or_province": string,

			}
			/**
			* tls.server.x509.not_after
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: date
			* Description: Time at which the certificate is no longer considered valid.
			* Example: 2020-07-16 03:15:39+00:00
			*/
			"not_after": Date,

			/**
			* tls.server.x509.not_before
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: date
			* Description: Time at which the certificate is first considered valid.
			* Example: 2019-08-16 01:40:25+00:00
			*/
			"not_before": Date,

			/**
			* tls.server.x509.public_key_algorithm
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Algorithm used to generate the public key.
			* Example: RSA
			*/
			"public_key_algorithm": string,

			/**
			* tls.server.x509.public_key_curve
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
			* Example: nistp521
			*/
			"public_key_curve": string,

			/**
			* tls.server.x509.public_key_exponent
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: long
			* Description: Exponent used to derive the public key. This is algorithm specific.
			* Example: 65537
			*/
			"public_key_exponent": number,

			/**
			* tls.server.x509.public_key_size
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: long
			* Description: The size of the public key space in bits.
			* Example: 2048
			*/
			"public_key_size": number,

			/**
			* tls.server.x509.serial_number
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
			* Example: 55FBB9C7DEBF09809D12CCAA
			*/
			"serial_number": string,

			/**
			* tls.server.x509.signature_algorithm
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
			* Example: SHA256-RSA
			*/
			"signature_algorithm": string,

			subject: {
				/**
				* tls.server.x509.subject.common_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of common names (CN) of subject.
				* Example: shared.global.example.net
				*/
				"common_name": string,

				/**
				* tls.server.x509.subject.country
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of country (C) code
				* Example: US
				*/
				"country": string,

				/**
				* tls.server.x509.subject.distinguished_name
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: Distinguished name (DN) of the certificate subject entity.
				* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
				*/
				"distinguished_name": string,

				/**
				* tls.server.x509.subject.locality
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of locality names (L)
				* Example: San Francisco
				*/
				"locality": string,

				/**
				* tls.server.x509.subject.organization
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizations (O) of subject.
				* Example: Example, Inc.
				*/
				"organization": string,

				/**
				* tls.server.x509.subject.organizational_unit
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of organizational units (OU) of subject.
				* Example: <None>
				*/
				"organizational_unit": string,

				/**
				* tls.server.x509.subject.state_or_province
				* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
				* Field Set: tls
				* Level: extended
				* Elasticsearch type: keyword
				* Description: List of state or province names (ST, S, or P)
				* Example: California
				*/
				"state_or_province": string,

			}
			/**
			* tls.server.x509.version_number
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
			* Field Set: tls
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Version of x509 format.
			* Example: 3
			*/
			"version_number": string,

		}
	}
	/**
	* vulnerability.severity
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-vulnerability.html
	* Field Set: vulnerability
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The severity of the vulnerability can help with metrics and internal prioritization regarding remediation. For example (https://nvd.nist.gov/vuln-metrics/cvss)
	* Example: Critical
	*/
	"severity": string,

	/**
	* hash.sha1
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA1 hash.
	* Example: <None>
	*/
	"sha1": string,

	/**
	* hash.sha256
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA256 hash.
	* Example: <None>
	*/
	"sha256": string,

	/**
	* hash.sha512
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-hash.html
	* Field Set: hash
	* Level: extended
	* Elasticsearch type: keyword
	* Description: SHA512 hash.
	* Example: <None>
	*/
	"sha512": string,

	/**
	* x509.signature_algorithm
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
	* Example: SHA256-RSA
	*/
	"signature_algorithm": string,

	/**
	* package.size
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: long
	* Description: Package size in bytes.
	* Example: 62231
	*/
	"size": number,

	span: {
		/**
		* span.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
		* Field Set: base
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Unique identifier of the span within the scope of its trace. A span represents an operation within a transaction, such as a request to another service, or a database query.
		* Example: 3ff9a8981b7ccd5a
		*/
		"id": string,

	}
	/**
	* error.stack_trace
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-error.html
	* Field Set: error
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The stack trace of this error in plain text.
	* Example: <None>
	*/
	"stack_trace": string,

	/**
	* process.start
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: date
	* Description: The time the process started.
	* Example: 2016-05-23T08:05:34.853Z
	*/
	"start": Date,

	/**
	* service.state
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-service.html
	* Field Set: service
	* Level: core
	* Elasticsearch type: keyword
	* Description: Current state of the service.
	* Example: <None>
	*/
	"state": string,

	/**
	* code_signature.status
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Additional information about the certificate status. This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
	* Example: ERROR_UNTRUSTED_ROOT
	*/
	"status": string,

	/**
	* url.subdomain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain. For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
	* Example: east
	*/
	"subdomain": string,

	subject: {
		/**
		* x509.subject.common_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of common names (CN) of subject.
		* Example: shared.global.example.net
		*/
		"common_name": string[],

		/**
		* x509.subject.country
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of country (C) code
		* Example: US
		*/
		"country": string[],

		/**
		* x509.subject.distinguished_name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Distinguished name (DN) of the certificate subject entity.
		* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
		*/
		"distinguished_name": string,

		/**
		* x509.subject.locality
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of locality names (L)
		* Example: San Francisco
		*/
		"locality": string[],

		/**
		* x509.subject.organization
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of organizations (O) of subject.
		* Example: Example, Inc.
		*/
		"organization": string[],

		/**
		* x509.subject.organizational_unit
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of organizational units (OU) of subject.
		* Example: <None>
		*/
		"organizational_unit": string[],

		/**
		* x509.subject.state_or_province
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
		* Field Set: x509
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of state or province names (ST, S, or P)
		* Example: California
		*/
		"state_or_province": string[],

	}
	/**
	* code_signature.subject_name
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: core
	* Elasticsearch type: keyword
	* Description: Subject name of the code signer
	* Example: Microsoft Corporation
	*/
	"subject_name": string,

	/**
	* log.syslog
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-log.html
	* Field Set: log
	* Level: extended
	* Elasticsearch type: object
	* Description: The Syslog metadata of the event, if the event was transmitted via Syslog. Please see RFCs 5424 or 3164.
	* Example: <None>
	*/
	"syslog": object,

	tactic: {
		/**
		* threat.tactic.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
		* Field Set: threat
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The id of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )
		* Example: TA0002
		*/
		"id": string[],

		/**
		* threat.tactic.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
		* Field Set: threat
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Name of the type of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/)
		* Example: Execution
		*/
		"name": string[],

		/**
		* threat.tactic.reference
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
		* Field Set: threat
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The reference url of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )
		* Example: https://attack.mitre.org/tactics/TA0002/
		*/
		"reference": string[],

	}
	/**
	* tags
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
	* Field Set: base
	* Level: core
	* Elasticsearch type: keyword
	* Description: List of keywords used to tag each event.
	* Example: ["production", "env2"]
	*/
	"tags": string[],

	/**
	* file.target_path
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Target path for symlinks.
	* Example: <None>
	*/
	"target_path": string,

	technique: {
		/**
		* threat.technique.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
		* Field Set: threat
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The id of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)
		* Example: T1059
		*/
		"id": string[],

		/**
		* threat.technique.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
		* Field Set: threat
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The name of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)
		* Example: Command and Scripting Interpreter
		*/
		"name": string[],

		/**
		* threat.technique.reference
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
		* Field Set: threat
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The reference url of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)
		* Example: https://attack.mitre.org/techniques/T1059/
		*/
		"reference": string[],

		subtechnique: {
			/**
			* threat.technique.subtechnique.id
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
			* Field Set: threat
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The full id of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)
			* Example: T1059.001
			*/
			"id": string[],

			/**
			* threat.technique.subtechnique.name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
			* Field Set: threat
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The name of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)
			* Example: PowerShell
			*/
			"name": string[],

			/**
			* threat.technique.subtechnique.reference
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-threat.html
			* Field Set: threat
			* Level: extended
			* Elasticsearch type: keyword
			* Description: The reference url of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)
			* Example: https://attack.mitre.org/techniques/T1059/001/
			*/
			"reference": string[],

		}
	}
	thread: {
		/**
		* process.thread.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: long
		* Description: Thread ID.
		* Example: 4242
		*/
		"id": number,

		/**
		* process.thread.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
		* Field Set: process
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Thread name.
		* Example: thread-0
		*/
		"name": string,

	}
	/**
	* event.timezone
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: This field should be populated when the event's timestamp does not include timezone information already (e.g. default Syslog timestamps). It's optional otherwise. Acceptable timezone formats are: a canonical ID (e.g. "Europe/Amsterdam"), abbreviated (e.g. "EST") or an HH:mm differential (e.g. "-05:00").
	* Example: <None>
	*/
	"timezone": string,

	/**
	* process.title
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Process title. The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.
	* Example: <None>
	*/
	"title": string,

	/**
	* url.top_level_domain
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com". This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
	* Example: co.uk
	*/
	"top_level_domain": string,

	trace: {
		/**
		* trace.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
		* Field Set: base
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Unique identifier of the trace. A trace groups multiple events like transactions that belong together. For example, a user request handled by multiple inter-connected services.
		* Example: 4bf92f3577b34da6a3ce929d0e0e4736
		*/
		"id": string,

	}
	transaction: {
		/**
		* transaction.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-base.html
		* Field Set: base
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Unique identifier of the transaction within the scope of its trace. A transaction is the highest level of work measured within a service, such as a request to a server.
		* Example: 00f067aa0ba902b7
		*/
		"id": string,

	}
	/**
	* network.transport
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
	* Field Set: network
	* Level: core
	* Elasticsearch type: keyword
	* Description: Same as network.iana_number, but instead using the Keyword name of the transport layer (udp, tcp, ipv6-icmp, etc.) The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
	* Example: tcp
	*/
	"transport": string,

	/**
	* code_signature.trusted
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Stores the trust status of the certificate chain. Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
	* Example: true
	*/
	"trusted": boolean,

	/**
	* package.type
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-package.html
	* Field Set: package
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Type of package. This should contain the package file type, rather than the package manager name. Examples: rpm, dpkg, brew, npm, gem, nupkg, jar.
	* Example: rpm
	*/
	"type": string,

	/**
	* file.uid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
	* Field Set: file
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The user ID (UID) or security identifier (SID) of the file owner.
	* Example: 1001
	*/
	"uid": string,

	/**
	* process.uptime
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: long
	* Description: Seconds the process has been up.
	* Example: 1325
	*/
	"uptime": number,

	/**
	* event.url
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-event.html
	* Field Set: event
	* Level: extended
	* Elasticsearch type: keyword
	* Description: URL linking to an external system to continue investigation of this event. This URL links to another system where in-depth investigation of the specific occurrence of this event can take place. Alert events, indicated by `event.kind:alert`, are a common use case for this field.
	* Example: https://mysystem.example.com/alert/5271dedb-f5b0-4218-87f0-4ac4870a38fe
	*/
	"url": string,

	/**
	* related.user
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-related.html
	* Field Set: related
	* Level: extended
	* Elasticsearch type: keyword
	* Description: All the user names seen on your event.
	* Example: <None>
	*/
	"user": string[],

	/**
	* url.username
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-url.html
	* Field Set: url
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Username of the request.
	* Example: <None>
	*/
	"username": string,

	/**
	* rule.uuid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-rule.html
	* Field Set: rule
	* Level: extended
	* Elasticsearch type: keyword
	* Description: A rule ID that is unique within the scope of a set or group of agents, observers, or other entities using the rule for detection of this event.
	* Example: 1100110011
	*/
	"uuid": string,

	/**
	* code_signature.valid
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-code_signature.html
	* Field Set: code_signature
	* Level: extended
	* Elasticsearch type: boolean
	* Description: Boolean to capture if the digital signature is verified against the binary content. Leave unpopulated if a certificate was unchecked.
	* Example: true
	*/
	"valid": boolean,

	/**
	* registry.value
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-registry.html
	* Field Set: registry
	* Level: core
	* Elasticsearch type: keyword
	* Description: Name of the value written.
	* Example: Debugger
	*/
	"value": string,

	/**
	* observer.vendor
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-observer.html
	* Field Set: observer
	* Level: core
	* Elasticsearch type: keyword
	* Description: Vendor name of the observer.
	* Example: Symantec
	*/
	"vendor": string,

	/**
	* user_agent.version
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-user_agent.html
	* Field Set: user_agent
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Version of the user agent.
	* Example: 12
	*/
	"version": string,

	/**
	* x509.version_number
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-x509.html
	* Field Set: x509
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Version of x509 format.
	* Example: 3
	*/
	"version_number": string,

	/**
	* tls.version_protocol
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-tls.html
	* Field Set: tls
	* Level: extended
	* Elasticsearch type: keyword
	* Description: Normalized lowercase protocol name parsed from original string.
	* Example: tls
	*/
	"version_protocol": string,

	vlan: {
		/**
		* network.vlan.id
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
		* Field Set: network
		* Level: extended
		* Elasticsearch type: keyword
		* Description: VLAN ID as reported by the observer.
		* Example: 10
		*/
		"id": string,

		/**
		* network.vlan.name
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-network.html
		* Field Set: network
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Optional VLAN name as reported by the observer.
		* Example: outside
		*/
		"name": string,

	}
	/**
	* process.working_directory
	* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-process.html
	* Field Set: process
	* Level: extended
	* Elasticsearch type: keyword
	* Description: The working directory of the process.
	* Example: /home/alice
	*/
	"working_directory": string,

	x509: {
		/**
		* file.x509.alternative_names
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: keyword
		* Description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
		* Example: *.elastic.co
		*/
		"alternative_names": string,

		issuer: {
			/**
			* file.x509.issuer.common_name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of common name (CN) of issuing certificate authority.
			* Example: Example SHA2 High Assurance Server CA
			*/
			"common_name": string,

			/**
			* file.x509.issuer.country
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of country (C) codes
			* Example: US
			*/
			"country": string,

			/**
			* file.x509.issuer.distinguished_name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Distinguished name (DN) of issuing certificate authority.
			* Example: C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA
			*/
			"distinguished_name": string,

			/**
			* file.x509.issuer.locality
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of locality names (L)
			* Example: Mountain View
			*/
			"locality": string,

			/**
			* file.x509.issuer.organization
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of organizations (O) of issuing certificate authority.
			* Example: Example Inc
			*/
			"organization": string,

			/**
			* file.x509.issuer.organizational_unit
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of organizational units (OU) of issuing certificate authority.
			* Example: www.example.com
			*/
			"organizational_unit": string,

			/**
			* file.x509.issuer.state_or_province
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of state or province names (ST, S, or P)
			* Example: California
			*/
			"state_or_province": string,

		}
		/**
		* file.x509.not_after
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: date
		* Description: Time at which the certificate is no longer considered valid.
		* Example: 2020-07-16 03:15:39+00:00
		*/
		"not_after": Date,

		/**
		* file.x509.not_before
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: date
		* Description: Time at which the certificate is first considered valid.
		* Example: 2019-08-16 01:40:25+00:00
		*/
		"not_before": Date,

		/**
		* file.x509.public_key_algorithm
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Algorithm used to generate the public key.
		* Example: RSA
		*/
		"public_key_algorithm": string,

		/**
		* file.x509.public_key_curve
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: keyword
		* Description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
		* Example: nistp521
		*/
		"public_key_curve": string,

		/**
		* file.x509.public_key_exponent
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: long
		* Description: Exponent used to derive the public key. This is algorithm specific.
		* Example: 65537
		*/
		"public_key_exponent": number,

		/**
		* file.x509.public_key_size
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: long
		* Description: The size of the public key space in bits.
		* Example: 2048
		*/
		"public_key_size": number,

		/**
		* file.x509.serial_number
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
		* Example: 55FBB9C7DEBF09809D12CCAA
		*/
		"serial_number": string,

		/**
		* file.x509.signature_algorithm
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
		* Example: SHA256-RSA
		*/
		"signature_algorithm": string,

		subject: {
			/**
			* file.x509.subject.common_name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of common names (CN) of subject.
			* Example: shared.global.example.net
			*/
			"common_name": string,

			/**
			* file.x509.subject.country
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of country (C) code
			* Example: US
			*/
			"country": string,

			/**
			* file.x509.subject.distinguished_name
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: Distinguished name (DN) of the certificate subject entity.
			* Example: C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net
			*/
			"distinguished_name": string,

			/**
			* file.x509.subject.locality
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of locality names (L)
			* Example: San Francisco
			*/
			"locality": string,

			/**
			* file.x509.subject.organization
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of organizations (O) of subject.
			* Example: Example, Inc.
			*/
			"organization": string,

			/**
			* file.x509.subject.organizational_unit
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of organizational units (OU) of subject.
			* Example: <None>
			*/
			"organizational_unit": string,

			/**
			* file.x509.subject.state_or_province
			* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
			* Field Set: file
			* Level: extended
			* Elasticsearch type: keyword
			* Description: List of state or province names (ST, S, or P)
			* Example: California
			*/
			"state_or_province": string,

		}
		/**
		* file.x509.version_number
		* Docs: https://www.elastic.co/guide/en/ecs/1.7/ecs-file.html
		* Field Set: file
		* Level: extended
		* Elasticsearch type: keyword
		* Description: Version of x509 format.
		* Example: 3
		*/
		"version_number": string,

	}

}